// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        connect_7_dout,
        connect_7_num_data_valid,
        connect_7_fifo_cap,
        connect_7_empty_n,
        connect_7_read,
        connect_8_din,
        connect_8_num_data_valid,
        connect_8_fifo_cap,
        connect_8_full_n,
        connect_8_write,
        valIn_a_53,
        mul_ln73_2,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] connect_7_dout;
input  [6:0] connect_7_num_data_valid;
input  [6:0] connect_7_fifo_cap;
input   connect_7_empty_n;
output   connect_7_read;
output  [31:0] connect_8_din;
input  [6:0] connect_8_num_data_valid;
input  [6:0] connect_8_fifo_cap;
input   connect_8_full_n;
output   connect_8_write;
input  [31:0] valIn_a_53;
input  [31:0] mul_ln73_2;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1;

reg ap_idle;
reg connect_7_read;
reg connect_8_write;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
reg   [0:0] or_ln79_reg_396;
reg   [0:0] or_ln79_reg_396_pp0_iter12_reg;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln76_fu_198_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    connect_8_blk_n;
wire    ap_block_pp0_stage0;
reg    connect_7_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] select_ln76_fu_228_p3;
reg   [8:0] select_ln76_reg_385;
wire   [0:0] or_ln79_fu_286_p2;
reg   [0:0] or_ln79_reg_396_pp0_iter1_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter2_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter3_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter4_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter5_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter6_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter7_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter8_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter9_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter10_reg;
reg   [0:0] or_ln79_reg_396_pp0_iter11_reg;
reg   [7:0] tmp_reg_400;
wire   [10:0] grp_fu_352_p3;
reg   [10:0] add_ln81_reg_410;
reg   [10:0] add_ln81_reg_410_pp0_iter4_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter5_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter6_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter7_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter8_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter9_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter10_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter11_reg;
reg   [10:0] add_ln81_reg_410_pp0_iter12_reg;
wire   [1:0] trunc_ln77_fu_335_p1;
reg   [1:0] trunc_ln77_reg_415;
wire   [63:0] zext_ln81_3_fu_339_p1;
reg   [8:0] j_fu_88;
wire   [8:0] add_ln77_fu_292_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_16_fu_92;
wire   [3:0] select_ln76_2_fu_236_p3;
reg   [3:0] ap_sig_allocacmp_i_16_load;
reg   [12:0] indvar_flatten_fu_96;
wire   [12:0] add_ln76_2_fu_204_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln81_fu_345_p1;
wire   [0:0] icmp_ln77_fu_222_p2;
wire   [3:0] add_ln76_fu_216_p2;
wire   [31:0] zext_ln76_1_fu_248_p1;
wire   [0:0] ult_fu_252_p2;
wire   [2:0] grp_fu_268_p1;
wire   [31:0] zext_ln77_fu_264_p1;
wire   [0:0] icmp_ln79_fu_274_p2;
wire   [0:0] xor_ln79_fu_280_p2;
wire   [0:0] rev_fu_258_p2;
wire   [8:0] mul_ln77_fu_316_p0;
wire   [10:0] mul_ln77_fu_316_p1;
wire   [18:0] mul_ln77_fu_316_p2;
wire   [1:0] grp_fu_268_p2;
wire   [3:0] grp_fu_352_p0;
wire   [7:0] grp_fu_352_p1;
wire   [7:0] grp_fu_352_p2;
reg    grp_fu_268_ce;
reg    grp_fu_352_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [10:0] grp_fu_352_p00;
wire   [10:0] grp_fu_352_p20;
wire   [18:0] mul_ln77_fu_316_p00;
reg    ap_condition_443;
reg    ap_condition_446;
reg    ap_condition_449;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 j_fu_88 = 9'd0;
#0 i_16_fu_92 = 4'd0;
#0 indvar_flatten_fu_96 = 13'd0;
#0 ap_done_reg = 1'b0;
end

LeNet_wrapper_urem_9ns_3ns_2_13_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_9ns_3ns_2_13_1_U678(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln76_fu_228_p3),
    .din1(grp_fu_268_p1),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

LeNet_wrapper_mul_9ns_11ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_1_U679(
    .din0(mul_ln77_fu_316_p0),
    .din1(mul_ln77_fu_316_p1),
    .dout(mul_ln77_fu_316_p2)
);

LeNet_wrapper_mac_muladd_4ns_8ns_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mac_muladd_4ns_8ns_8ns_11_4_1_U680(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .din1(grp_fu_352_p1),
    .din2(grp_fu_352_p2),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p3)
);

LeNet_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln76_fu_198_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_16_fu_92 <= select_ln76_2_fu_236_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_16_fu_92 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln76_fu_198_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_96 <= add_ln76_2_fu_204_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_96 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln76_fu_198_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_88 <= add_ln77_fu_292_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_88 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        add_ln81_reg_410 <= grp_fu_352_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln81_reg_410_pp0_iter10_reg <= add_ln81_reg_410_pp0_iter9_reg;
        add_ln81_reg_410_pp0_iter11_reg <= add_ln81_reg_410_pp0_iter10_reg;
        add_ln81_reg_410_pp0_iter12_reg <= add_ln81_reg_410_pp0_iter11_reg;
        add_ln81_reg_410_pp0_iter4_reg <= add_ln81_reg_410;
        add_ln81_reg_410_pp0_iter5_reg <= add_ln81_reg_410_pp0_iter4_reg;
        add_ln81_reg_410_pp0_iter6_reg <= add_ln81_reg_410_pp0_iter5_reg;
        add_ln81_reg_410_pp0_iter7_reg <= add_ln81_reg_410_pp0_iter6_reg;
        add_ln81_reg_410_pp0_iter8_reg <= add_ln81_reg_410_pp0_iter7_reg;
        add_ln81_reg_410_pp0_iter9_reg <= add_ln81_reg_410_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        or_ln79_reg_396_pp0_iter10_reg <= or_ln79_reg_396_pp0_iter9_reg;
        or_ln79_reg_396_pp0_iter11_reg <= or_ln79_reg_396_pp0_iter10_reg;
        or_ln79_reg_396_pp0_iter12_reg <= or_ln79_reg_396_pp0_iter11_reg;
        or_ln79_reg_396_pp0_iter2_reg <= or_ln79_reg_396_pp0_iter1_reg;
        or_ln79_reg_396_pp0_iter3_reg <= or_ln79_reg_396_pp0_iter2_reg;
        or_ln79_reg_396_pp0_iter4_reg <= or_ln79_reg_396_pp0_iter3_reg;
        or_ln79_reg_396_pp0_iter5_reg <= or_ln79_reg_396_pp0_iter4_reg;
        or_ln79_reg_396_pp0_iter6_reg <= or_ln79_reg_396_pp0_iter5_reg;
        or_ln79_reg_396_pp0_iter7_reg <= or_ln79_reg_396_pp0_iter6_reg;
        or_ln79_reg_396_pp0_iter8_reg <= or_ln79_reg_396_pp0_iter7_reg;
        or_ln79_reg_396_pp0_iter9_reg <= or_ln79_reg_396_pp0_iter8_reg;
        trunc_ln77_reg_415 <= trunc_ln77_fu_335_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        or_ln79_reg_396 <= or_ln79_fu_286_p2;
        or_ln79_reg_396_pp0_iter1_reg <= or_ln79_reg_396;
        select_ln76_reg_385 <= select_ln76_fu_228_p3;
        tmp_reg_400 <= {{mul_ln77_fu_316_p2[18:11]}};
    end
end

always @ (*) begin
    if (((icmp_ln76_fu_198_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_16_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_16_load = i_16_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 9'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        connect_7_blk_n = connect_7_empty_n;
    end else begin
        connect_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        connect_7_read = 1'b1;
    end else begin
        connect_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        connect_8_blk_n = connect_8_full_n;
    end else begin
        connect_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        connect_8_write = 1'b1;
    end else begin
        connect_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln77_reg_415 == 2'd0) & ~(trunc_ln77_reg_415 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | (~(trunc_ln77_reg_415 == 2'd0) & ~(trunc_ln77_reg_415 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((or_ln79_reg_396_pp0_iter12_reg == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 = 8'd0;
        end else if ((or_ln79_reg_396_pp0_iter12_reg == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 = trunc_ln81_fu_345_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln77_reg_415 == 2'd0) & ~(trunc_ln77_reg_415 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | (~(trunc_ln77_reg_415 == 2'd0) & ~(trunc_ln77_reg_415 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd1)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_446)) begin
        if ((or_ln79_reg_396_pp0_iter12_reg == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 = 8'd0;
        end else if ((or_ln79_reg_396_pp0_iter12_reg == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 = trunc_ln81_fu_345_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd1)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_449)) begin
        if ((or_ln79_reg_396_pp0_iter12_reg == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 = 8'd0;
        end else if ((or_ln79_reg_396_pp0_iter12_reg == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 = trunc_ln81_fu_345_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln79_reg_396_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln76_2_fu_204_p2 = (ap_sig_allocacmp_indvar_flatten_load + 13'd1);

assign add_ln76_fu_216_p2 = (ap_sig_allocacmp_i_16_load + 4'd1);

assign add_ln77_fu_292_p2 = (select_ln76_fu_228_p3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage0_iter13));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage0_iter13));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage0_iter13));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = (((connect_8_full_n == 1'b0) & (or_ln79_reg_396_pp0_iter12_reg == 1'd0)) | ((or_ln79_reg_396_pp0_iter12_reg == 1'd0) & (connect_7_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_443 = (~(trunc_ln77_reg_415 == 2'd0) & ~(trunc_ln77_reg_415 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1));
end

always @ (*) begin
    ap_condition_446 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd1));
end

always @ (*) begin
    ap_condition_449 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (trunc_ln77_reg_415 == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign connect_8_din = connect_7_dout;

assign grp_fu_268_p1 = 9'd3;

assign grp_fu_352_p0 = grp_fu_352_p00;

assign grp_fu_352_p00 = select_ln76_2_fu_236_p3;

assign grp_fu_352_p1 = 11'd167;

assign grp_fu_352_p2 = grp_fu_352_p20;

assign grp_fu_352_p20 = tmp_reg_400;

assign icmp_ln76_fu_198_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 13'd5000) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_222_p2 = ((ap_sig_allocacmp_j_load == 9'd500) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_274_p2 = ((zext_ln77_fu_264_p1 < mul_ln73_2) ? 1'b1 : 1'b0);

assign mul_ln77_fu_316_p0 = mul_ln77_fu_316_p00;

assign mul_ln77_fu_316_p00 = select_ln76_reg_385;

assign mul_ln77_fu_316_p1 = 19'd683;

assign or_ln79_fu_286_p2 = (xor_ln79_fu_280_p2 | rev_fu_258_p2);

assign rev_fu_258_p2 = (ult_fu_252_p2 ^ 1'd1);

assign select_ln76_2_fu_236_p3 = ((icmp_ln77_fu_222_p2[0:0] == 1'b1) ? add_ln76_fu_216_p2 : ap_sig_allocacmp_i_16_load);

assign select_ln76_fu_228_p3 = ((icmp_ln77_fu_222_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_j_load);

assign trunc_ln77_fu_335_p1 = grp_fu_268_p2[1:0];

assign trunc_ln81_fu_345_p1 = connect_7_dout[7:0];

assign ult_fu_252_p2 = ((zext_ln76_1_fu_248_p1 < valIn_a_53) ? 1'b1 : 1'b0);

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address1 = zext_ln81_3_fu_339_p1;

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address1 = zext_ln81_3_fu_339_p1;

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address1 = zext_ln81_3_fu_339_p1;

assign xor_ln79_fu_280_p2 = (icmp_ln79_fu_274_p2 ^ 1'd1);

assign zext_ln76_1_fu_248_p1 = select_ln76_2_fu_236_p3;

assign zext_ln77_fu_264_p1 = select_ln76_fu_228_p3;

assign zext_ln81_3_fu_339_p1 = add_ln81_reg_410_pp0_iter12_reg;

endmodule //LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2
