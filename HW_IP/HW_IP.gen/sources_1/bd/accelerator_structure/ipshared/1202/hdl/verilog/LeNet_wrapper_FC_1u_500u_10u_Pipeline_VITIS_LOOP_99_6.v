// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        connect_7_dout,
        connect_7_num_data_valid,
        connect_7_fifo_cap,
        connect_7_empty_n,
        connect_7_read,
        B_ROW_3_load,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] connect_7_dout;
input  [6:0] connect_7_num_data_valid;
input  [6:0] connect_7_fifo_cap;
input   connect_7_empty_n;
output   connect_7_read;
input  [31:0] B_ROW_3_load;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1;

reg ap_idle;
reg connect_7_read;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln101_reg_291;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln99_fu_169_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    connect_7_blk_n;
wire    ap_block_pp0_stage0;
wire   [1:0] trunc_ln99_fu_185_p1;
reg   [1:0] trunc_ln99_reg_287;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln101_fu_189_p2;
wire   [63:0] zext_ln99_2_fu_244_p1;
reg   [8:0] phi_urem_fu_70;
wire   [8:0] select_ln99_fu_207_p3;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_phi_urem_load;
reg   [18:0] phi_mul_fu_74;
wire   [18:0] add_ln99_3_fu_228_p2;
reg   [8:0] j_fu_78;
wire   [8:0] add_ln99_fu_175_p2;
reg   [8:0] ap_sig_allocacmp_j_4;
wire   [7:0] trunc_ln103_fu_251_p1;
wire   [31:0] zext_ln99_fu_181_p1;
wire   [8:0] add_ln99_4_fu_195_p2;
wire   [0:0] icmp_ln99_2_fu_201_p2;
wire   [7:0] tmp_fu_234_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_244;
reg    ap_condition_247;
reg    ap_condition_250;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem_fu_70 = 9'd0;
#0 phi_mul_fu_74 = 19'd0;
#0 j_fu_78 = 9'd0;
#0 ap_done_reg = 1'b0;
end

LeNet_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln99_fu_169_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_78 <= add_ln99_fu_175_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_78 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_74 <= 19'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_mul_fu_74 <= add_ln99_3_fu_228_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln99_fu_169_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_urem_fu_70 <= select_ln99_fu_207_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_70 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln101_reg_291 <= icmp_ln101_fu_189_p2;
        trunc_ln99_reg_287 <= trunc_ln99_fu_185_p1;
    end
end

always @ (*) begin
    if (((icmp_ln99_fu_169_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_4 = 9'd0;
    end else begin
        ap_sig_allocacmp_j_4 = j_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_urem_load = 9'd0;
    end else begin
        ap_sig_allocacmp_phi_urem_load = phi_urem_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        connect_7_blk_n = connect_7_empty_n;
    end else begin
        connect_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        connect_7_read = 1'b1;
    end else begin
        connect_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln99_reg_287 == 2'd0) & ~(trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(trunc_ln99_reg_287 == 2'd0) & ~(trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_244)) begin
        if ((icmp_ln101_reg_291 == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 = trunc_ln103_fu_251_p1;
        end else if ((icmp_ln101_reg_291 == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 = 8'd0;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln99_reg_287 == 2'd0) & ~(trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(trunc_ln99_reg_287 == 2'd0) & ~(trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_247)) begin
        if ((icmp_ln101_reg_291 == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 = trunc_ln103_fu_251_p1;
        end else if ((icmp_ln101_reg_291 == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 = 8'd0;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln99_reg_287 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln99_reg_287 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_250)) begin
        if ((icmp_ln101_reg_291 == 1'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 = trunc_ln103_fu_251_p1;
        end else if ((icmp_ln101_reg_291 == 1'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 = 8'd0;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln99_reg_287 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln99_reg_287 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln101_reg_291 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln99_3_fu_228_p2 = (phi_mul_fu_74 + 19'd683);

assign add_ln99_4_fu_195_p2 = (ap_sig_allocacmp_phi_urem_load + 9'd1);

assign add_ln99_fu_175_p2 = (ap_sig_allocacmp_j_4 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln101_reg_291 == 1'd1) & (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_244 = (~(trunc_ln99_reg_287 == 2'd0) & ~(trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_247 = ((trunc_ln99_reg_287 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_250 = ((trunc_ln99_reg_287 == 2'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln101_fu_189_p2 = ((zext_ln99_fu_181_p1 < B_ROW_3_load) ? 1'b1 : 1'b0);

assign icmp_ln99_2_fu_201_p2 = ((add_ln99_4_fu_195_p2 < 9'd3) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_169_p2 = ((ap_sig_allocacmp_j_4 == 9'd500) ? 1'b1 : 1'b0);

assign select_ln99_fu_207_p3 = ((icmp_ln99_2_fu_201_p2[0:0] == 1'b1) ? add_ln99_4_fu_195_p2 : 9'd0);

assign tmp_fu_234_p4 = {{phi_mul_fu_74[18:11]}};

assign trunc_ln103_fu_251_p1 = connect_7_dout[7:0];

assign trunc_ln99_fu_185_p1 = ap_sig_allocacmp_phi_urem_load[1:0];

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address1 = zext_ln99_2_fu_244_p1;

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address1 = zext_ln99_2_fu_244_p1;

assign void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address1 = zext_ln99_2_fu_244_p1;

assign zext_ln99_2_fu_244_p1 = tmp_fu_234_p4;

assign zext_ln99_fu_181_p1 = ap_sig_allocacmp_j_4;

endmodule //LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6
