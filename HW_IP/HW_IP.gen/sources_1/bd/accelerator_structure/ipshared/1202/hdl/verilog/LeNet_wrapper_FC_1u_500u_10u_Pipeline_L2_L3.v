// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LeNet_wrapper_FC_1u_500u_10u_Pipeline_L2_L3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        connect_8_din,
        connect_8_num_data_valid,
        connect_8_fifo_cap,
        connect_8_full_n,
        connect_8_write,
        bound4,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0,
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] connect_8_din;
input  [6:0] connect_8_num_data_valid;
input  [6:0] connect_8_fifo_cap;
input   connect_8_full_n;
output   connect_8_write;
input  [39:0] bound4;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0;
output  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0;
output  [10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0;
output   void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0;
input  [7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0;

reg ap_idle;
reg connect_8_write;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0;
reg[7:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0;
reg[10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0;
reg[10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0;
reg[10:0] void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0;
reg void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln114_2_reg_698;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter18_reg;
reg    ap_block_state20_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln112_fu_284_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    connect_8_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln114_fu_298_p2;
reg   [0:0] icmp_ln114_reg_685;
reg   [0:0] icmp_ln114_reg_685_pp0_iter2_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter3_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter4_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter5_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter6_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter7_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter8_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter9_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter10_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter11_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter12_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter13_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter14_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter15_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter16_reg;
reg   [0:0] icmp_ln114_reg_685_pp0_iter17_reg;
wire   [7:0] select_ln112_fu_304_p3;
reg   [7:0] select_ln112_reg_691;
reg   [7:0] select_ln112_reg_691_pp0_iter2_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter3_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter4_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter5_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter6_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter7_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter8_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter9_reg;
reg   [7:0] select_ln112_reg_691_pp0_iter10_reg;
wire   [0:0] icmp_ln114_2_fu_318_p2;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter2_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter3_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter4_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter5_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter6_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter7_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter8_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter9_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter10_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter11_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter12_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter13_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter14_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter15_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter16_reg;
reg   [0:0] icmp_ln114_2_reg_698_pp0_iter17_reg;
reg   [6:0] tmp_82_reg_702;
reg   [6:0] tmp_82_reg_702_pp0_iter12_reg;
reg   [6:0] tmp_82_reg_702_pp0_iter13_reg;
wire  signed [10:0] trunc_ln117_fu_377_p1;
reg  signed [10:0] trunc_ln117_reg_708;
wire   [10:0] mul_ln117_12_fu_386_p2;
reg   [10:0] mul_ln117_12_reg_713;
wire   [1:0] trunc_ln113_fu_391_p1;
reg   [1:0] trunc_ln113_reg_719;
reg   [1:0] trunc_ln113_reg_719_pp0_iter14_reg;
wire   [7:0] tmp_59_fu_494_p9;
reg   [7:0] tmp_59_reg_797;
reg  signed [7:0] tmp_59_reg_797_pp0_iter16_reg;
wire   [7:0] tmp_60_fu_513_p9;
reg   [7:0] tmp_60_reg_802;
reg  signed [7:0] tmp_60_reg_802_pp0_iter16_reg;
wire  signed [15:0] mul_ln117_6_fu_538_p2;
reg   [0:0] tmp_84_reg_812;
reg   [9:0] tmp_61_reg_817;
reg   [8:0] trunc_ln120_2_reg_822;
wire   [63:0] zext_ln113_fu_395_p1;
wire   [63:0] zext_ln117_23_fu_409_p1;
wire   [63:0] zext_ln117_fu_425_p1;
wire   [63:0] zext_ln117_26_fu_441_p1;
reg   [15:0] sum_fu_106;
(* use_dsp48 = "no" *) wire  signed [15:0] sum_3_fu_554_p2;
wire    ap_loop_init;
reg   [7:0] ic_fu_110;
wire   [7:0] add_ln114_fu_312_p2;
reg   [31:0] ib_fu_114;
wire   [31:0] select_ln112_4_fu_370_p3;
reg   [39:0] indvar_flatten6_fu_118;
wire   [39:0] add_ln112_2_fu_289_p2;
reg    ap_block_pp0_stage0_01001;
wire   [2:0] grp_fu_334_p1;
wire   [7:0] mul_ln113_fu_345_p0;
wire   [9:0] mul_ln113_fu_345_p1;
wire   [16:0] mul_ln113_fu_345_p2;
wire   [31:0] add_ln112_fu_364_p2;
wire   [8:0] mul_ln117_12_fu_386_p1;
wire   [1:0] grp_fu_334_p2;
wire   [10:0] zext_ln117_22_fu_401_p1;
wire   [10:0] add_ln117_12_fu_404_p2;
wire   [18:0] tmp_83_fu_416_p1;
wire  signed [18:0] grp_fu_630_p3;
wire   [7:0] tmp_83_fu_416_p4;
wire   [10:0] zext_ln117_25_fu_432_p1;
wire   [10:0] add_ln117_13_fu_436_p2;
wire   [7:0] tmp_fu_448_p7;
wire  signed [7:0] tmp_fu_448_p9;
wire   [7:0] tmp_s_fu_471_p7;
wire  signed [7:0] tmp_s_fu_471_p9;
wire   [7:0] tmp_59_fu_494_p7;
wire   [7:0] tmp_60_fu_513_p7;
wire   [15:0] select_ln112_3_fu_547_p3;
wire  signed [15:0] grp_fu_639_p3;
wire  signed [16:0] sext_ln120_fu_559_p1;
wire   [16:0] sub_ln120_fu_571_p2;
wire   [10:0] zext_ln120_fu_602_p1;
wire  signed [9:0] sext_ln120_2_fu_611_p1;
wire   [10:0] sub_ln120_2_fu_605_p2;
wire   [10:0] zext_ln120_2_fu_614_p1;
wire   [10:0] output_data_fu_618_p3;
wire   [7:0] grp_fu_630_p0;
wire   [7:0] grp_fu_630_p1;
wire   [9:0] grp_fu_630_p2;
reg    grp_fu_334_ce;
reg    grp_fu_630_ce;
reg    grp_fu_639_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [8:0] grp_fu_630_p00;
wire   [16:0] mul_ln113_fu_345_p00;
wire   [1:0] tmp_fu_448_p1;
wire   [1:0] tmp_fu_448_p3;
wire  signed [1:0] tmp_fu_448_p5;
wire   [1:0] tmp_s_fu_471_p1;
wire   [1:0] tmp_s_fu_471_p3;
wire  signed [1:0] tmp_s_fu_471_p5;
wire  signed [1:0] tmp_59_fu_494_p1;
wire   [1:0] tmp_59_fu_494_p3;
wire   [1:0] tmp_59_fu_494_p5;
wire  signed [1:0] tmp_60_fu_513_p1;
wire   [1:0] tmp_60_fu_513_p3;
wire   [1:0] tmp_60_fu_513_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 sum_fu_106 = 16'd0;
#0 ic_fu_110 = 8'd0;
#0 ib_fu_114 = 32'd0;
#0 indvar_flatten6_fu_118 = 40'd0;
#0 ap_done_reg = 1'b0;
end

LeNet_wrapper_urem_8ns_3ns_2_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_8ns_3ns_2_12_1_U656(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_reg_691),
    .din1(grp_fu_334_p1),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p2)
);

LeNet_wrapper_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U657(
    .din0(mul_ln113_fu_345_p0),
    .din1(mul_ln113_fu_345_p1),
    .dout(mul_ln113_fu_345_p2)
);

LeNet_wrapper_mul_11s_9ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mul_11s_9ns_11_1_1_U658(
    .din0(trunc_ln117_reg_708),
    .din1(mul_ln117_12_fu_386_p1),
    .dout(mul_ln117_12_fu_386_p2)
);

LeNet_wrapper_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U659(
    .din0(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0),
    .din1(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0),
    .din2(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0),
    .def(tmp_fu_448_p7),
    .sel(trunc_ln113_reg_719_pp0_iter14_reg),
    .dout(tmp_fu_448_p9)
);

LeNet_wrapper_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U660(
    .din0(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0),
    .din1(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0),
    .din2(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0),
    .def(tmp_s_fu_471_p7),
    .sel(trunc_ln113_reg_719_pp0_iter14_reg),
    .dout(tmp_s_fu_471_p9)
);

LeNet_wrapper_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h0 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h1 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U661(
    .din0(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0),
    .din1(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0),
    .din2(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0),
    .def(tmp_59_fu_494_p7),
    .sel(trunc_ln113_reg_719_pp0_iter14_reg),
    .dout(tmp_59_fu_494_p9)
);

LeNet_wrapper_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h0 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h1 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U662(
    .din0(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0),
    .din1(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0),
    .din2(void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0),
    .def(tmp_60_fu_513_p7),
    .sel(trunc_ln113_reg_719_pp0_iter14_reg),
    .dout(tmp_60_fu_513_p9)
);

LeNet_wrapper_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U663(
    .din0(tmp_60_reg_802_pp0_iter16_reg),
    .din1(tmp_59_reg_797_pp0_iter16_reg),
    .dout(mul_ln117_6_fu_538_p2)
);

LeNet_wrapper_am_addmul_8ns_8ns_10ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
am_addmul_8ns_8ns_10ns_19_4_1_U664(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_630_p0),
    .din1(grp_fu_630_p1),
    .din2(grp_fu_630_p2),
    .ce(grp_fu_630_ce),
    .dout(grp_fu_630_p3)
);

LeNet_wrapper_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U665(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_fu_471_p9),
    .din1(tmp_fu_448_p9),
    .din2(mul_ln117_6_fu_538_p2),
    .ce(grp_fu_639_ce),
    .dout(grp_fu_639_p3)
);

LeNet_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ib_fu_114 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
            ib_fu_114 <= select_ln112_4_fu_370_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            ic_fu_110 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln112_fu_284_p2 == 1'd0))) begin
            ic_fu_110 <= add_ln114_fu_312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_118 <= 40'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln112_fu_284_p2 == 1'd0))) begin
            indvar_flatten6_fu_118 <= add_ln112_2_fu_289_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_fu_106 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter18 == 1'b1)) begin
            sum_fu_106 <= sum_3_fu_554_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln114_2_reg_698_pp0_iter10_reg <= icmp_ln114_2_reg_698_pp0_iter9_reg;
        icmp_ln114_2_reg_698_pp0_iter11_reg <= icmp_ln114_2_reg_698_pp0_iter10_reg;
        icmp_ln114_2_reg_698_pp0_iter12_reg <= icmp_ln114_2_reg_698_pp0_iter11_reg;
        icmp_ln114_2_reg_698_pp0_iter13_reg <= icmp_ln114_2_reg_698_pp0_iter12_reg;
        icmp_ln114_2_reg_698_pp0_iter14_reg <= icmp_ln114_2_reg_698_pp0_iter13_reg;
        icmp_ln114_2_reg_698_pp0_iter15_reg <= icmp_ln114_2_reg_698_pp0_iter14_reg;
        icmp_ln114_2_reg_698_pp0_iter16_reg <= icmp_ln114_2_reg_698_pp0_iter15_reg;
        icmp_ln114_2_reg_698_pp0_iter17_reg <= icmp_ln114_2_reg_698_pp0_iter16_reg;
        icmp_ln114_2_reg_698_pp0_iter18_reg <= icmp_ln114_2_reg_698_pp0_iter17_reg;
        icmp_ln114_2_reg_698_pp0_iter2_reg <= icmp_ln114_2_reg_698;
        icmp_ln114_2_reg_698_pp0_iter3_reg <= icmp_ln114_2_reg_698_pp0_iter2_reg;
        icmp_ln114_2_reg_698_pp0_iter4_reg <= icmp_ln114_2_reg_698_pp0_iter3_reg;
        icmp_ln114_2_reg_698_pp0_iter5_reg <= icmp_ln114_2_reg_698_pp0_iter4_reg;
        icmp_ln114_2_reg_698_pp0_iter6_reg <= icmp_ln114_2_reg_698_pp0_iter5_reg;
        icmp_ln114_2_reg_698_pp0_iter7_reg <= icmp_ln114_2_reg_698_pp0_iter6_reg;
        icmp_ln114_2_reg_698_pp0_iter8_reg <= icmp_ln114_2_reg_698_pp0_iter7_reg;
        icmp_ln114_2_reg_698_pp0_iter9_reg <= icmp_ln114_2_reg_698_pp0_iter8_reg;
        icmp_ln114_reg_685_pp0_iter10_reg <= icmp_ln114_reg_685_pp0_iter9_reg;
        icmp_ln114_reg_685_pp0_iter11_reg <= icmp_ln114_reg_685_pp0_iter10_reg;
        icmp_ln114_reg_685_pp0_iter12_reg <= icmp_ln114_reg_685_pp0_iter11_reg;
        icmp_ln114_reg_685_pp0_iter13_reg <= icmp_ln114_reg_685_pp0_iter12_reg;
        icmp_ln114_reg_685_pp0_iter14_reg <= icmp_ln114_reg_685_pp0_iter13_reg;
        icmp_ln114_reg_685_pp0_iter15_reg <= icmp_ln114_reg_685_pp0_iter14_reg;
        icmp_ln114_reg_685_pp0_iter16_reg <= icmp_ln114_reg_685_pp0_iter15_reg;
        icmp_ln114_reg_685_pp0_iter17_reg <= icmp_ln114_reg_685_pp0_iter16_reg;
        icmp_ln114_reg_685_pp0_iter2_reg <= icmp_ln114_reg_685;
        icmp_ln114_reg_685_pp0_iter3_reg <= icmp_ln114_reg_685_pp0_iter2_reg;
        icmp_ln114_reg_685_pp0_iter4_reg <= icmp_ln114_reg_685_pp0_iter3_reg;
        icmp_ln114_reg_685_pp0_iter5_reg <= icmp_ln114_reg_685_pp0_iter4_reg;
        icmp_ln114_reg_685_pp0_iter6_reg <= icmp_ln114_reg_685_pp0_iter5_reg;
        icmp_ln114_reg_685_pp0_iter7_reg <= icmp_ln114_reg_685_pp0_iter6_reg;
        icmp_ln114_reg_685_pp0_iter8_reg <= icmp_ln114_reg_685_pp0_iter7_reg;
        icmp_ln114_reg_685_pp0_iter9_reg <= icmp_ln114_reg_685_pp0_iter8_reg;
        mul_ln117_12_reg_713 <= mul_ln117_12_fu_386_p2;
        select_ln112_reg_691_pp0_iter10_reg <= select_ln112_reg_691_pp0_iter9_reg;
        select_ln112_reg_691_pp0_iter2_reg <= select_ln112_reg_691;
        select_ln112_reg_691_pp0_iter3_reg <= select_ln112_reg_691_pp0_iter2_reg;
        select_ln112_reg_691_pp0_iter4_reg <= select_ln112_reg_691_pp0_iter3_reg;
        select_ln112_reg_691_pp0_iter5_reg <= select_ln112_reg_691_pp0_iter4_reg;
        select_ln112_reg_691_pp0_iter6_reg <= select_ln112_reg_691_pp0_iter5_reg;
        select_ln112_reg_691_pp0_iter7_reg <= select_ln112_reg_691_pp0_iter6_reg;
        select_ln112_reg_691_pp0_iter8_reg <= select_ln112_reg_691_pp0_iter7_reg;
        select_ln112_reg_691_pp0_iter9_reg <= select_ln112_reg_691_pp0_iter8_reg;
        tmp_59_reg_797 <= tmp_59_fu_494_p9;
        tmp_59_reg_797_pp0_iter16_reg <= tmp_59_reg_797;
        tmp_60_reg_802 <= tmp_60_fu_513_p9;
        tmp_60_reg_802_pp0_iter16_reg <= tmp_60_reg_802;
        tmp_61_reg_817 <= {{sub_ln120_fu_571_p2[16:7]}};
        tmp_82_reg_702 <= {{mul_ln113_fu_345_p2[16:10]}};
        tmp_82_reg_702_pp0_iter12_reg <= tmp_82_reg_702;
        tmp_82_reg_702_pp0_iter13_reg <= tmp_82_reg_702_pp0_iter12_reg;
        tmp_84_reg_812 <= sum_3_fu_554_p2[32'd15];
        trunc_ln113_reg_719 <= trunc_ln113_fu_391_p1;
        trunc_ln113_reg_719_pp0_iter14_reg <= trunc_ln113_reg_719;
        trunc_ln117_reg_708 <= trunc_ln117_fu_377_p1;
        trunc_ln120_2_reg_822 <= {{sum_3_fu_554_p2[15:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln114_2_reg_698 <= icmp_ln114_2_fu_318_p2;
        icmp_ln114_reg_685 <= icmp_ln114_fu_298_p2;
        select_ln112_reg_691 <= select_ln112_fu_304_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln112_fu_284_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln114_2_reg_698_pp0_iter18_reg == 1'd1) & (ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        connect_8_blk_n = connect_8_full_n;
    end else begin
        connect_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln114_2_reg_698_pp0_iter18_reg == 1'd1) & (ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        connect_8_write = 1'b1;
    end else begin
        connect_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_630_ce = 1'b1;
    end else begin
        grp_fu_630_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_639_ce = 1'b1;
    end else begin
        grp_fu_639_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 = zext_ln117_fu_425_p1;
        end else if ((trunc_ln113_reg_719 == 2'd2)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 = zext_ln113_fu_395_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 = zext_ln117_fu_425_p1;
        end else if ((trunc_ln113_reg_719 == 2'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 = zext_ln113_fu_395_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd2)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 = zext_ln117_fu_425_p1;
        end else if ((trunc_ln113_reg_719 == 2'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 = zext_ln113_fu_395_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 = zext_ln117_26_fu_441_p1;
        end else if ((trunc_ln113_reg_719 == 2'd2)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 = zext_ln117_23_fu_409_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 = zext_ln117_26_fu_441_p1;
        end else if ((trunc_ln113_reg_719 == 2'd1)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 = zext_ln117_23_fu_409_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln113_reg_719 == 2'd2)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 = zext_ln117_26_fu_441_p1;
        end else if ((trunc_ln113_reg_719 == 2'd0)) begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 = zext_ln117_23_fu_409_p1;
        end else begin
            void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 = 'bx;
        end
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln113_reg_719 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0 = 1'b1;
    end else begin
        void_FC_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln112_2_fu_289_p2 = (indvar_flatten6_fu_118 + 40'd1);

assign add_ln112_fu_364_p2 = (ib_fu_114 + 32'd1);

assign add_ln114_fu_312_p2 = (select_ln112_fu_304_p3 + 8'd1);

assign add_ln117_12_fu_404_p2 = (mul_ln117_12_reg_713 + zext_ln117_22_fu_401_p1);

assign add_ln117_13_fu_436_p2 = (mul_ln117_12_reg_713 + zext_ln117_25_fu_432_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage0_iter19));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage0_iter19));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage0_iter19));
end

always @ (*) begin
    ap_block_state20_pp0_stage0_iter19 = ((icmp_ln114_2_reg_698_pp0_iter18_reg == 1'd1) & (connect_8_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign connect_8_din = $signed(output_data_fu_618_p3);

assign grp_fu_334_p1 = 8'd3;

assign grp_fu_630_p0 = grp_fu_630_p00;

assign grp_fu_630_p00 = select_ln112_reg_691_pp0_iter10_reg;

assign grp_fu_630_p1 = 9'd250;

assign grp_fu_630_p2 = 19'd683;

assign icmp_ln112_fu_284_p2 = ((indvar_flatten6_fu_118 == bound4) ? 1'b1 : 1'b0);

assign icmp_ln114_2_fu_318_p2 = ((add_ln114_fu_312_p2 == 8'd250) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_298_p2 = ((ic_fu_110 == 8'd250) ? 1'b1 : 1'b0);

assign mul_ln113_fu_345_p0 = mul_ln113_fu_345_p00;

assign mul_ln113_fu_345_p00 = select_ln112_reg_691_pp0_iter10_reg;

assign mul_ln113_fu_345_p1 = 17'd342;

assign mul_ln117_12_fu_386_p1 = 11'd167;

assign output_data_fu_618_p3 = ((tmp_84_reg_812[0:0] == 1'b1) ? sub_ln120_2_fu_605_p2 : zext_ln120_2_fu_614_p1);

assign select_ln112_3_fu_547_p3 = ((icmp_ln114_reg_685_pp0_iter17_reg[0:0] == 1'b1) ? 16'd0 : sum_fu_106);

assign select_ln112_4_fu_370_p3 = ((icmp_ln114_reg_685_pp0_iter11_reg[0:0] == 1'b1) ? add_ln112_fu_364_p2 : ib_fu_114);

assign select_ln112_fu_304_p3 = ((icmp_ln114_fu_298_p2[0:0] == 1'b1) ? 8'd0 : ic_fu_110);

assign sext_ln120_2_fu_611_p1 = $signed(trunc_ln120_2_reg_822);

assign sext_ln120_fu_559_p1 = sum_3_fu_554_p2;

assign sub_ln120_2_fu_605_p2 = (11'd0 - zext_ln120_fu_602_p1);

assign sub_ln120_fu_571_p2 = ($signed(17'd0) - $signed(sext_ln120_fu_559_p1));

assign sum_3_fu_554_p2 = ($signed(select_ln112_3_fu_547_p3) + $signed(grp_fu_639_p3));

assign tmp_59_fu_494_p7 = 'bx;

assign tmp_60_fu_513_p7 = 'bx;

assign tmp_83_fu_416_p1 = grp_fu_630_p3;

assign tmp_83_fu_416_p4 = {{tmp_83_fu_416_p1[18:11]}};

assign tmp_fu_448_p7 = 'bx;

assign tmp_s_fu_471_p7 = 'bx;

assign trunc_ln113_fu_391_p1 = grp_fu_334_p2[1:0];

assign trunc_ln117_fu_377_p1 = select_ln112_4_fu_370_p3[10:0];

assign zext_ln113_fu_395_p1 = tmp_82_reg_702_pp0_iter13_reg;

assign zext_ln117_22_fu_401_p1 = tmp_82_reg_702_pp0_iter13_reg;

assign zext_ln117_23_fu_409_p1 = add_ln117_12_fu_404_p2;

assign zext_ln117_25_fu_432_p1 = tmp_83_fu_416_p4;

assign zext_ln117_26_fu_441_p1 = add_ln117_13_fu_436_p2;

assign zext_ln117_fu_425_p1 = tmp_83_fu_416_p4;

assign zext_ln120_2_fu_614_p1 = $unsigned(sext_ln120_2_fu_611_p1);

assign zext_ln120_fu_602_p1 = tmp_61_reg_817;

endmodule //LeNet_wrapper_FC_1u_500u_10u_Pipeline_L2_L3
