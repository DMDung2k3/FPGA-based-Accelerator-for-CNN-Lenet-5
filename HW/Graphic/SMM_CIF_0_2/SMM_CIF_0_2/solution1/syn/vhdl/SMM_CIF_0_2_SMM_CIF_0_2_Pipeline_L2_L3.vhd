-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SMM_CIF_0_2_SMM_CIF_0_2_Pipeline_L2_L3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    bound4 : IN STD_LOGIC_VECTOR (36 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    sub152 : IN STD_LOGIC_VECTOR (31 downto 0);
    or_ln168 : IN STD_LOGIC_VECTOR (0 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of SMM_CIF_0_2_SMM_CIF_0_2_Pipeline_L2_L3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv37_0 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv37_1 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln160_1_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln156_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln160_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1569_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln156_fu_915_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln156_reg_1574 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln163_fu_931_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln163_reg_1580 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln160_1_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1585_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1589_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln160_fu_985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_reg_1594 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_reg_1594_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_reg_1617 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_reg_1617_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_load_reg_1800 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1805 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_load_reg_1825 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1830 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_load_reg_1870 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1875 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_load_reg_1935 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1940 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_load_reg_1960 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1965 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_reg_2005 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_46_reg_2010 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_51_reg_2030 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2035 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_load_reg_2060 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2065 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_58_reg_2080 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_59_reg_2085 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln163_3_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_3_reg_2100 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_12_fu_1133_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_12_reg_2105 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_24_fu_1139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_24_reg_2110 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_1_fu_1213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_1_reg_2155 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_fu_1219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_reg_2160 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_5_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_5_reg_2165 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_10_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_10_reg_2170 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_22_fu_1237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_22_reg_2175 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_23_fu_1243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_23_reg_2180 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1408_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_9_fu_1249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln163_9_fu_1249_p2 : signal is "no";
    signal add_ln163_9_reg_2210 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_21_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_21_fu_1257_p2 : signal is "no";
    signal add_ln163_21_reg_2225 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_10_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_10_reg_2230 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_22_fu_1275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_22_reg_2235 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_fu_1294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_reg_2240 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2245 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_2250 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_172 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal ic_fu_176 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln160_fu_935_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ib_fu_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln156_2_fu_923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_fu_184 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000000";
    signal add_ln156_1_fu_891_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln156_fu_903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln168_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln168_1_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_978_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln163_fu_994_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln163_24_fu_997_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln163_9_fu_1249_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_9_fu_1249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_20_fu_1253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_20_fu_1253_p2 : signal is "no";
    signal add_ln163_21_fu_1257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1262_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_4_fu_1262_p2 : signal is "no";
    signal add_ln163_15_fu_1271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1495_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_15_fu_1271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_15_fu_1271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_15_fu_1271_p2 : signal is "no";
    signal select_ln156_1_fu_1283_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_23_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln166_fu_1323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1328_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln166_fu_1338_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln166_1_fu_1342_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln166_1_fu_1348_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_data_fu_1351_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2_fu_1362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln166_fu_1358_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal valOut_data_fu_1370_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln47_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1382_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1394_ce : STD_LOGIC;
    signal grp_fu_1401_ce : STD_LOGIC;
    signal grp_fu_1408_ce : STD_LOGIC;
    signal grp_fu_1415_ce : STD_LOGIC;
    signal grp_fu_1422_ce : STD_LOGIC;
    signal grp_fu_1429_ce : STD_LOGIC;
    signal grp_fu_1436_ce : STD_LOGIC;
    signal grp_fu_1444_ce : STD_LOGIC;
    signal grp_fu_1451_ce : STD_LOGIC;
    signal grp_fu_1460_ce : STD_LOGIC;
    signal grp_fu_1469_ce : STD_LOGIC;
    signal grp_fu_1478_ce : STD_LOGIC;
    signal grp_fu_1486_ce : STD_LOGIC;
    signal grp_fu_1495_ce : STD_LOGIC;
    signal grp_fu_1504_ce : STD_LOGIC;
    signal grp_fu_1513_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component SMM_CIF_0_2_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_2_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_16s_16s_32_1_1_U28 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1830,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_load_reg_1825,
        dout => mul_ln163_3_fu_1127_p2);

    mul_16s_16s_32_1_1_U29 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1805,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_load_reg_1800,
        dout => mul_ln163_12_fu_1133_p2);

    mul_16s_16s_32_1_1_U30 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1875,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_load_reg_1870,
        dout => mul_ln163_24_fu_1139_p2);

    mul_16s_16s_32_1_1_U31 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1965,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_load_reg_1960,
        dout => mul_ln163_1_fu_1213_p2);

    mul_16s_16s_32_1_1_U32 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_59_reg_2085,
        din1 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_58_reg_2080,
        dout => mul_ln163_2_fu_1219_p2);

    mul_16s_16s_32_1_1_U33 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2035,
        din1 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_51_reg_2030,
        dout => mul_ln163_5_fu_1225_p2);

    mul_16s_16s_32_1_1_U34 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_46_reg_2010,
        din1 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_reg_2005,
        dout => mul_ln163_10_fu_1231_p2);

    mul_16s_16s_32_1_1_U35 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2065,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_load_reg_2060,
        dout => mul_ln163_22_fu_1237_p2);

    mul_16s_16s_32_1_1_U36 : component SMM_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1940,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_load_reg_1935,
        dout => mul_ln163_23_fu_1243_p2);

    mac_muladd_16s_16s_32s_32_4_1_U37 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_q0,
        din2 => mul_ln163_24_reg_2110,
        ce => grp_fu_1394_ce,
        dout => grp_fu_1394_p3);

    mac_muladd_16s_16s_32s_32_4_1_U38 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_q0,
        din2 => mul_ln163_12_reg_2105,
        ce => grp_fu_1401_ce,
        dout => grp_fu_1401_p3);

    mac_muladd_16s_16s_32s_32_4_1_U39 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_q0,
        din2 => mul_ln163_3_reg_2100,
        ce => grp_fu_1408_ce,
        dout => grp_fu_1408_p3);

    mac_muladd_16s_16s_32s_32_4_1_U40 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_q0,
        din2 => mul_ln163_10_reg_2170,
        ce => grp_fu_1415_ce,
        dout => grp_fu_1415_p3);

    mac_muladd_16s_16s_32s_32_4_1_U41 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_q0,
        din2 => mul_ln163_23_reg_2180,
        ce => grp_fu_1422_ce,
        dout => grp_fu_1422_p3);

    mac_muladd_16s_16s_32s_32_4_1_U42 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_q0,
        din2 => mul_ln163_5_reg_2165,
        ce => grp_fu_1429_ce,
        dout => grp_fu_1429_p3);

    mac_muladd_16s_16s_32s_32_4_1_U43 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_q0,
        din1 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_q0,
        din2 => mul_ln163_22_reg_2175,
        ce => grp_fu_1436_ce,
        dout => grp_fu_1436_p3);

    mac_muladd_16s_16s_32s_32_4_1_U44 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_q0,
        din2 => mul_ln163_1_reg_2155,
        ce => grp_fu_1444_ce,
        dout => grp_fu_1444_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U45 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_q0,
        din2 => grp_fu_1408_p3,
        ce => grp_fu_1451_ce,
        dout => grp_fu_1451_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U46 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_q0,
        din2 => grp_fu_1394_p3,
        ce => grp_fu_1460_ce,
        dout => grp_fu_1460_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U47 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_q0,
        din2 => grp_fu_1401_p3,
        ce => grp_fu_1469_ce,
        dout => grp_fu_1469_p3);

    mac_muladd_16s_16s_32s_32_4_1_U48 : component SMM_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_q0,
        din2 => mul_ln163_2_reg_2160,
        ce => grp_fu_1478_ce,
        dout => grp_fu_1478_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U49 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_q0,
        din2 => grp_fu_1444_p3,
        ce => grp_fu_1486_ce,
        dout => grp_fu_1486_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U50 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0,
        din1 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_q0,
        din2 => grp_fu_1429_p3,
        ce => grp_fu_1495_ce,
        dout => grp_fu_1495_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U51 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0,
        din1 => SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_q0,
        din2 => grp_fu_1422_p3,
        ce => grp_fu_1504_ce,
        dout => grp_fu_1504_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U52 : component SMM_CIF_0_2_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0,
        din1 => SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_q0,
        din2 => grp_fu_1415_p3,
        ce => grp_fu_1513_ce,
        dout => grp_fu_1513_p3);

    flow_control_loop_pipe_sequential_init_U : component SMM_CIF_0_2_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ib_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ib_fu_180 <= ap_const_lv32_0;
                elsif (((icmp_ln156_fu_886_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ib_fu_180 <= select_ln156_2_fu_923_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_176 <= ap_const_lv6_0;
                elsif (((icmp_ln156_fu_886_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ic_fu_176 <= add_ln160_fu_935_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten6_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten6_fu_184 <= ap_const_lv37_0;
                elsif (((icmp_ln156_fu_886_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten6_fu_184 <= add_ln156_1_fu_891_p2;
                end if;
            end if; 
        end if;
    end process;

    sum_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    sum_fu_172 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter9 = ap_const_logic_1)) then 
                    sum_fu_172 <= sum_1_fu_1294_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_51_reg_2030 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_q0;
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_58_reg_2080 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_q0;
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_reg_2005 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_q0;
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_46_reg_2010 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0;
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2065 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_q0;
                SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_59_reg_2085 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_load_reg_1935 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_load_reg_1960 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_load_reg_1800 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1940 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1965 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0;
                SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1805 <= SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0;
                add_ln163_10_reg_2230 <= add_ln163_10_fu_1266_p2;
                add_ln163_21_reg_2225 <= add_ln163_21_fu_1257_p2;
                add_ln163_22_reg_2235 <= add_ln163_22_fu_1275_p2;
                add_ln163_9_reg_2210 <= add_ln163_9_fu_1249_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln160_1_reg_1585_pp0_iter2_reg <= icmp_ln160_1_reg_1585;
                icmp_ln160_1_reg_1585_pp0_iter3_reg <= icmp_ln160_1_reg_1585_pp0_iter2_reg;
                icmp_ln160_1_reg_1585_pp0_iter4_reg <= icmp_ln160_1_reg_1585_pp0_iter3_reg;
                icmp_ln160_1_reg_1585_pp0_iter5_reg <= icmp_ln160_1_reg_1585_pp0_iter4_reg;
                icmp_ln160_1_reg_1585_pp0_iter6_reg <= icmp_ln160_1_reg_1585_pp0_iter5_reg;
                icmp_ln160_1_reg_1585_pp0_iter7_reg <= icmp_ln160_1_reg_1585_pp0_iter6_reg;
                icmp_ln160_1_reg_1585_pp0_iter8_reg <= icmp_ln160_1_reg_1585_pp0_iter7_reg;
                icmp_ln160_1_reg_1585_pp0_iter9_reg <= icmp_ln160_1_reg_1585_pp0_iter8_reg;
                icmp_ln160_reg_1569_pp0_iter2_reg <= icmp_ln160_reg_1569;
                icmp_ln160_reg_1569_pp0_iter3_reg <= icmp_ln160_reg_1569_pp0_iter2_reg;
                icmp_ln160_reg_1569_pp0_iter4_reg <= icmp_ln160_reg_1569_pp0_iter3_reg;
                icmp_ln160_reg_1569_pp0_iter5_reg <= icmp_ln160_reg_1569_pp0_iter4_reg;
                icmp_ln160_reg_1569_pp0_iter6_reg <= icmp_ln160_reg_1569_pp0_iter5_reg;
                icmp_ln160_reg_1569_pp0_iter7_reg <= icmp_ln160_reg_1569_pp0_iter6_reg;
                icmp_ln160_reg_1569_pp0_iter8_reg <= icmp_ln160_reg_1569_pp0_iter7_reg;
                mul_ln163_10_reg_2170 <= mul_ln163_10_fu_1231_p2;
                mul_ln163_12_reg_2105 <= mul_ln163_12_fu_1133_p2;
                mul_ln163_1_reg_2155 <= mul_ln163_1_fu_1213_p2;
                mul_ln163_22_reg_2175 <= mul_ln163_22_fu_1237_p2;
                mul_ln163_23_reg_2180 <= mul_ln163_23_fu_1243_p2;
                mul_ln163_24_reg_2110 <= mul_ln163_24_fu_1139_p2;
                mul_ln163_2_reg_2160 <= mul_ln163_2_fu_1219_p2;
                mul_ln163_3_reg_2100 <= mul_ln163_3_fu_1127_p2;
                mul_ln163_5_reg_2165 <= mul_ln163_5_fu_1225_p2;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_load_reg_1825 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_q0;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_load_reg_1870 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_q0;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_load_reg_2060 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_q0;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1830 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2035 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_q0;
                p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1875 <= p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_q0;
                sum_1_reg_2240 <= sum_1_fu_1294_p2;
                tmp_6_reg_2250 <= sum_1_fu_1294_p2(31 downto 15);
                tmp_reg_2245 <= sum_1_fu_1294_p2(31 downto 31);
                valOut_last_reg_1589_pp0_iter2_reg <= valOut_last_reg_1589;
                valOut_last_reg_1589_pp0_iter3_reg <= valOut_last_reg_1589_pp0_iter2_reg;
                valOut_last_reg_1589_pp0_iter4_reg <= valOut_last_reg_1589_pp0_iter3_reg;
                valOut_last_reg_1589_pp0_iter5_reg <= valOut_last_reg_1589_pp0_iter4_reg;
                valOut_last_reg_1589_pp0_iter6_reg <= valOut_last_reg_1589_pp0_iter5_reg;
                valOut_last_reg_1589_pp0_iter7_reg <= valOut_last_reg_1589_pp0_iter6_reg;
                valOut_last_reg_1589_pp0_iter8_reg <= valOut_last_reg_1589_pp0_iter7_reg;
                valOut_last_reg_1589_pp0_iter9_reg <= valOut_last_reg_1589_pp0_iter8_reg;
                    zext_ln160_reg_1594(5 downto 0) <= zext_ln160_fu_985_p1(5 downto 0);
                    zext_ln160_reg_1594_pp0_iter3_reg(5 downto 0) <= zext_ln160_reg_1594(5 downto 0);
                    zext_ln163_1_reg_1617(9 downto 0) <= zext_ln163_1_fu_1003_p1(9 downto 0);
                    zext_ln163_1_reg_1617_pp0_iter3_reg(9 downto 0) <= zext_ln163_1_reg_1617(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln160_1_reg_1585 <= icmp_ln160_1_fu_941_p2;
                icmp_ln160_reg_1569 <= icmp_ln160_fu_909_p2;
                select_ln156_reg_1574 <= select_ln156_fu_915_p3;
                trunc_ln163_reg_1580 <= trunc_ln163_fu_931_p1;
                valOut_last_reg_1589 <= valOut_last_fu_957_p2;
            end if;
        end if;
    end process;
    zext_ln160_reg_1594(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln160_reg_1594_pp0_iter3_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln163_1_reg_1617(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln163_1_reg_1617_pp0_iter3_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_address0 <= zext_ln160_reg_1594_pp0_iter3_reg(5 - 1 downto 0);

    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_address0 <= zext_ln160_reg_1594_pp0_iter3_reg(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_address0 <= zext_ln160_reg_1594_pp0_iter3_reg(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 <= zext_ln163_1_reg_1617_pp0_iter3_reg(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 <= zext_ln163_1_reg_1617_pp0_iter3_reg(10 - 1 downto 0);

    SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln156_1_fu_891_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_184) + unsigned(ap_const_lv37_1));
    add_ln156_fu_903_p2 <= std_logic_vector(unsigned(ib_fu_180) + unsigned(ap_const_lv32_1));
    add_ln160_fu_935_p2 <= std_logic_vector(unsigned(select_ln156_fu_915_p3) + unsigned(ap_const_lv6_1));
    add_ln163_10_fu_1266_p2 <= std_logic_vector(unsigned(add_ln163_9_reg_2210) + unsigned(add_ln163_4_fu_1262_p2));
    add_ln163_15_fu_1271_p0 <= grp_fu_1495_p3;
    add_ln163_15_fu_1271_p1 <= grp_fu_1513_p3;
    add_ln163_15_fu_1271_p2 <= std_logic_vector(signed(add_ln163_15_fu_1271_p0) + signed(add_ln163_15_fu_1271_p1));
    add_ln163_20_fu_1253_p2 <= std_logic_vector(signed(grp_fu_1478_p3) + signed(grp_fu_1436_p3));
    add_ln163_21_fu_1257_p1 <= grp_fu_1460_p3;
    add_ln163_21_fu_1257_p2 <= std_logic_vector(unsigned(add_ln163_20_fu_1253_p2) + unsigned(add_ln163_21_fu_1257_p1));
    add_ln163_22_fu_1275_p2 <= std_logic_vector(unsigned(add_ln163_21_reg_2225) + unsigned(add_ln163_15_fu_1271_p2));
    add_ln163_23_fu_1290_p2 <= std_logic_vector(unsigned(add_ln163_22_reg_2235) + unsigned(add_ln163_10_reg_2230));
    add_ln163_24_fu_997_p2 <= std_logic_vector(unsigned(tmp_4_fu_978_p3) + unsigned(zext_ln163_fu_994_p1));
    add_ln163_4_fu_1262_p0 <= grp_fu_1486_p3;
    add_ln163_4_fu_1262_p1 <= grp_fu_1504_p3;
    add_ln163_4_fu_1262_p2 <= std_logic_vector(signed(add_ln163_4_fu_1262_p0) + signed(add_ln163_4_fu_1262_p1));
    add_ln163_9_fu_1249_p0 <= grp_fu_1451_p3;
    add_ln163_9_fu_1249_p1 <= grp_fu_1469_p3;
    add_ln163_9_fu_1249_p2 <= std_logic_vector(signed(add_ln163_9_fu_1249_p0) + signed(add_ln163_9_fu_1249_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10)));
    end process;


    ap_block_state11_io_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1585_pp0_iter9_reg)
    begin
                ap_block_state11_io <= ((icmp_ln160_1_reg_1585_pp0_iter9_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage0_iter10_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1585_pp0_iter9_reg)
    begin
                ap_block_state11_pp0_stage0_iter10 <= ((icmp_ln160_1_reg_1585_pp0_iter9_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln156_fu_886_p2)
    begin
        if (((icmp_ln156_fu_886_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1394_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1394_ce <= ap_const_logic_1;
        else 
            grp_fu_1394_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1401_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1401_ce <= ap_const_logic_1;
        else 
            grp_fu_1401_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1408_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1408_ce <= ap_const_logic_1;
        else 
            grp_fu_1408_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1415_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1415_ce <= ap_const_logic_1;
        else 
            grp_fu_1415_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1422_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1422_ce <= ap_const_logic_1;
        else 
            grp_fu_1422_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1429_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1429_ce <= ap_const_logic_1;
        else 
            grp_fu_1429_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1436_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1436_ce <= ap_const_logic_1;
        else 
            grp_fu_1436_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1444_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1444_ce <= ap_const_logic_1;
        else 
            grp_fu_1444_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1451_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1451_ce <= ap_const_logic_1;
        else 
            grp_fu_1451_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1460_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1460_ce <= ap_const_logic_1;
        else 
            grp_fu_1460_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1469_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1469_ce <= ap_const_logic_1;
        else 
            grp_fu_1469_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1478_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1478_ce <= ap_const_logic_1;
        else 
            grp_fu_1478_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1486_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1486_ce <= ap_const_logic_1;
        else 
            grp_fu_1486_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1495_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1495_ce <= ap_const_logic_1;
        else 
            grp_fu_1495_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1504_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1504_ce <= ap_const_logic_1;
        else 
            grp_fu_1504_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1513_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1513_ce <= ap_const_logic_1;
        else 
            grp_fu_1513_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln156_fu_886_p2 <= "1" when (indvar_flatten6_fu_184 = bound4) else "0";
    icmp_ln160_1_fu_941_p2 <= "1" when (add_ln160_fu_935_p2 = ap_const_lv6_20) else "0";
    icmp_ln160_fu_909_p2 <= "1" when (ic_fu_176 = ap_const_lv6_20) else "0";
    icmp_ln168_fu_947_p2 <= "0" when (select_ln156_2_fu_923_p3 = sub152) else "1";
    or_ln168_1_fu_952_p2 <= (or_ln168 or icmp_ln168_fu_947_p2);
    out_stream_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1382_p3),64));

    out_stream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter10, out_stream_TREADY, icmp_ln160_1_reg_1585_pp0_iter9_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln160_1_reg_1585_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_stream_TVALID_assign_proc : process(ap_enable_reg_pp0_iter10, icmp_ln160_1_reg_1585_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln160_1_reg_1585_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    output_data_fu_1351_p3 <= 
        sub_ln166_1_fu_1342_p2 when (tmp_reg_2245(0) = '1') else 
        zext_ln166_1_fu_1348_p1;
    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_address0 <= zext_ln160_reg_1594_pp0_iter3_reg(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_address0 <= zext_ln160_fu_985_p1(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_address0 <= zext_ln160_reg_1594(5 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 <= zext_ln163_1_reg_1617_pp0_iter3_reg(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 <= zext_ln163_1_reg_1617_pp0_iter3_reg(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_address0 <= zext_ln163_1_fu_1003_p1(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_address0 <= zext_ln163_1_reg_1617(10 - 1 downto 0);

    p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln156_1_fu_1283_p3 <= 
        ap_const_lv32_0 when (icmp_ln160_reg_1569_pp0_iter8_reg(0) = '1') else 
        sum_fu_172;
    select_ln156_2_fu_923_p3 <= 
        add_ln156_fu_903_p2 when (icmp_ln160_fu_909_p2(0) = '1') else 
        ib_fu_180;
    select_ln156_fu_915_p3 <= 
        ap_const_lv6_0 when (icmp_ln160_fu_909_p2(0) = '1') else 
        ic_fu_176;
    sub_ln166_1_fu_1342_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln166_fu_1338_p1));
    sub_ln166_fu_1323_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sum_1_reg_2240));
    sum_1_fu_1294_p2 <= std_logic_vector(unsigned(select_ln156_1_fu_1283_p3) + unsigned(add_ln163_23_fu_1290_p2));
    tmp_1_fu_1382_p3 <= (valOut_last_reg_1589_pp0_iter9_reg & zext_ln47_fu_1378_p1);
    tmp_2_fu_1362_p3 <= output_data_fu_1351_p3(17 downto 17);
    tmp_4_fu_978_p3 <= (trunc_ln163_reg_1580 & ap_const_lv5_0);
    tmp_5_fu_1328_p4 <= sub_ln166_fu_1323_p2(31 downto 15);
    trunc_ln163_fu_931_p1 <= select_ln156_2_fu_923_p3(5 - 1 downto 0);
    trunc_ln166_fu_1358_p1 <= output_data_fu_1351_p3(17 - 1 downto 0);
    valOut_data_fu_1370_p3 <= 
        ap_const_lv17_0 when (tmp_2_fu_1362_p3(0) = '1') else 
        trunc_ln166_fu_1358_p1;
    valOut_last_fu_957_p2 <= (or_ln168_1_fu_952_p2 xor ap_const_lv1_1);
    zext_ln160_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_reg_1574),64));
    zext_ln163_1_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln163_24_fu_997_p2),64));
    zext_ln163_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_reg_1574),10));
    zext_ln166_1_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_2250),18));
    zext_ln166_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1328_p4),18));
    zext_ln47_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(valOut_data_fu_1370_p3),32));
end behav;
