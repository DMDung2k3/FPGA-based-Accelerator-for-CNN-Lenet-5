<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/downloads/.xinstall/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb1EEC2EDq33_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<($_0)32, true>::plus operator+<32, true>(int, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="E:/downloads/.xinstall/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<32, true>::plus operator+<32, true, 32, true>(ap_int_base<32, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="maxPool_2.cpp" line="187" pragmaType="pipeline" parentfunction="maxpool_CIF_0_2" off="0" ii="1" rewind="0" style=""/>
<pragma file="maxPool_2.cpp" line="172" pragmaType="pipeline" parentfunction="maxpool_CIF_0_2" off="0" ii="1" rewind="0" style=""/>
<pragma file="maxPool_2.cpp" line="162" pragmaType="pipeline" parentfunction="maxpool_CIF_0_2" off="0" ii="1" rewind="0" style=""/>
<pragma file="maxPool_2.cpp" line="215" pragmaType="pipeline" parentfunction="maxpool_CIF_0_2" off="0" ii="1" rewind="0" style=""/>
<pragma file="maxPool_2.cpp" line="147" pragmaType="unroll" parentfunction="maxpool_CIF_0_2" factor="-1" skip_exit_check="0"/>
<pragma file="maxPool_2.cpp" line="141" pragmaType="unroll" parentfunction="maxpool_CIF_0_2" factor="-1" skip_exit_check="0"/>
<pragma file="maxPool_2.cpp" line="79" pragmaType="interface" parentfunction="maxpool_CIF_0_2" mode="axis" port="in" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="maxPool_2.cpp" line="80" pragmaType="interface" parentfunction="maxpool_CIF_0_2" mode="axis" port="out" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="maxPool_2.cpp" line="81" pragmaType="interface" parentfunction="maxpool_CIF_0_2" mode="ap_ctrl_none" port="return" name=""/>
<pragma file="maxPool_2.cpp" line="136" pragmaType="bind_storage" parentfunction="maxpool_CIF_0_2" op="666" impl="23" latency="-1" variable="buf"/>
<pragma file="maxPool_2.cpp" line="138" pragmaType="bind_storage" parentfunction="maxpool_CIF_0_2" op="666" impl="23" latency="-1" variable="acc"/>
<pragma file="maxPool_2.cpp" line="211" pragmaType="bind_op" parentfunction="maxpool_CIF_0_2" op="12" impl="4" latency="-1"/>
<pragma file="maxPool_2.cpp" line="212" pragmaType="bind_op" parentfunction="maxpool_CIF_0_2" op="12" impl="4" latency="-1"/>
<pragma file="maxPool_2.cpp" line="213" pragmaType="bind_op" parentfunction="maxpool_CIF_0_2" op="12" impl="4" latency="-1"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
