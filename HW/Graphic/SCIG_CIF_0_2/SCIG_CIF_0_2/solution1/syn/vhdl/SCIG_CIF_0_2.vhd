-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SCIG_CIF_0_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    padValue : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of SCIG_CIF_0_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SCIG_CIF_0_2_SCIG_CIF_0_2,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.592000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=1182,HLS_SYN_LUT=6792,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1978 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001100101111000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal icmp_ln131_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_reg_166 : STD_LOGIC_VECTOR (0 downto 0);
    signal valIn_data_1_fu_134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_1_reg_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_2_fu_138_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_2_reg_175 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_3_fu_142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_3_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_4_fu_146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_4_reg_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_fu_150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_reg_191 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_154_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal KER_size_1_fu_158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_1_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal KER_bound_fu_162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul44_reg_211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal inElem_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_idle : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_ready : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TREADY : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_in_r_TREADY : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_idle : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_ready : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TREADY : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce0 : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce1 : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_we1 : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_in_r_TREADY : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID : STD_LOGIC;
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm_state15 : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_fu_114_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal valIn_data_fu_124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_ce : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component SCIG_CIF_0_2_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        KER_bound : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_TVALID : OUT STD_LOGIC );
    end component;


    component SCIG_CIF_0_2_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        mul44 : IN STD_LOGIC_VECTOR (31 downto 0);
        inElem_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        inElem_ce0 : OUT STD_LOGIC;
        inElem_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        inElem_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        inElem_ce1 : OUT STD_LOGIC;
        inElem_we1 : OUT STD_LOGIC;
        inElem_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        empty : IN STD_LOGIC_VECTOR (15 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_TVALID : OUT STD_LOGIC );
    end component;


    component SCIG_CIF_0_2_mul_32s_14ns_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SCIG_CIF_0_2_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SCIG_CIF_0_2_inElem_RAM_S2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component SCIG_CIF_0_2_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    inElem_U : component SCIG_CIF_0_2_inElem_RAM_S2P_LUTRAM_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address0,
        ce0 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce0,
        q0 => inElem_q0,
        address1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address1,
        ce1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce1,
        we1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_we1,
        d1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_d1);

    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94 : component SCIG_CIF_0_2_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start,
        ap_done => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done,
        ap_idle => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_idle,
        ap_ready => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        out_r_TREADY => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TREADY,
        KER_bound => KER_bound_reg_206,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_in_r_TREADY,
        out_r_TDATA => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TDATA,
        out_r_TVALID => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID);

    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103 : component SCIG_CIF_0_2_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start,
        ap_done => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done,
        ap_idle => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_idle,
        ap_ready => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        out_r_TREADY => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TREADY,
        mul44 => mul44_reg_211,
        inElem_address0 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address0,
        inElem_ce0 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce0,
        inElem_q0 => inElem_q0,
        inElem_address1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_address1,
        inElem_ce1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_ce1,
        inElem_we1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_we1,
        inElem_d1 => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_inElem_d1,
        empty => empty_reg_196,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_in_r_TREADY,
        out_r_TDATA => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TDATA,
        out_r_TVALID => grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID);

    mul_32s_14ns_32_2_1_U10 : component SCIG_CIF_0_2_mul_32s_14ns_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 14,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => valIn_data_1_reg_170,
        din1 => grp_fu_114_p1,
        ce => grp_fu_114_ce,
        dout => grp_fu_114_p2);

    mul_32s_32s_32_1_1_U11 : component SCIG_CIF_0_2_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_data_4_reg_186,
        din1 => valIn_data_2_reg_175,
        dout => KER_size_0_fu_150_p2);

    mul_32s_32s_32_1_1_U12 : component SCIG_CIF_0_2_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => KER_size_0_reg_191,
        din1 => valIn_data_2_reg_175,
        dout => KER_size_1_fu_158_p2);

    mul_32s_32s_32_1_1_U13 : component SCIG_CIF_0_2_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => KER_size_1_reg_201,
        din1 => valIn_data_3_reg_181,
        dout => KER_bound_fu_162_p2);

    regslice_both_in_r_U : component SCIG_CIF_0_2_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component SCIG_CIF_0_2_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state15) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_ready = ap_const_logic_1)) then 
                    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_ready = ap_const_logic_1)) then 
                    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                KER_bound_reg_206 <= KER_bound_fu_162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                KER_size_0_reg_191 <= KER_size_0_fu_150_p2;
                empty_reg_196 <= empty_fu_154_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                KER_size_1_reg_201 <= KER_size_1_fu_158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln131_reg_166 <= icmp_ln131_fu_128_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                mul44_reg_211 <= grp_fu_114_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                valIn_data_1_reg_170 <= valIn_data_1_fu_134_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                valIn_data_2_reg_175 <= valIn_data_2_fu_138_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                valIn_data_3_reg_181 <= valIn_data_3_fu_142_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                valIn_data_4_reg_186 <= valIn_data_4_fu_146_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, icmp_ln131_reg_166, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk, ap_CS_fsm_state17, out_r_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln131_reg_166 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln131_reg_166 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((regslice_both_out_r_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state15 <= ap_NS_fsm(14);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done)
    begin
        if ((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done)
    begin
        if ((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk)
    begin
        if ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(out_r_TREADY_int_regslice)
    begin
        if ((out_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state1 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state2 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state3 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state4 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state5 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state6 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state7 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state8 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_fu_154_p1 <= padValue(16 - 1 downto 0);
    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_ap_start_reg;
    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state16);
    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_ap_start_reg;
    grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state13);

    grp_fu_114_ce_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state14, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_114_ce <= ap_const_logic_1;
        else 
            grp_fu_114_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_114_p1 <= ap_const_lv32_1978(14 - 1 downto 0);
    icmp_ln131_fu_128_p2 <= "1" when (valIn_data_fu_124_p1 = ap_const_lv32_0) else "0";

    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_r_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_in_r_TREADY, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_in_r_TREADY, ap_CS_fsm_state13, ap_CS_fsm_state16, out_r_TREADY_int_regslice)
    begin
        if (((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((out_r_TREADY_int_regslice 
    = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            in_r_TREADY_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_in_r_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            in_r_TREADY_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_in_r_TREADY;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TDATA, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TDATA, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID, ap_CS_fsm_state13, ap_CS_fsm_state16, in_r_TDATA_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state7) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_state6) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_state5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_boolean_0 = ap_block_state4) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_r_TDATA_int_regslice <= in_r_TDATA_int_regslice;
        elsif (((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            out_r_TDATA_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TDATA;
        elsif (((grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            out_r_TDATA_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TDATA;
        else 
            out_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID, grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID, ap_CS_fsm_state13, ap_CS_fsm_state16, out_r_TREADY_int_regslice)
    begin
        if (((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((out_r_TREADY_int_regslice 
    = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            out_r_TVALID_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_155_1_fu_103_out_r_TVALID;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_r_TVALID_int_regslice <= grp_SCIG_CIF_0_2_Pipeline_VITIS_LOOP_242_6_fu_94_out_r_TVALID;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    valIn_data_1_fu_134_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_2_fu_138_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_3_fu_142_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_4_fu_146_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_fu_124_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
end behav;
