-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SMM_CIF_0_1_SMM_CIF_0_1_Pipeline_L2_L3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    bound4 : IN STD_LOGIC_VECTOR (33 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    sub151 : IN STD_LOGIC_VECTOR (31 downto 0);
    or_ln168 : IN STD_LOGIC_VECTOR (0 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 : OUT STD_LOGIC;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 : OUT STD_LOGIC;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of SMM_CIF_0_1_SMM_CIF_0_1_Pipeline_L2_L3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln160_1_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln156_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln160_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1562_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln156_fu_917_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln156_reg_1567 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln163_24_fu_959_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln163_24_reg_1572 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln160_1_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1577_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1581_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln160_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_reg_1586 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_reg_1586_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_reg_1619 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_reg_1619_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_load_reg_1842 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1847 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_load_reg_1862 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1867 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_load_reg_1882 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1887 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_load_reg_1942 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1947 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_load_reg_1962 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1967 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_43_reg_2002 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_44_reg_2007 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_load_reg_2022 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2027 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_49_reg_2052 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_2057 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_53_reg_2072 : STD_LOGIC_VECTOR (15 downto 0);
    signal SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2077 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln163_3_fu_1140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_3_reg_2092 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_12_fu_1146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_12_reg_2097 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_24_fu_1152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_24_reg_2102 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_1_fu_1226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_1_reg_2147 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_fu_1232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_reg_2152 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_5_fu_1238_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_5_reg_2157 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_10_fu_1244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_10_reg_2162 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_22_fu_1250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_22_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_23_fu_1256_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_23_reg_2172 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_9_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln163_9_fu_1262_p2 : signal is "no";
    signal add_ln163_9_reg_2202 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1408_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_21_fu_1270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_21_fu_1270_p2 : signal is "no";
    signal add_ln163_21_reg_2217 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_10_fu_1279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_10_reg_2222 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_22_fu_1288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_22_reg_2227 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_fu_1307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_reg_2232 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2242 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_174 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal ic_fu_178 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln160_fu_965_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ib_fu_182 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln156_2_fu_925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_fu_186 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    signal add_ln156_1_fu_893_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln156_fu_905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln156_fu_933_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_941_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln163_fu_937_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln163_fu_949_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln163_fu_955_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln168_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln168_1_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln163_9_fu_1262_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_9_fu_1262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1471_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_20_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_20_fu_1266_p2 : signal is "no";
    signal add_ln163_21_fu_1270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1453_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1275_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_4_fu_1275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_4_fu_1275_p2 : signal is "no";
    signal add_ln163_15_fu_1284_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_15_fu_1284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_15_fu_1284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_15_fu_1284_p2 : signal is "no";
    signal select_ln156_1_fu_1296_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_23_fu_1303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln166_fu_1336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1341_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln166_fu_1351_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln166_1_fu_1355_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln166_1_fu_1361_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_data_fu_1364_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln166_fu_1371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1375_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1387_ce : STD_LOGIC;
    signal grp_fu_1394_ce : STD_LOGIC;
    signal grp_fu_1401_ce : STD_LOGIC;
    signal grp_fu_1408_ce : STD_LOGIC;
    signal grp_fu_1415_ce : STD_LOGIC;
    signal grp_fu_1422_ce : STD_LOGIC;
    signal grp_fu_1429_ce : STD_LOGIC;
    signal grp_fu_1437_ce : STD_LOGIC;
    signal grp_fu_1444_ce : STD_LOGIC;
    signal grp_fu_1453_ce : STD_LOGIC;
    signal grp_fu_1462_ce : STD_LOGIC;
    signal grp_fu_1471_ce : STD_LOGIC;
    signal grp_fu_1479_ce : STD_LOGIC;
    signal grp_fu_1488_ce : STD_LOGIC;
    signal grp_fu_1497_ce : STD_LOGIC;
    signal grp_fu_1506_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component SMM_CIF_0_1_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SMM_CIF_0_1_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_16s_16s_32_1_1_U28 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1867,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_load_reg_1862,
        dout => mul_ln163_3_fu_1140_p2);

    mul_16s_16s_32_1_1_U29 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1847,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_load_reg_1842,
        dout => mul_ln163_12_fu_1146_p2);

    mul_16s_16s_32_1_1_U30 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1887,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_load_reg_1882,
        dout => mul_ln163_24_fu_1152_p2);

    mul_16s_16s_32_1_1_U31 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1967,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_load_reg_1962,
        dout => mul_ln163_1_fu_1226_p2);

    mul_16s_16s_32_1_1_U32 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2077,
        din1 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_53_reg_2072,
        dout => mul_ln163_2_fu_1232_p2);

    mul_16s_16s_32_1_1_U33 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2027,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_load_reg_2022,
        dout => mul_ln163_5_fu_1238_p2);

    mul_16s_16s_32_1_1_U34 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_44_reg_2007,
        din1 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_43_reg_2002,
        dout => mul_ln163_10_fu_1244_p2);

    mul_16s_16s_32_1_1_U35 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_2057,
        din1 => SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_49_reg_2052,
        dout => mul_ln163_22_fu_1250_p2);

    mul_16s_16s_32_1_1_U36 : component SMM_CIF_0_1_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1947,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_load_reg_1942,
        dout => mul_ln163_23_fu_1256_p2);

    mac_muladd_16s_16s_32s_32_4_1_U37 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_q0,
        din2 => mul_ln163_24_reg_2102,
        ce => grp_fu_1387_ce,
        dout => grp_fu_1387_p3);

    mac_muladd_16s_16s_32s_32_4_1_U38 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_q0,
        din2 => mul_ln163_12_reg_2097,
        ce => grp_fu_1394_ce,
        dout => grp_fu_1394_p3);

    mac_muladd_16s_16s_32s_32_4_1_U39 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_q0,
        din2 => mul_ln163_3_reg_2092,
        ce => grp_fu_1401_ce,
        dout => grp_fu_1401_p3);

    mac_muladd_16s_16s_32s_32_4_1_U40 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_q0,
        din2 => mul_ln163_10_reg_2162,
        ce => grp_fu_1408_ce,
        dout => grp_fu_1408_p3);

    mac_muladd_16s_16s_32s_32_4_1_U41 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_q0,
        din2 => mul_ln163_23_reg_2172,
        ce => grp_fu_1415_ce,
        dout => grp_fu_1415_p3);

    mac_muladd_16s_16s_32s_32_4_1_U42 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_q0,
        din2 => mul_ln163_5_reg_2157,
        ce => grp_fu_1422_ce,
        dout => grp_fu_1422_p3);

    mac_muladd_16s_16s_32s_32_4_1_U43 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_q0,
        din2 => mul_ln163_22_reg_2167,
        ce => grp_fu_1429_ce,
        dout => grp_fu_1429_p3);

    mac_muladd_16s_16s_32s_32_4_1_U44 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_q0,
        din2 => mul_ln163_1_reg_2147,
        ce => grp_fu_1437_ce,
        dout => grp_fu_1437_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U45 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_q0,
        din2 => grp_fu_1401_p3,
        ce => grp_fu_1444_ce,
        dout => grp_fu_1444_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U46 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_q0,
        din2 => grp_fu_1387_p3,
        ce => grp_fu_1453_ce,
        dout => grp_fu_1453_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U47 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_q0,
        din2 => grp_fu_1394_p3,
        ce => grp_fu_1462_ce,
        dout => grp_fu_1462_p3);

    mac_muladd_16s_16s_32s_32_4_1_U48 : component SMM_CIF_0_1_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_q0,
        din2 => mul_ln163_2_reg_2152,
        ce => grp_fu_1471_ce,
        dout => grp_fu_1471_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U49 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_q0,
        din2 => grp_fu_1437_p3,
        ce => grp_fu_1479_ce,
        dout => grp_fu_1479_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U50 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_q0,
        din2 => grp_fu_1422_p3,
        ce => grp_fu_1488_ce,
        dout => grp_fu_1488_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U51 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0,
        din1 => SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_q0,
        din2 => grp_fu_1415_p3,
        ce => grp_fu_1497_ce,
        dout => grp_fu_1497_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U52 : component SMM_CIF_0_1_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0,
        din1 => p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_q0,
        din2 => grp_fu_1408_p3,
        ce => grp_fu_1506_ce,
        dout => grp_fu_1506_p3);

    flow_control_loop_pipe_sequential_init_U : component SMM_CIF_0_1_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ib_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ib_fu_182 <= ap_const_lv32_0;
                elsif (((icmp_ln156_fu_888_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ib_fu_182 <= select_ln156_2_fu_925_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_178 <= ap_const_lv2_0;
                elsif (((icmp_ln156_fu_888_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ic_fu_178 <= add_ln160_fu_965_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten6_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten6_fu_186 <= ap_const_lv34_0;
                elsif (((icmp_ln156_fu_888_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten6_fu_186 <= add_ln156_1_fu_893_p2;
                end if;
            end if; 
        end if;
    end process;

    sum_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    sum_fu_174 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter9 = ap_const_logic_1)) then 
                    sum_fu_174 <= sum_1_fu_1307_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_43_reg_2002 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_q0;
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_49_reg_2052 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_q0;
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_53_reg_2072 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_q0;
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_44_reg_2007 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0;
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_2057 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_q0;
                SMM_CIF_0_1_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_54_reg_2077 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_load_reg_1942 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_load_reg_1962 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_load_reg_1842 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_load_reg_1947 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1967 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0;
                SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_load_reg_1847 <= SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0;
                add_ln163_10_reg_2222 <= add_ln163_10_fu_1279_p2;
                add_ln163_21_reg_2217 <= add_ln163_21_fu_1270_p2;
                add_ln163_22_reg_2227 <= add_ln163_22_fu_1288_p2;
                add_ln163_9_reg_2202 <= add_ln163_9_fu_1262_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln160_1_reg_1577_pp0_iter2_reg <= icmp_ln160_1_reg_1577;
                icmp_ln160_1_reg_1577_pp0_iter3_reg <= icmp_ln160_1_reg_1577_pp0_iter2_reg;
                icmp_ln160_1_reg_1577_pp0_iter4_reg <= icmp_ln160_1_reg_1577_pp0_iter3_reg;
                icmp_ln160_1_reg_1577_pp0_iter5_reg <= icmp_ln160_1_reg_1577_pp0_iter4_reg;
                icmp_ln160_1_reg_1577_pp0_iter6_reg <= icmp_ln160_1_reg_1577_pp0_iter5_reg;
                icmp_ln160_1_reg_1577_pp0_iter7_reg <= icmp_ln160_1_reg_1577_pp0_iter6_reg;
                icmp_ln160_1_reg_1577_pp0_iter8_reg <= icmp_ln160_1_reg_1577_pp0_iter7_reg;
                icmp_ln160_1_reg_1577_pp0_iter9_reg <= icmp_ln160_1_reg_1577_pp0_iter8_reg;
                icmp_ln160_reg_1562_pp0_iter2_reg <= icmp_ln160_reg_1562;
                icmp_ln160_reg_1562_pp0_iter3_reg <= icmp_ln160_reg_1562_pp0_iter2_reg;
                icmp_ln160_reg_1562_pp0_iter4_reg <= icmp_ln160_reg_1562_pp0_iter3_reg;
                icmp_ln160_reg_1562_pp0_iter5_reg <= icmp_ln160_reg_1562_pp0_iter4_reg;
                icmp_ln160_reg_1562_pp0_iter6_reg <= icmp_ln160_reg_1562_pp0_iter5_reg;
                icmp_ln160_reg_1562_pp0_iter7_reg <= icmp_ln160_reg_1562_pp0_iter6_reg;
                icmp_ln160_reg_1562_pp0_iter8_reg <= icmp_ln160_reg_1562_pp0_iter7_reg;
                mul_ln163_10_reg_2162 <= mul_ln163_10_fu_1244_p2;
                mul_ln163_12_reg_2097 <= mul_ln163_12_fu_1146_p2;
                mul_ln163_1_reg_2147 <= mul_ln163_1_fu_1226_p2;
                mul_ln163_22_reg_2167 <= mul_ln163_22_fu_1250_p2;
                mul_ln163_23_reg_2172 <= mul_ln163_23_fu_1256_p2;
                mul_ln163_24_reg_2102 <= mul_ln163_24_fu_1152_p2;
                mul_ln163_2_reg_2152 <= mul_ln163_2_fu_1232_p2;
                mul_ln163_3_reg_2092 <= mul_ln163_3_fu_1140_p2;
                mul_ln163_5_reg_2157 <= mul_ln163_5_fu_1238_p2;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_load_reg_1862 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_q0;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_load_reg_2022 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_q0;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_load_reg_1882 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_q0;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1867 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_load_reg_2027 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_q0;
                p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_load_reg_1887 <= p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_q0;
                sum_1_reg_2232 <= sum_1_fu_1307_p2;
                tmp_5_reg_2242 <= sum_1_fu_1307_p2(31 downto 15);
                tmp_reg_2237 <= sum_1_fu_1307_p2(31 downto 31);
                valOut_last_reg_1581_pp0_iter2_reg <= valOut_last_reg_1581;
                valOut_last_reg_1581_pp0_iter3_reg <= valOut_last_reg_1581_pp0_iter2_reg;
                valOut_last_reg_1581_pp0_iter4_reg <= valOut_last_reg_1581_pp0_iter3_reg;
                valOut_last_reg_1581_pp0_iter5_reg <= valOut_last_reg_1581_pp0_iter4_reg;
                valOut_last_reg_1581_pp0_iter6_reg <= valOut_last_reg_1581_pp0_iter5_reg;
                valOut_last_reg_1581_pp0_iter7_reg <= valOut_last_reg_1581_pp0_iter6_reg;
                valOut_last_reg_1581_pp0_iter8_reg <= valOut_last_reg_1581_pp0_iter7_reg;
                valOut_last_reg_1581_pp0_iter9_reg <= valOut_last_reg_1581_pp0_iter8_reg;
                    zext_ln160_reg_1586(1 downto 0) <= zext_ln160_fu_1008_p1(1 downto 0);
                    zext_ln160_reg_1586_pp0_iter3_reg(1 downto 0) <= zext_ln160_reg_1586(1 downto 0);
                    zext_ln163_1_reg_1619(6 downto 0) <= zext_ln163_1_fu_1017_p1(6 downto 0);
                    zext_ln163_1_reg_1619_pp0_iter3_reg(6 downto 0) <= zext_ln163_1_reg_1619(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln163_24_reg_1572 <= add_ln163_24_fu_959_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln160_1_reg_1577 <= icmp_ln160_1_fu_971_p2;
                icmp_ln160_reg_1562 <= icmp_ln160_fu_911_p2;
                select_ln156_reg_1567 <= select_ln156_fu_917_p3;
                valOut_last_reg_1581 <= valOut_last_fu_987_p2;
            end if;
        end if;
    end process;
    zext_ln160_reg_1586(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln160_reg_1586_pp0_iter3_reg(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln163_1_reg_1619(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln163_1_reg_1619_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_address0 <= zext_ln160_reg_1586_pp0_iter3_reg(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_address0 <= zext_ln160_reg_1586_pp0_iter3_reg(2 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 <= zext_ln163_1_reg_1619_pp0_iter3_reg(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 <= zext_ln163_1_reg_1619_pp0_iter3_reg(7 - 1 downto 0);

    SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_1;
        else 
            SMM_CIF_0_1_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln156_1_fu_893_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_186) + unsigned(ap_const_lv34_1));
    add_ln156_fu_905_p2 <= std_logic_vector(unsigned(ib_fu_182) + unsigned(ap_const_lv32_1));
    add_ln160_fu_965_p2 <= std_logic_vector(unsigned(select_ln156_fu_917_p3) + unsigned(ap_const_lv2_1));
    add_ln163_10_fu_1279_p2 <= std_logic_vector(unsigned(add_ln163_9_reg_2202) + unsigned(add_ln163_4_fu_1275_p2));
    add_ln163_15_fu_1284_p0 <= grp_fu_1488_p3;
    add_ln163_15_fu_1284_p1 <= grp_fu_1506_p3;
    add_ln163_15_fu_1284_p2 <= std_logic_vector(signed(add_ln163_15_fu_1284_p0) + signed(add_ln163_15_fu_1284_p1));
    add_ln163_20_fu_1266_p2 <= std_logic_vector(signed(grp_fu_1471_p3) + signed(grp_fu_1429_p3));
    add_ln163_21_fu_1270_p1 <= grp_fu_1453_p3;
    add_ln163_21_fu_1270_p2 <= std_logic_vector(unsigned(add_ln163_20_fu_1266_p2) + unsigned(add_ln163_21_fu_1270_p1));
    add_ln163_22_fu_1288_p2 <= std_logic_vector(unsigned(add_ln163_21_reg_2217) + unsigned(add_ln163_15_fu_1284_p2));
    add_ln163_23_fu_1303_p2 <= std_logic_vector(unsigned(add_ln163_22_reg_2227) + unsigned(add_ln163_10_reg_2222));
    add_ln163_24_fu_959_p2 <= std_logic_vector(unsigned(sub_ln163_fu_949_p2) + unsigned(zext_ln163_fu_955_p1));
    add_ln163_4_fu_1275_p0 <= grp_fu_1479_p3;
    add_ln163_4_fu_1275_p1 <= grp_fu_1497_p3;
    add_ln163_4_fu_1275_p2 <= std_logic_vector(signed(add_ln163_4_fu_1275_p0) + signed(add_ln163_4_fu_1275_p1));
    add_ln163_9_fu_1262_p0 <= grp_fu_1444_p3;
    add_ln163_9_fu_1262_p1 <= grp_fu_1462_p3;
    add_ln163_9_fu_1262_p2 <= std_logic_vector(signed(add_ln163_9_fu_1262_p0) + signed(add_ln163_9_fu_1262_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10)));
    end process;


    ap_block_state11_io_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1577_pp0_iter9_reg)
    begin
                ap_block_state11_io <= ((icmp_ln160_1_reg_1577_pp0_iter9_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage0_iter10_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1577_pp0_iter9_reg)
    begin
                ap_block_state11_pp0_stage0_iter10 <= ((icmp_ln160_1_reg_1577_pp0_iter9_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln156_fu_888_p2)
    begin
        if (((icmp_ln156_fu_888_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1387_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1387_ce <= ap_const_logic_1;
        else 
            grp_fu_1387_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1394_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1394_ce <= ap_const_logic_1;
        else 
            grp_fu_1394_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1401_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1401_ce <= ap_const_logic_1;
        else 
            grp_fu_1401_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1408_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1408_ce <= ap_const_logic_1;
        else 
            grp_fu_1408_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1415_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1415_ce <= ap_const_logic_1;
        else 
            grp_fu_1415_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1422_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1422_ce <= ap_const_logic_1;
        else 
            grp_fu_1422_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1429_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1429_ce <= ap_const_logic_1;
        else 
            grp_fu_1429_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1437_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1437_ce <= ap_const_logic_1;
        else 
            grp_fu_1437_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1444_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1444_ce <= ap_const_logic_1;
        else 
            grp_fu_1444_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1453_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1453_ce <= ap_const_logic_1;
        else 
            grp_fu_1453_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1462_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1462_ce <= ap_const_logic_1;
        else 
            grp_fu_1462_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1471_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1471_ce <= ap_const_logic_1;
        else 
            grp_fu_1471_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1479_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1479_ce <= ap_const_logic_1;
        else 
            grp_fu_1479_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1488_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1488_ce <= ap_const_logic_1;
        else 
            grp_fu_1488_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1497_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1497_ce <= ap_const_logic_1;
        else 
            grp_fu_1497_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1506_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1506_ce <= ap_const_logic_1;
        else 
            grp_fu_1506_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln156_fu_888_p2 <= "1" when (indvar_flatten6_fu_186 = bound4) else "0";
    icmp_ln160_1_fu_971_p2 <= "1" when (add_ln160_fu_965_p2 = ap_const_lv2_3) else "0";
    icmp_ln160_fu_911_p2 <= "1" when (ic_fu_178 = ap_const_lv2_3) else "0";
    icmp_ln168_fu_977_p2 <= "0" when (select_ln156_2_fu_925_p3 = sub151) else "1";
    or_ln168_1_fu_982_p2 <= (or_ln168 or icmp_ln168_fu_977_p2);
    out_stream_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1375_p3),64));

    out_stream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter10, out_stream_TREADY, icmp_ln160_1_reg_1577_pp0_iter9_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln160_1_reg_1577_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_stream_TVALID_assign_proc : process(ap_enable_reg_pp0_iter10, icmp_ln160_1_reg_1577_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln160_1_reg_1577_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    output_data_fu_1364_p3 <= 
        sub_ln166_1_fu_1355_p2 when (tmp_reg_2237(0) = '1') else 
        zext_ln166_1_fu_1361_p1;
    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_address0 <= zext_ln160_reg_1586_pp0_iter3_reg(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_address0 <= zext_ln160_reg_1586_pp0_iter3_reg(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_address0 <= zext_ln160_fu_1008_p1(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_address0 <= zext_ln160_reg_1586(2 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 <= zext_ln163_1_reg_1619_pp0_iter3_reg(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 <= zext_ln163_1_reg_1619_pp0_iter3_reg(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_address0 <= zext_ln163_1_fu_1017_p1(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_address0 <= zext_ln163_1_reg_1619(7 - 1 downto 0);

    p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11SMM_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln156_1_fu_1296_p3 <= 
        ap_const_lv32_0 when (icmp_ln160_reg_1562_pp0_iter8_reg(0) = '1') else 
        sum_fu_174;
    select_ln156_2_fu_925_p3 <= 
        add_ln156_fu_905_p2 when (icmp_ln160_fu_911_p2(0) = '1') else 
        ib_fu_182;
    select_ln156_fu_917_p3 <= 
        ap_const_lv2_0 when (icmp_ln160_fu_911_p2(0) = '1') else 
        ic_fu_178;
        sext_ln166_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_data_fu_1364_p3),32));

    sub_ln163_fu_949_p2 <= std_logic_vector(unsigned(tmp_3_fu_941_p3) - unsigned(trunc_ln163_fu_937_p1));
    sub_ln166_1_fu_1355_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln166_fu_1351_p1));
    sub_ln166_fu_1336_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sum_1_reg_2232));
    sum_1_fu_1307_p2 <= std_logic_vector(unsigned(select_ln156_1_fu_1296_p3) + unsigned(add_ln163_23_fu_1303_p2));
    tmp_1_fu_1375_p3 <= (valOut_last_reg_1581_pp0_iter9_reg & sext_ln166_fu_1371_p1);
    tmp_3_fu_941_p3 <= (trunc_ln156_fu_933_p1 & ap_const_lv2_0);
    tmp_4_fu_1341_p4 <= sub_ln166_fu_1336_p2(31 downto 15);
    trunc_ln156_fu_933_p1 <= select_ln156_2_fu_925_p3(5 - 1 downto 0);
    trunc_ln163_fu_937_p1 <= select_ln156_2_fu_925_p3(7 - 1 downto 0);
    valOut_last_fu_987_p2 <= (or_ln168_1_fu_982_p2 xor ap_const_lv1_1);
    zext_ln160_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_reg_1567),64));
    zext_ln163_1_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln163_24_reg_1572),64));
    zext_ln163_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_fu_917_p3),7));
    zext_ln166_1_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2242),18));
    zext_ln166_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1341_p4),18));
end behav;
