// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FC_CIF_0_2_FC_CIF_0_2_Pipeline_L2_L3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_stream_TREADY,
        bound4,
        out_stream_TDATA,
        out_stream_TVALID,
        sub151,
        or_ln168,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_1,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_2,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_3,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_1,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_2,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_3,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_1,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_2,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_3,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_0_s,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_1_s,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_2_s,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_3_s,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_1,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_2,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_3,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_2,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_1,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0,
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_1,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_2,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_3,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0,
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0,
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   out_stream_TREADY;
input  [33:0] bound4;
output  [63:0] out_stream_TDATA;
output   out_stream_TVALID;
input  [31:0] sub151;
input  [0:0] or_ln168;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_3;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_1;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_2;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_3;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_1;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_2;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_3;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_1;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_2;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_3;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_0_s;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_1_s;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_2_s;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_3_s;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_1;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_2;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_3;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_2;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_1;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0;
input  [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_1;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_2;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_3;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0;
output  [5:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0;
output   FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0;
input  [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0;
output  [5:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0;
output   p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0;
input  [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0;

reg ap_idle;
reg out_stream_TVALID;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0;
reg FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0;
reg p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln160_1_reg_1510;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter8_reg;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln156_fu_500_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    out_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln160_fu_523_p2;
reg   [0:0] icmp_ln160_reg_1480;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter2_reg;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter3_reg;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter4_reg;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter5_reg;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter6_reg;
reg   [0:0] icmp_ln160_reg_1480_pp0_iter7_reg;
wire   [5:0] add_ln163_15_fu_561_p2;
reg   [5:0] add_ln163_15_reg_1485;
wire   [1:0] trunc_ln163_1_fu_567_p1;
reg   [1:0] trunc_ln163_1_reg_1490;
reg   [1:0] trunc_ln163_1_reg_1490_pp0_iter2_reg;
reg   [1:0] trunc_ln163_1_reg_1490_pp0_iter3_reg;
wire   [0:0] icmp_ln160_1_fu_577_p2;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter2_reg;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter3_reg;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter4_reg;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter5_reg;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter6_reg;
reg   [0:0] icmp_ln160_1_reg_1510_pp0_iter7_reg;
wire   [0:0] valOut_last_fu_593_p2;
reg   [0:0] valOut_last_reg_1514;
reg   [0:0] valOut_last_reg_1514_pp0_iter2_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter3_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter4_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter5_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter6_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter7_reg;
reg   [0:0] valOut_last_reg_1514_pp0_iter8_reg;
wire   [63:0] zext_ln163_1_fu_614_p1;
reg   [63:0] zext_ln163_1_reg_1519;
wire   [15:0] tmp_6_fu_753_p6;
reg  signed [15:0] tmp_6_reg_1611;
reg  signed [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616;
wire   [15:0] tmp_8_fu_787_p6;
reg  signed [15:0] tmp_8_reg_1631;
reg  signed [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636;
wire   [15:0] tmp_13_fu_821_p6;
reg  signed [15:0] tmp_13_reg_1651;
reg  signed [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656;
wire   [15:0] tmp_15_fu_855_p6;
reg  signed [15:0] tmp_15_reg_1671;
reg  signed [15:0] FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676;
wire   [15:0] tmp_2_fu_1017_p6;
reg  signed [15:0] tmp_2_reg_1691;
reg  signed [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696;
wire   [15:0] tmp_4_fu_1051_p6;
reg  signed [15:0] tmp_4_reg_1711;
reg  signed [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716;
wire   [15:0] tmp_s_fu_1097_p6;
reg  signed [15:0] tmp_s_reg_1731;
reg  signed [15:0] FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736;
wire   [15:0] tmp_11_fu_1131_p6;
reg  signed [15:0] tmp_11_reg_1751;
reg  signed [15:0] p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756;
wire   [31:0] mul_ln163_1_fu_1177_p2;
reg  signed [31:0] mul_ln163_1_reg_1771;
wire   [31:0] mul_ln163_2_fu_1183_p2;
reg  signed [31:0] mul_ln163_2_reg_1776;
wire   [31:0] mul_ln163_7_fu_1189_p2;
reg  signed [31:0] mul_ln163_7_reg_1781;
wire   [31:0] mul_ln163_8_fu_1195_p2;
reg  signed [31:0] mul_ln163_8_reg_1786;
wire   [31:0] mul_ln163_3_fu_1225_p2;
reg  signed [31:0] mul_ln163_3_reg_1791;
wire   [31:0] mul_ln163_6_fu_1231_p2;
reg  signed [31:0] mul_ln163_6_reg_1796;
wire   [31:0] mul_ln163_9_fu_1237_p2;
reg  signed [31:0] mul_ln163_9_reg_1801;
wire   [31:0] mul_ln163_15_fu_1243_p2;
reg  signed [31:0] mul_ln163_15_reg_1806;
(* use_dsp48 = "no" *) wire   [31:0] add_ln163_5_fu_1249_p2;
reg   [31:0] add_ln163_5_reg_1811;
(* use_dsp48 = "no" *) wire   [31:0] add_ln163_12_fu_1253_p2;
reg   [31:0] add_ln163_12_reg_1816;
wire   [31:0] add_ln163_6_fu_1261_p2;
reg   [31:0] add_ln163_6_reg_1821;
wire   [31:0] add_ln163_13_fu_1270_p2;
reg   [31:0] add_ln163_13_reg_1826;
wire   [31:0] sum_1_fu_1289_p2;
reg   [31:0] sum_1_reg_1831;
reg   [0:0] tmp_reg_1836;
reg   [16:0] tmp_19_reg_1841;
reg   [31:0] sum_fu_228;
wire    ap_loop_init;
reg   [2:0] ic_fu_232;
wire   [2:0] add_ln160_fu_571_p2;
reg   [31:0] ib_fu_236;
wire   [31:0] select_ln156_2_fu_537_p3;
reg   [33:0] indvar_flatten6_fu_240;
wire   [33:0] add_ln156_1_fu_505_p2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] add_ln156_fu_517_p2;
wire   [3:0] trunc_ln163_fu_545_p1;
wire   [2:0] select_ln156_fu_529_p3;
wire   [5:0] tmp_17_fu_549_p3;
wire   [5:0] zext_ln163_fu_557_p1;
wire   [0:0] icmp_ln168_fu_583_p2;
wire   [0:0] or_ln168_1_fu_588_p2;
wire  signed [15:0] tmp_7_fu_766_p6;
wire  signed [15:0] tmp_9_fu_800_p6;
wire  signed [15:0] tmp_14_fu_834_p6;
wire  signed [15:0] tmp_16_fu_868_p6;
wire  signed [15:0] tmp_3_fu_1030_p6;
wire  signed [15:0] tmp_5_fu_1064_p6;
wire  signed [15:0] tmp_10_fu_1110_p6;
wire  signed [15:0] tmp_12_fu_1144_p6;
wire  signed [31:0] grp_fu_1377_p3;
wire  signed [31:0] grp_fu_1393_p3;
wire  signed [31:0] grp_fu_1385_p3;
wire  signed [31:0] grp_fu_1369_p3;
wire  signed [31:0] grp_fu_1401_p3;
wire  signed [31:0] grp_fu_1425_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln163_2_fu_1257_p2;
wire  signed [31:0] grp_fu_1417_p3;
wire  signed [31:0] grp_fu_1409_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln163_9_fu_1266_p2;
wire   [31:0] select_ln156_1_fu_1278_p3;
wire   [31:0] add_ln163_14_fu_1285_p2;
wire   [31:0] sub_ln166_fu_1318_p2;
wire   [16:0] tmp_18_fu_1323_p4;
wire   [17:0] zext_ln166_fu_1333_p1;
wire   [17:0] sub_ln166_1_fu_1337_p2;
wire   [17:0] zext_ln166_1_fu_1343_p1;
wire   [17:0] output_data_fu_1346_p3;
wire  signed [31:0] sext_ln166_fu_1353_p1;
wire   [32:0] tmp_1_fu_1357_p3;
reg    grp_fu_1369_ce;
reg    grp_fu_1377_ce;
reg    grp_fu_1385_ce;
reg    grp_fu_1393_ce;
reg    grp_fu_1401_ce;
reg    grp_fu_1409_ce;
reg    grp_fu_1417_ce;
reg    grp_fu_1425_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 sum_fu_228 = 32'd0;
#0 ic_fu_232 = 3'd0;
#0 ib_fu_236 = 32'd0;
#0 indvar_flatten6_fu_240 = 34'd0;
#0 ap_done_reg = 1'b0;
end

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U67(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_6_fu_753_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U68(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_7_fu_766_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U69(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_8_fu_787_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U70(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_9_fu_800_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U71(
    .din0(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_0_s),
    .din1(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_1_s),
    .din2(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_2_s),
    .din3(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_3_s),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_13_fu_821_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U72(
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_0),
    .din1(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_1),
    .din2(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_2),
    .din3(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_14_fu_834_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U73(
    .din0(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_2),
    .din1(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_1),
    .din2(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0),
    .din3(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_15_fu_855_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U74(
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_0),
    .din1(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_1),
    .din2(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_2),
    .din3(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter2_reg),
    .dout(tmp_16_fu_868_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U75(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_2_fu_1017_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U76(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_3_fu_1030_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U77(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_4_fu_1051_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U78(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_5_fu_1064_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U79(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_s_fu_1097_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U80(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_0),
    .din1(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_1),
    .din2(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_2),
    .din3(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_10_fu_1110_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U81(
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_0),
    .din1(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_1),
    .din2(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_2),
    .din3(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_11_fu_1131_p6)
);

FC_CIF_0_2_mux_4_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_4_2_16_1_1_U82(
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_0),
    .din1(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_1),
    .din2(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_2),
    .din3(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_3),
    .din4(trunc_ln163_1_reg_1490_pp0_iter3_reg),
    .dout(tmp_12_fu_1144_p6)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U83(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616),
    .din1(tmp_6_reg_1611),
    .dout(mul_ln163_1_fu_1177_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U84(
    .din0(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676),
    .din1(tmp_15_reg_1671),
    .dout(mul_ln163_2_fu_1183_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U85(
    .din0(FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656),
    .din1(tmp_13_reg_1651),
    .dout(mul_ln163_7_fu_1189_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U86(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636),
    .din1(tmp_8_reg_1631),
    .dout(mul_ln163_8_fu_1195_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U87(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716),
    .din1(tmp_4_reg_1711),
    .dout(mul_ln163_3_fu_1225_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U88(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736),
    .din1(tmp_s_reg_1731),
    .dout(mul_ln163_6_fu_1231_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U89(
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696),
    .din1(tmp_2_reg_1691),
    .dout(mul_ln163_9_fu_1237_p2)
);

FC_CIF_0_2_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U90(
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756),
    .din1(tmp_11_reg_1751),
    .dout(mul_ln163_15_fu_1243_p2)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0),
    .din1(tmp_14_fu_834_p6),
    .din2(mul_ln163_7_reg_1781),
    .ce(grp_fu_1369_ce),
    .dout(grp_fu_1369_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0),
    .din1(tmp_9_fu_800_p6),
    .din2(mul_ln163_8_reg_1786),
    .ce(grp_fu_1377_ce),
    .dout(grp_fu_1377_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0),
    .din1(tmp_16_fu_868_p6),
    .din2(mul_ln163_2_reg_1776),
    .ce(grp_fu_1385_ce),
    .dout(grp_fu_1385_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0),
    .din1(tmp_7_fu_766_p6),
    .din2(mul_ln163_1_reg_1771),
    .ce(grp_fu_1393_ce),
    .dout(grp_fu_1393_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0),
    .din1(tmp_5_fu_1064_p6),
    .din2(mul_ln163_3_reg_1791),
    .ce(grp_fu_1401_ce),
    .dout(grp_fu_1401_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0),
    .din1(tmp_10_fu_1110_p6),
    .din2(mul_ln163_6_reg_1796),
    .ce(grp_fu_1409_ce),
    .dout(grp_fu_1409_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0),
    .din1(tmp_12_fu_1144_p6),
    .din2(mul_ln163_15_reg_1806),
    .ce(grp_fu_1417_ce),
    .dout(grp_fu_1417_p3)
);

FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0),
    .din1(tmp_3_fu_1030_p6),
    .din2(mul_ln163_9_reg_1801),
    .ce(grp_fu_1425_ce),
    .dout(grp_fu_1425_p3)
);

FC_CIF_0_2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ib_fu_236 <= 32'd0;
        end else if (((icmp_ln156_fu_500_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ib_fu_236 <= select_ln156_2_fu_537_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ic_fu_232 <= 3'd0;
        end else if (((icmp_ln156_fu_500_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ic_fu_232 <= add_ln160_fu_571_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_240 <= 34'd0;
        end else if (((icmp_ln156_fu_500_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten6_fu_240 <= add_ln156_1_fu_505_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_fu_228 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            sum_fu_228 <= sum_1_fu_1289_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0;
        FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0;
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0;
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0;
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0;
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0;
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0;
        add_ln163_12_reg_1816 <= add_ln163_12_fu_1253_p2;
        add_ln163_13_reg_1826 <= add_ln163_13_fu_1270_p2;
        add_ln163_5_reg_1811 <= add_ln163_5_fu_1249_p2;
        add_ln163_6_reg_1821 <= add_ln163_6_fu_1261_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln160_1_reg_1510_pp0_iter2_reg <= icmp_ln160_1_reg_1510;
        icmp_ln160_1_reg_1510_pp0_iter3_reg <= icmp_ln160_1_reg_1510_pp0_iter2_reg;
        icmp_ln160_1_reg_1510_pp0_iter4_reg <= icmp_ln160_1_reg_1510_pp0_iter3_reg;
        icmp_ln160_1_reg_1510_pp0_iter5_reg <= icmp_ln160_1_reg_1510_pp0_iter4_reg;
        icmp_ln160_1_reg_1510_pp0_iter6_reg <= icmp_ln160_1_reg_1510_pp0_iter5_reg;
        icmp_ln160_1_reg_1510_pp0_iter7_reg <= icmp_ln160_1_reg_1510_pp0_iter6_reg;
        icmp_ln160_1_reg_1510_pp0_iter8_reg <= icmp_ln160_1_reg_1510_pp0_iter7_reg;
        icmp_ln160_reg_1480_pp0_iter2_reg <= icmp_ln160_reg_1480;
        icmp_ln160_reg_1480_pp0_iter3_reg <= icmp_ln160_reg_1480_pp0_iter2_reg;
        icmp_ln160_reg_1480_pp0_iter4_reg <= icmp_ln160_reg_1480_pp0_iter3_reg;
        icmp_ln160_reg_1480_pp0_iter5_reg <= icmp_ln160_reg_1480_pp0_iter4_reg;
        icmp_ln160_reg_1480_pp0_iter6_reg <= icmp_ln160_reg_1480_pp0_iter5_reg;
        icmp_ln160_reg_1480_pp0_iter7_reg <= icmp_ln160_reg_1480_pp0_iter6_reg;
        mul_ln163_15_reg_1806 <= mul_ln163_15_fu_1243_p2;
        mul_ln163_1_reg_1771 <= mul_ln163_1_fu_1177_p2;
        mul_ln163_2_reg_1776 <= mul_ln163_2_fu_1183_p2;
        mul_ln163_3_reg_1791 <= mul_ln163_3_fu_1225_p2;
        mul_ln163_6_reg_1796 <= mul_ln163_6_fu_1231_p2;
        mul_ln163_7_reg_1781 <= mul_ln163_7_fu_1189_p2;
        mul_ln163_8_reg_1786 <= mul_ln163_8_fu_1195_p2;
        mul_ln163_9_reg_1801 <= mul_ln163_9_fu_1237_p2;
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0;
        sum_1_reg_1831 <= sum_1_fu_1289_p2;
        tmp_11_reg_1751 <= tmp_11_fu_1131_p6;
        tmp_13_reg_1651 <= tmp_13_fu_821_p6;
        tmp_15_reg_1671 <= tmp_15_fu_855_p6;
        tmp_19_reg_1841 <= {{sum_1_fu_1289_p2[31:15]}};
        tmp_2_reg_1691 <= tmp_2_fu_1017_p6;
        tmp_4_reg_1711 <= tmp_4_fu_1051_p6;
        tmp_6_reg_1611 <= tmp_6_fu_753_p6;
        tmp_8_reg_1631 <= tmp_8_fu_787_p6;
        tmp_reg_1836 <= sum_1_fu_1289_p2[32'd31];
        tmp_s_reg_1731 <= tmp_s_fu_1097_p6;
        trunc_ln163_1_reg_1490_pp0_iter2_reg <= trunc_ln163_1_reg_1490;
        trunc_ln163_1_reg_1490_pp0_iter3_reg <= trunc_ln163_1_reg_1490_pp0_iter2_reg;
        valOut_last_reg_1514_pp0_iter2_reg <= valOut_last_reg_1514;
        valOut_last_reg_1514_pp0_iter3_reg <= valOut_last_reg_1514_pp0_iter2_reg;
        valOut_last_reg_1514_pp0_iter4_reg <= valOut_last_reg_1514_pp0_iter3_reg;
        valOut_last_reg_1514_pp0_iter5_reg <= valOut_last_reg_1514_pp0_iter4_reg;
        valOut_last_reg_1514_pp0_iter6_reg <= valOut_last_reg_1514_pp0_iter5_reg;
        valOut_last_reg_1514_pp0_iter7_reg <= valOut_last_reg_1514_pp0_iter6_reg;
        valOut_last_reg_1514_pp0_iter8_reg <= valOut_last_reg_1514_pp0_iter7_reg;
        zext_ln163_1_reg_1519[5 : 0] <= zext_ln163_1_fu_614_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln163_15_reg_1485 <= add_ln163_15_fu_561_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln160_1_reg_1510 <= icmp_ln160_1_fu_577_p2;
        icmp_ln160_reg_1480 <= icmp_ln160_fu_523_p2;
        trunc_ln163_1_reg_1490 <= trunc_ln163_1_fu_567_p1;
        valOut_last_reg_1514 <= valOut_last_fu_593_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 = 1'b1;
    end else begin
        FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln156_fu_500_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1369_ce = 1'b1;
    end else begin
        grp_fu_1369_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1377_ce = 1'b1;
    end else begin
        grp_fu_1377_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1385_ce = 1'b1;
    end else begin
        grp_fu_1385_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1393_ce = 1'b1;
    end else begin
        grp_fu_1393_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1401_ce = 1'b1;
    end else begin
        grp_fu_1401_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1409_ce = 1'b1;
    end else begin
        grp_fu_1409_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1417_ce = 1'b1;
    end else begin
        grp_fu_1417_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1425_ce = 1'b1;
    end else begin
        grp_fu_1425_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln160_1_reg_1510_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln160_1_reg_1510_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        out_stream_TVALID = 1'b1;
    end else begin
        out_stream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 = 1'b1;
    end else begin
        p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 = zext_ln163_1_reg_1519;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 = zext_ln163_1_reg_1519;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 = zext_ln163_1_reg_1519;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 = zext_ln163_1_fu_614_p1;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 = zext_ln163_1_fu_614_p1;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 = zext_ln163_1_fu_614_p1;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 = zext_ln163_1_fu_614_p1;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 = zext_ln163_1_reg_1519;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 = zext_ln163_1_reg_1519;

assign FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 = zext_ln163_1_reg_1519;

assign add_ln156_1_fu_505_p2 = (indvar_flatten6_fu_240 + 34'd1);

assign add_ln156_fu_517_p2 = (ib_fu_236 + 32'd1);

assign add_ln160_fu_571_p2 = (select_ln156_fu_529_p3 + 3'd1);

assign add_ln163_12_fu_1253_p2 = ($signed(grp_fu_1385_p3) + $signed(grp_fu_1369_p3));

assign add_ln163_13_fu_1270_p2 = (add_ln163_12_reg_1816 + add_ln163_9_fu_1266_p2);

assign add_ln163_14_fu_1285_p2 = (add_ln163_13_reg_1826 + add_ln163_6_reg_1821);

assign add_ln163_15_fu_561_p2 = (tmp_17_fu_549_p3 + zext_ln163_fu_557_p1);

assign add_ln163_2_fu_1257_p2 = ($signed(grp_fu_1401_p3) + $signed(grp_fu_1425_p3));

assign add_ln163_5_fu_1249_p2 = ($signed(grp_fu_1377_p3) + $signed(grp_fu_1393_p3));

assign add_ln163_6_fu_1261_p2 = (add_ln163_5_reg_1811 + add_ln163_2_fu_1257_p2);

assign add_ln163_9_fu_1266_p2 = ($signed(grp_fu_1417_p3) + $signed(grp_fu_1409_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter9));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter9 == 1'b1) & ((1'b1 == ap_block_state10_io) | (1'b1 == ap_block_state10_pp0_stage0_iter9)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter9 == 1'b1) & ((1'b1 == ap_block_state10_io) | (1'b1 == ap_block_state10_pp0_stage0_iter9)));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln160_1_reg_1510_pp0_iter8_reg == 1'd1) & (out_stream_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((icmp_ln160_1_reg_1510_pp0_iter8_reg == 1'd1) & (out_stream_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln156_fu_500_p2 = ((indvar_flatten6_fu_240 == bound4) ? 1'b1 : 1'b0);

assign icmp_ln160_1_fu_577_p2 = ((add_ln160_fu_571_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_523_p2 = ((ic_fu_232 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_583_p2 = ((select_ln156_2_fu_537_p3 != sub151) ? 1'b1 : 1'b0);

assign or_ln168_1_fu_588_p2 = (or_ln168 | icmp_ln168_fu_583_p2);

assign out_stream_TDATA = tmp_1_fu_1357_p3;

assign output_data_fu_1346_p3 = ((tmp_reg_1836[0:0] == 1'b1) ? sub_ln166_1_fu_1337_p2 : zext_ln166_1_fu_1343_p1);

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 = zext_ln163_1_reg_1519;

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 = zext_ln163_1_reg_1519;

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 = zext_ln163_1_fu_614_p1;

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 = zext_ln163_1_fu_614_p1;

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 = zext_ln163_1_fu_614_p1;

assign p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 = zext_ln163_1_fu_614_p1;

assign select_ln156_1_fu_1278_p3 = ((icmp_ln160_reg_1480_pp0_iter7_reg[0:0] == 1'b1) ? 32'd0 : sum_fu_228);

assign select_ln156_2_fu_537_p3 = ((icmp_ln160_fu_523_p2[0:0] == 1'b1) ? add_ln156_fu_517_p2 : ib_fu_236);

assign select_ln156_fu_529_p3 = ((icmp_ln160_fu_523_p2[0:0] == 1'b1) ? 3'd0 : ic_fu_232);

assign sext_ln166_fu_1353_p1 = $signed(output_data_fu_1346_p3);

assign sub_ln166_1_fu_1337_p2 = (18'd0 - zext_ln166_fu_1333_p1);

assign sub_ln166_fu_1318_p2 = (32'd0 - sum_1_reg_1831);

assign sum_1_fu_1289_p2 = (select_ln156_1_fu_1278_p3 + add_ln163_14_fu_1285_p2);

assign tmp_17_fu_549_p3 = {{trunc_ln163_fu_545_p1}, {2'd0}};

assign tmp_18_fu_1323_p4 = {{sub_ln166_fu_1318_p2[31:15]}};

assign tmp_1_fu_1357_p3 = {{valOut_last_reg_1514_pp0_iter8_reg}, {sext_ln166_fu_1353_p1}};

assign trunc_ln163_1_fu_567_p1 = select_ln156_fu_529_p3[1:0];

assign trunc_ln163_fu_545_p1 = select_ln156_2_fu_537_p3[3:0];

assign valOut_last_fu_593_p2 = (or_ln168_1_fu_588_p2 ^ 1'd1);

assign zext_ln163_1_fu_614_p1 = add_ln163_15_reg_1485;

assign zext_ln163_fu_557_p1 = select_ln156_fu_529_p3;

assign zext_ln166_1_fu_1343_p1 = tmp_19_reg_1841;

assign zext_ln166_fu_1333_p1 = tmp_18_fu_1323_p4;

always @ (posedge ap_clk) begin
    zext_ln163_1_reg_1519[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //FC_CIF_0_2_FC_CIF_0_2_Pipeline_L2_L3
