-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FC_CIF_0_2_FC_CIF_0_2_Pipeline_L2_L3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    bound4 : IN STD_LOGIC_VECTOR (33 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    sub151 : IN STD_LOGIC_VECTOR (31 downto 0);
    or_ln168 : IN STD_LOGIC_VECTOR (0 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_0_s : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_1_s : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_2_s : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_3_s : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 : OUT STD_LOGIC;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 : OUT STD_LOGIC;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of FC_CIF_0_2_FC_CIF_0_2_Pipeline_L2_L3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln160_1_reg_1510 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln156_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln160_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_1480_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln163_15_fu_561_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln163_15_reg_1485 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln163_1_fu_567_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln163_1_reg_1490 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln163_1_reg_1490_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln163_1_reg_1490_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln160_1_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_reg_1510_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_reg_1514_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln163_1_fu_614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln163_1_reg_1519 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_753_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1611 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_787_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_1631 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_821_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_1651 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_855_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_1671 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1017_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_1691 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1051_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_1711 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_1097_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_1731 : STD_LOGIC_VECTOR (15 downto 0);
    signal FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_1131_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_1751 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln163_1_fu_1177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_1_reg_1771 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_fu_1183_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_2_reg_1776 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_7_fu_1189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_7_reg_1781 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_8_fu_1195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_8_reg_1786 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_3_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_3_reg_1791 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_6_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_6_reg_1796 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_9_fu_1237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_9_reg_1801 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_15_fu_1243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln163_15_reg_1806 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_5_fu_1249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln163_5_fu_1249_p2 : signal is "no";
    signal add_ln163_5_reg_1811 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_12_fu_1253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_12_fu_1253_p2 : signal is "no";
    signal add_ln163_12_reg_1816 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_6_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_6_reg_1821 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_13_fu_1270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_13_reg_1826 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_fu_1289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_reg_1831 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1836 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1841 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_228 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal ic_fu_232 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln160_fu_571_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ib_fu_236 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln156_2_fu_537_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_fu_240 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    signal add_ln156_1_fu_505_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln156_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln163_fu_545_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln156_fu_529_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_549_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln163_fu_557_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln168_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln168_1_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_766_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_800_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_834_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_868_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1030_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_1064_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_1110_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1144_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1377_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1385_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1369_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1425_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_2_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_2_fu_1257_p2 : signal is "no";
    signal grp_fu_1417_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1409_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_9_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of add_ln163_9_fu_1266_p2 : signal is "no";
    signal select_ln156_1_fu_1278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln163_14_fu_1285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln166_fu_1318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1323_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln166_fu_1333_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln166_1_fu_1337_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln166_1_fu_1343_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_data_fu_1346_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln166_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1357_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1369_ce : STD_LOGIC;
    signal grp_fu_1377_ce : STD_LOGIC;
    signal grp_fu_1385_ce : STD_LOGIC;
    signal grp_fu_1393_ce : STD_LOGIC;
    signal grp_fu_1401_ce : STD_LOGIC;
    signal grp_fu_1409_ce : STD_LOGIC;
    signal grp_fu_1417_ce : STD_LOGIC;
    signal grp_fu_1425_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FC_CIF_0_2_mux_4_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FC_CIF_0_2_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FC_CIF_0_2_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_4_2_16_1_1_U67 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_4_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_6_fu_753_p6);

    mux_4_2_16_1_1_U68 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_5_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_7_fu_766_p6);

    mux_4_2_16_1_1_U69 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_6_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_8_fu_787_p6);

    mux_4_2_16_1_1_U70 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_7_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_9_fu_800_p6);

    mux_4_2_16_1_1_U71 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_0_s,
        din1 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_1_s,
        din2 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_2_s,
        din3 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0_3_s,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_13_fu_821_p6);

    mux_4_2_16_1_1_U72 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_0,
        din1 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_1,
        din2 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_2,
        din3 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_13_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_14_fu_834_p6);

    mux_4_2_16_1_1_U73 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_2,
        din1 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_1,
        din2 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A_0,
        din3 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_A,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_15_fu_855_p6);

    mux_4_2_16_1_1_U74 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_0,
        din1 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_1,
        din2 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_2,
        din3 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_15_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter2_reg,
        dout => tmp_16_fu_868_p6);

    mux_4_2_16_1_1_U75 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_2_fu_1017_p6);

    mux_4_2_16_1_1_U76 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_1_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_3_fu_1030_p6);

    mux_4_2_16_1_1_U77 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_2_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_4_fu_1051_p6);

    mux_4_2_16_1_1_U78 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_3_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_5_fu_1064_p6);

    mux_4_2_16_1_1_U79 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_8_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_s_fu_1097_p6);

    mux_4_2_16_1_1_U80 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_0,
        din1 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_1,
        din2 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_2,
        din3 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_A_9_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_10_fu_1110_p6);

    mux_4_2_16_1_1_U81 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_0,
        din1 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_1,
        din2 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_2,
        din3 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_10_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_11_fu_1131_p6);

    mux_4_2_16_1_1_U82 : component FC_CIF_0_2_mux_4_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_0,
        din1 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_1,
        din2 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_2,
        din3 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1A_11_0_3,
        din4 => trunc_ln163_1_reg_1490_pp0_iter3_reg,
        dout => tmp_12_fu_1144_p6);

    mul_16s_16s_32_1_1_U83 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616,
        din1 => tmp_6_reg_1611,
        dout => mul_ln163_1_fu_1177_p2);

    mul_16s_16s_32_1_1_U84 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676,
        din1 => tmp_15_reg_1671,
        dout => mul_ln163_2_fu_1183_p2);

    mul_16s_16s_32_1_1_U85 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656,
        din1 => tmp_13_reg_1651,
        dout => mul_ln163_7_fu_1189_p2);

    mul_16s_16s_32_1_1_U86 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636,
        din1 => tmp_8_reg_1631,
        dout => mul_ln163_8_fu_1195_p2);

    mul_16s_16s_32_1_1_U87 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716,
        din1 => tmp_4_reg_1711,
        dout => mul_ln163_3_fu_1225_p2);

    mul_16s_16s_32_1_1_U88 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736,
        din1 => tmp_s_reg_1731,
        dout => mul_ln163_6_fu_1231_p2);

    mul_16s_16s_32_1_1_U89 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696,
        din1 => tmp_2_reg_1691,
        dout => mul_ln163_9_fu_1237_p2);

    mul_16s_16s_32_1_1_U90 : component FC_CIF_0_2_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756,
        din1 => tmp_11_reg_1751,
        dout => mul_ln163_15_fu_1243_p2);

    mac_muladd_16s_16s_32s_32_4_1_U91 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_q0,
        din1 => tmp_14_fu_834_p6,
        din2 => mul_ln163_7_reg_1781,
        ce => grp_fu_1369_ce,
        dout => grp_fu_1369_p3);

    mac_muladd_16s_16s_32s_32_4_1_U92 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_q0,
        din1 => tmp_9_fu_800_p6,
        din2 => mul_ln163_8_reg_1786,
        ce => grp_fu_1377_ce,
        dout => grp_fu_1377_p3);

    mac_muladd_16s_16s_32s_32_4_1_U93 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_q0,
        din1 => tmp_16_fu_868_p6,
        din2 => mul_ln163_2_reg_1776,
        ce => grp_fu_1385_ce,
        dout => grp_fu_1385_p3);

    mac_muladd_16s_16s_32s_32_4_1_U94 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_q0,
        din1 => tmp_7_fu_766_p6,
        din2 => mul_ln163_1_reg_1771,
        ce => grp_fu_1393_ce,
        dout => grp_fu_1393_p3);

    mac_muladd_16s_16s_32s_32_4_1_U95 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_q0,
        din1 => tmp_5_fu_1064_p6,
        din2 => mul_ln163_3_reg_1791,
        ce => grp_fu_1401_ce,
        dout => grp_fu_1401_p3);

    mac_muladd_16s_16s_32s_32_4_1_U96 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_q0,
        din1 => tmp_10_fu_1110_p6,
        din2 => mul_ln163_6_reg_1796,
        ce => grp_fu_1409_ce,
        dout => grp_fu_1409_p3);

    mac_muladd_16s_16s_32s_32_4_1_U97 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_q0,
        din1 => tmp_12_fu_1144_p6,
        din2 => mul_ln163_15_reg_1806,
        ce => grp_fu_1417_ce,
        dout => grp_fu_1417_p3);

    mac_muladd_16s_16s_32s_32_4_1_U98 : component FC_CIF_0_2_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_q0,
        din1 => tmp_3_fu_1030_p6,
        din2 => mul_ln163_9_reg_1801,
        ce => grp_fu_1425_ce,
        dout => grp_fu_1425_p3);

    flow_control_loop_pipe_sequential_init_U : component FC_CIF_0_2_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ib_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ib_fu_236 <= ap_const_lv32_0;
                elsif (((icmp_ln156_fu_500_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ib_fu_236 <= select_ln156_2_fu_537_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_232 <= ap_const_lv3_0;
                elsif (((icmp_ln156_fu_500_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ic_fu_232 <= add_ln160_fu_571_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten6_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten6_fu_240 <= ap_const_lv34_0;
                elsif (((icmp_ln156_fu_500_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten6_fu_240 <= add_ln156_1_fu_505_p2;
                end if;
            end if; 
        end if;
    end process;

    sum_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    sum_fu_228 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then 
                    sum_fu_228 <= sum_1_fu_1289_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_50_reg_1656 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_q0;
                FC_CIF_0_2_hls_stream_AXI_VAL_0_hls_stream_AXI_VAL_0_B_52_reg_1676 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_q0;
                FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_load_reg_1716 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_q0;
                FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_load_reg_1616 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_q0;
                FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_load_reg_1636 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_q0;
                FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_load_reg_1736 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_q0;
                FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_load_reg_1696 <= FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_q0;
                add_ln163_12_reg_1816 <= add_ln163_12_fu_1253_p2;
                add_ln163_13_reg_1826 <= add_ln163_13_fu_1270_p2;
                add_ln163_5_reg_1811 <= add_ln163_5_fu_1249_p2;
                add_ln163_6_reg_1821 <= add_ln163_6_fu_1261_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                icmp_ln160_1_reg_1510_pp0_iter2_reg <= icmp_ln160_1_reg_1510;
                icmp_ln160_1_reg_1510_pp0_iter3_reg <= icmp_ln160_1_reg_1510_pp0_iter2_reg;
                icmp_ln160_1_reg_1510_pp0_iter4_reg <= icmp_ln160_1_reg_1510_pp0_iter3_reg;
                icmp_ln160_1_reg_1510_pp0_iter5_reg <= icmp_ln160_1_reg_1510_pp0_iter4_reg;
                icmp_ln160_1_reg_1510_pp0_iter6_reg <= icmp_ln160_1_reg_1510_pp0_iter5_reg;
                icmp_ln160_1_reg_1510_pp0_iter7_reg <= icmp_ln160_1_reg_1510_pp0_iter6_reg;
                icmp_ln160_1_reg_1510_pp0_iter8_reg <= icmp_ln160_1_reg_1510_pp0_iter7_reg;
                icmp_ln160_reg_1480_pp0_iter2_reg <= icmp_ln160_reg_1480;
                icmp_ln160_reg_1480_pp0_iter3_reg <= icmp_ln160_reg_1480_pp0_iter2_reg;
                icmp_ln160_reg_1480_pp0_iter4_reg <= icmp_ln160_reg_1480_pp0_iter3_reg;
                icmp_ln160_reg_1480_pp0_iter5_reg <= icmp_ln160_reg_1480_pp0_iter4_reg;
                icmp_ln160_reg_1480_pp0_iter6_reg <= icmp_ln160_reg_1480_pp0_iter5_reg;
                icmp_ln160_reg_1480_pp0_iter7_reg <= icmp_ln160_reg_1480_pp0_iter6_reg;
                mul_ln163_15_reg_1806 <= mul_ln163_15_fu_1243_p2;
                mul_ln163_1_reg_1771 <= mul_ln163_1_fu_1177_p2;
                mul_ln163_2_reg_1776 <= mul_ln163_2_fu_1183_p2;
                mul_ln163_3_reg_1791 <= mul_ln163_3_fu_1225_p2;
                mul_ln163_6_reg_1796 <= mul_ln163_6_fu_1231_p2;
                mul_ln163_7_reg_1781 <= mul_ln163_7_fu_1189_p2;
                mul_ln163_8_reg_1786 <= mul_ln163_8_fu_1195_p2;
                mul_ln163_9_reg_1801 <= mul_ln163_9_fu_1237_p2;
                p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_load_reg_1756 <= p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_q0;
                sum_1_reg_1831 <= sum_1_fu_1289_p2;
                tmp_11_reg_1751 <= tmp_11_fu_1131_p6;
                tmp_13_reg_1651 <= tmp_13_fu_821_p6;
                tmp_15_reg_1671 <= tmp_15_fu_855_p6;
                tmp_19_reg_1841 <= sum_1_fu_1289_p2(31 downto 15);
                tmp_2_reg_1691 <= tmp_2_fu_1017_p6;
                tmp_4_reg_1711 <= tmp_4_fu_1051_p6;
                tmp_6_reg_1611 <= tmp_6_fu_753_p6;
                tmp_8_reg_1631 <= tmp_8_fu_787_p6;
                tmp_reg_1836 <= sum_1_fu_1289_p2(31 downto 31);
                tmp_s_reg_1731 <= tmp_s_fu_1097_p6;
                trunc_ln163_1_reg_1490_pp0_iter2_reg <= trunc_ln163_1_reg_1490;
                trunc_ln163_1_reg_1490_pp0_iter3_reg <= trunc_ln163_1_reg_1490_pp0_iter2_reg;
                valOut_last_reg_1514_pp0_iter2_reg <= valOut_last_reg_1514;
                valOut_last_reg_1514_pp0_iter3_reg <= valOut_last_reg_1514_pp0_iter2_reg;
                valOut_last_reg_1514_pp0_iter4_reg <= valOut_last_reg_1514_pp0_iter3_reg;
                valOut_last_reg_1514_pp0_iter5_reg <= valOut_last_reg_1514_pp0_iter4_reg;
                valOut_last_reg_1514_pp0_iter6_reg <= valOut_last_reg_1514_pp0_iter5_reg;
                valOut_last_reg_1514_pp0_iter7_reg <= valOut_last_reg_1514_pp0_iter6_reg;
                valOut_last_reg_1514_pp0_iter8_reg <= valOut_last_reg_1514_pp0_iter7_reg;
                    zext_ln163_1_reg_1519(5 downto 0) <= zext_ln163_1_fu_614_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln163_15_reg_1485 <= add_ln163_15_fu_561_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln160_1_reg_1510 <= icmp_ln160_1_fu_577_p2;
                icmp_ln160_reg_1480 <= icmp_ln160_fu_523_p2;
                trunc_ln163_1_reg_1490 <= trunc_ln163_1_fu_567_p1;
                valOut_last_reg_1514 <= valOut_last_fu_593_p2;
            end if;
        end if;
    end process;
    zext_ln163_1_reg_1519(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_1;
        else 
            FC_CIF_0_2_stream_AXI_VAL_0_stream_AXI_VAL_0_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln156_1_fu_505_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_240) + unsigned(ap_const_lv34_1));
    add_ln156_fu_517_p2 <= std_logic_vector(unsigned(ib_fu_236) + unsigned(ap_const_lv32_1));
    add_ln160_fu_571_p2 <= std_logic_vector(unsigned(select_ln156_fu_529_p3) + unsigned(ap_const_lv3_1));
    add_ln163_12_fu_1253_p2 <= std_logic_vector(signed(grp_fu_1385_p3) + signed(grp_fu_1369_p3));
    add_ln163_13_fu_1270_p2 <= std_logic_vector(unsigned(add_ln163_12_reg_1816) + unsigned(add_ln163_9_fu_1266_p2));
    add_ln163_14_fu_1285_p2 <= std_logic_vector(unsigned(add_ln163_13_reg_1826) + unsigned(add_ln163_6_reg_1821));
    add_ln163_15_fu_561_p2 <= std_logic_vector(unsigned(tmp_17_fu_549_p3) + unsigned(zext_ln163_fu_557_p1));
    add_ln163_2_fu_1257_p2 <= std_logic_vector(signed(grp_fu_1401_p3) + signed(grp_fu_1425_p3));
    add_ln163_5_fu_1249_p2 <= std_logic_vector(signed(grp_fu_1377_p3) + signed(grp_fu_1393_p3));
    add_ln163_6_fu_1261_p2 <= std_logic_vector(unsigned(add_ln163_5_reg_1811) + unsigned(add_ln163_2_fu_1257_p2));
    add_ln163_9_fu_1266_p2 <= std_logic_vector(signed(grp_fu_1417_p3) + signed(grp_fu_1409_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9)));
    end process;


    ap_block_state10_io_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1510_pp0_iter8_reg)
    begin
                ap_block_state10_io <= ((icmp_ln160_1_reg_1510_pp0_iter8_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(out_stream_TREADY, icmp_ln160_1_reg_1510_pp0_iter8_reg)
    begin
                ap_block_state10_pp0_stage0_iter9 <= ((icmp_ln160_1_reg_1510_pp0_iter8_reg = ap_const_lv1_1) and (out_stream_TREADY = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln156_fu_500_p2)
    begin
        if (((icmp_ln156_fu_500_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1369_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1369_ce <= ap_const_logic_1;
        else 
            grp_fu_1369_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1377_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1377_ce <= ap_const_logic_1;
        else 
            grp_fu_1377_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1385_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1385_ce <= ap_const_logic_1;
        else 
            grp_fu_1385_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1393_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1393_ce <= ap_const_logic_1;
        else 
            grp_fu_1393_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1401_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1401_ce <= ap_const_logic_1;
        else 
            grp_fu_1401_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1409_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1409_ce <= ap_const_logic_1;
        else 
            grp_fu_1409_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1417_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1417_ce <= ap_const_logic_1;
        else 
            grp_fu_1417_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1425_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1425_ce <= ap_const_logic_1;
        else 
            grp_fu_1425_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln156_fu_500_p2 <= "1" when (indvar_flatten6_fu_240 = bound4) else "0";
    icmp_ln160_1_fu_577_p2 <= "1" when (add_ln160_fu_571_p2 = ap_const_lv3_4) else "0";
    icmp_ln160_fu_523_p2 <= "1" when (ic_fu_232 = ap_const_lv3_4) else "0";
    icmp_ln168_fu_583_p2 <= "0" when (select_ln156_2_fu_537_p3 = sub151) else "1";
    or_ln168_1_fu_588_p2 <= (or_ln168 or icmp_ln168_fu_583_p2);
    out_stream_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1357_p3),64));

    out_stream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter9, out_stream_TREADY, icmp_ln160_1_reg_1510_pp0_iter8_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln160_1_reg_1510_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_stream_TVALID_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln160_1_reg_1510_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln160_1_reg_1510_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    output_data_fu_1346_p3 <= 
        sub_ln166_1_fu_1337_p2 when (tmp_reg_1836(0) = '1') else 
        zext_ln166_1_fu_1343_p1;
    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_address0 <= zext_ln163_1_reg_1519(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_address0 <= zext_ln163_1_fu_614_p1(6 - 1 downto 0);

    p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ10FC_CIF_0_2RN3hls6streamI7AXI_VALLi0EEES3_E1B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln156_1_fu_1278_p3 <= 
        ap_const_lv32_0 when (icmp_ln160_reg_1480_pp0_iter7_reg(0) = '1') else 
        sum_fu_228;
    select_ln156_2_fu_537_p3 <= 
        add_ln156_fu_517_p2 when (icmp_ln160_fu_523_p2(0) = '1') else 
        ib_fu_236;
    select_ln156_fu_529_p3 <= 
        ap_const_lv3_0 when (icmp_ln160_fu_523_p2(0) = '1') else 
        ic_fu_232;
        sext_ln166_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_data_fu_1346_p3),32));

    sub_ln166_1_fu_1337_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln166_fu_1333_p1));
    sub_ln166_fu_1318_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sum_1_reg_1831));
    sum_1_fu_1289_p2 <= std_logic_vector(unsigned(select_ln156_1_fu_1278_p3) + unsigned(add_ln163_14_fu_1285_p2));
    tmp_17_fu_549_p3 <= (trunc_ln163_fu_545_p1 & ap_const_lv2_0);
    tmp_18_fu_1323_p4 <= sub_ln166_fu_1318_p2(31 downto 15);
    tmp_1_fu_1357_p3 <= (valOut_last_reg_1514_pp0_iter8_reg & sext_ln166_fu_1353_p1);
    trunc_ln163_1_fu_567_p1 <= select_ln156_fu_529_p3(2 - 1 downto 0);
    trunc_ln163_fu_545_p1 <= select_ln156_2_fu_537_p3(4 - 1 downto 0);
    valOut_last_fu_593_p2 <= (or_ln168_1_fu_588_p2 xor ap_const_lv1_1);
    zext_ln163_1_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln163_15_reg_1485),64));
    zext_ln163_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_fu_529_p3),6));
    zext_ln166_1_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_1841),18));
    zext_ln166_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1323_p4),18));
end behav;
