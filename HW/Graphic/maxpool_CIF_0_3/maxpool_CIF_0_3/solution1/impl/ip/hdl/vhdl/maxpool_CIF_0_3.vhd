-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity maxpool_CIF_0_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of maxpool_CIF_0_3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "maxpool_CIF_0_3_maxpool_CIF_0_3,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.592000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2428,HLS_SYN_LUT=6817,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (83 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (83 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (83 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (83 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (83 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (83 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (83 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (83 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (83 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (83 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (83 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (83 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal IFMCH_curr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal IFMDim_curr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (83 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal valIn_data_fu_874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_1_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_1_reg_1143 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_2_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_2_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_3_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_3_reg_1155 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_4_fu_890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_4_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_5_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal valIn_data_5_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln153_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal KER_size_0_fu_918_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal pool_out_bound_fu_926_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal pool_out_bound_reg_1204 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln154_1_fu_940_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal KER_size_1_fu_970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_1_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal KER_bound_fu_974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal sub_fu_981_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal sub131_fu_986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub131_reg_1247 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub137_fu_992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub137_reg_1253 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_997_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_3_reg_1258 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_5_fu_1004_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1263 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_861_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln154_reg_1268 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_865_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln154_1_reg_1273 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln155_fu_1019_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln155_reg_1281 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal select_ln155_fu_1036_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln155_reg_1286 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln155_1_fu_1060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln155_1_reg_1291 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln155_2_fu_1068_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln155_2_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln156_fu_1076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln156_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln157_fu_1085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln157_reg_1309 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal trunc_ln158_fu_1104_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln158_reg_1314 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln158_fu_1108_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln158_reg_1319 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp132_not_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp132_not_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_we1 : STD_LOGIC;
    signal buf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_we1 : STD_LOGIC;
    signal buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2_ce0 : STD_LOGIC;
    signal buf_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2_ce1 : STD_LOGIC;
    signal buf_2_we1 : STD_LOGIC;
    signal buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_3_ce0 : STD_LOGIC;
    signal buf_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_3_ce1 : STD_LOGIC;
    signal buf_3_we1 : STD_LOGIC;
    signal buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_ce0 : STD_LOGIC;
    signal acc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal acc_ce1 : STD_LOGIC;
    signal acc_we1 : STD_LOGIC;
    signal acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_idle : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_ready : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_idle : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_ready : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TREADY : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_in_r_TREADY : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_idle : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_ready : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_in_r_TREADY : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_idle : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_ready : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TREADY : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_idle : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_ready : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce0 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_ce1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_we1 : STD_LOGIC;
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_reg_786 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln155_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal xp_reg_797 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln157_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal icmp_ln125_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal yp_fu_238 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal yp_1_fu_1119_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal num_img_fu_242 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal indvar_flatten20_fu_246 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    signal grp_fu_861_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_865_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_865_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln154_fu_978_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln156_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln155_1_fu_1044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp130_not_mid1_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp130_not29_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln158_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln157_fu_1096_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (83 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal grp_fu_861_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_865_p00 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        KER_bound : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_TVALID : OUT STD_LOGIC );
    end component;


    component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        IFMCH_curr_load : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln154 : IN STD_LOGIC_VECTOR (32 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        acc_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        IFMCH_curr_load : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln154 : IN STD_LOGIC_VECTOR (62 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sub131 : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp132_not : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln155_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        buf_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sub137 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_TVALID : OUT STD_LOGIC );
    end component;


    component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (1 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_mul_31ns_32ns_63_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component maxpool_CIF_0_3_mul_32ns_31ns_63_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component maxpool_CIF_0_3_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_buf_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_acc_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxpool_CIF_0_3_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    buf_U : component maxpool_CIF_0_3_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_address0,
        ce0 => buf_ce0,
        q0 => buf_q0,
        address1 => buf_address1,
        ce1 => buf_ce1,
        we1 => buf_we1,
        d1 => buf_d1);

    buf_1_U : component maxpool_CIF_0_3_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_1_address0,
        ce0 => buf_1_ce0,
        q0 => buf_1_q0,
        address1 => buf_1_address1,
        ce1 => buf_1_ce1,
        we1 => buf_1_we1,
        d1 => buf_1_d1);

    buf_2_U : component maxpool_CIF_0_3_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_2_address0,
        ce0 => buf_2_ce0,
        q0 => buf_2_q0,
        address1 => buf_2_address1,
        ce1 => buf_2_ce1,
        we1 => buf_2_we1,
        d1 => buf_2_d1);

    buf_3_U : component maxpool_CIF_0_3_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_3_address0,
        ce0 => buf_3_ce0,
        q0 => buf_3_q0,
        address1 => buf_3_address1,
        ce1 => buf_3_ce1,
        we1 => buf_3_we1,
        d1 => buf_3_d1);

    acc_U : component maxpool_CIF_0_3_acc_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address0,
        ce0 => acc_ce0,
        q0 => acc_q0,
        address1 => acc_address1,
        ce1 => acc_ce1,
        we1 => acc_we1,
        d1 => acc_d1,
        q1 => acc_q1);

    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808 : component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start,
        ap_done => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done,
        ap_idle => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_idle,
        ap_ready => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_ready,
        buf_3_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_address1,
        buf_3_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_ce1,
        buf_3_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_we1,
        buf_3_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_d1,
        buf_2_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_address1,
        buf_2_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_ce1,
        buf_2_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_we1,
        buf_2_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_d1,
        buf_1_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_address1,
        buf_1_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_ce1,
        buf_1_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_we1,
        buf_1_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_d1,
        buf_r_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_address1,
        buf_r_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_ce1,
        buf_r_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_we1,
        buf_r_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_d1);

    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816 : component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start,
        ap_done => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done,
        ap_idle => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_idle,
        ap_ready => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        out_r_TREADY => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TREADY,
        KER_bound => KER_bound_reg_1236,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_in_r_TREADY,
        out_r_TDATA => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TDATA,
        out_r_TVALID => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID);

    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825 : component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start,
        ap_done => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done,
        ap_idle => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_idle,
        ap_ready => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        IFMCH_curr_load => IFMCH_curr,
        zext_ln154 => tmp_3_reg_1258,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_in_r_TREADY,
        acc_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address0,
        acc_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce0,
        acc_q0 => acc_q0,
        acc_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address1,
        acc_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce1,
        acc_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_we1,
        acc_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_d1);

    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834 : component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start,
        ap_done => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done,
        ap_idle => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_idle,
        ap_ready => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_ready,
        out_r_TREADY => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TREADY,
        IFMCH_curr_load => IFMCH_curr,
        mul_ln154 => mul_ln154_reg_1268,
        acc_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_address1,
        acc_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_ce1,
        acc_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_we1,
        acc_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_d1,
        sub131 => sub131_reg_1247,
        cmp132_not => cmp132_not_reg_1324,
        select_ln155_1 => select_ln155_1_reg_1291,
        buf_3_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address0,
        buf_3_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce0,
        buf_3_q0 => buf_3_q0,
        buf_3_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address1,
        buf_3_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce1,
        buf_3_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_we1,
        buf_3_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_d1,
        buf_2_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address0,
        buf_2_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce0,
        buf_2_q0 => buf_2_q0,
        buf_2_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address1,
        buf_2_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce1,
        buf_2_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_we1,
        buf_2_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_d1,
        buf_1_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address0,
        buf_1_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce0,
        buf_1_q0 => buf_1_q0,
        buf_1_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address1,
        buf_1_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce1,
        buf_1_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_we1,
        buf_1_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_d1,
        buf_r_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address0,
        buf_r_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address1,
        buf_r_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce1,
        buf_r_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_we1,
        buf_r_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_d1,
        sub137 => sub137_reg_1253,
        out_r_TDATA => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TDATA,
        out_r_TVALID => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID);

    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851 : component maxpool_CIF_0_3_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start,
        ap_done => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done,
        ap_idle => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_idle,
        ap_ready => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_ready,
        buf_3_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address0,
        buf_3_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce0,
        buf_3_q0 => buf_3_q0,
        buf_3_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address1,
        buf_3_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce1,
        buf_3_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_we1,
        buf_3_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_d1,
        buf_2_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address0,
        buf_2_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce0,
        buf_2_q0 => buf_2_q0,
        buf_2_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address1,
        buf_2_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce1,
        buf_2_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_we1,
        buf_2_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_d1,
        buf_1_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address0,
        buf_1_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce0,
        buf_1_q0 => buf_1_q0,
        buf_1_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address1,
        buf_1_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce1,
        buf_1_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_we1,
        buf_1_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_d1,
        buf_r_address0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address0,
        buf_r_ce0 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address1,
        buf_r_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce1,
        buf_r_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_we1,
        buf_r_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_d1,
        empty => trunc_ln158_reg_1314,
        acc_address1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_address1,
        acc_ce1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_ce1,
        acc_we1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_we1,
        acc_d1 => grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_d1,
        acc_q1 => acc_q1);

    mul_31ns_32ns_63_2_1_U33 : component maxpool_CIF_0_3_mul_31ns_32ns_63_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_861_p0,
        din1 => grp_fu_861_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_861_p2);

    mul_32ns_31ns_63_2_1_U34 : component maxpool_CIF_0_3_mul_32ns_31ns_63_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_865_p0,
        din1 => grp_fu_865_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_865_p2);

    mul_32s_32s_32_1_1_U35 : component maxpool_CIF_0_3_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_data_4_reg_1160,
        din1 => valIn_data_2_reg_1149,
        dout => KER_size_0_fu_918_p2);

    mul_32s_32s_32_1_1_U36 : component maxpool_CIF_0_3_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => KER_size_0_reg_1178,
        din1 => valIn_data_2_reg_1149,
        dout => KER_size_1_fu_970_p2);

    mul_32s_32s_32_1_1_U37 : component maxpool_CIF_0_3_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => KER_size_1_reg_1231,
        din1 => valIn_data_3_reg_1155,
        dout => KER_bound_fu_974_p2);

    regslice_both_in_r_U : component maxpool_CIF_0_3_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component maxpool_CIF_0_3_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (out_r_TREADY_int_regslice = ap_const_logic_1))) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_ready = ap_const_logic_1)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln157_fu_1080_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_ready = ap_const_logic_1)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_ready = ap_const_logic_1)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln157_fu_1080_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_ready = ap_const_logic_1)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_ready = ap_const_logic_1)) then 
                    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten20_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_1174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                indvar_flatten20_fu_246 <= ap_const_lv63_0;
            elsif (((icmp_ln157_fu_1080_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                indvar_flatten20_fu_246 <= add_ln155_reg_1281;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                indvar_flatten6_reg_786 <= add_ln157_reg_1309;
            elsif (((icmp_ln155_fu_1014_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then 
                indvar_flatten6_reg_786 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    num_img_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_1174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                num_img_fu_242 <= ap_const_lv32_0;
            elsif (((icmp_ln157_fu_1080_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                num_img_fu_242 <= select_ln155_2_reg_1296;
            end if; 
        end if;
    end process;

    xp_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                xp_reg_797 <= add_ln158_reg_1319;
            elsif (((icmp_ln155_fu_1014_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then 
                xp_reg_797 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    yp_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_1174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                yp_fu_238 <= ap_const_lv31_0;
            elsif (((icmp_ln157_fu_1080_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                yp_fu_238 <= yp_1_fu_1119_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (out_r_TREADY_int_regslice = ap_const_logic_1) and (icmp_ln125_fu_898_p2 = ap_const_lv1_1))) then
                IFMCH_curr <= valIn_data_4_reg_1160;
                IFMDim_curr <= valIn_data_5_reg_1166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                KER_bound_reg_1236 <= KER_bound_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                KER_size_0_reg_1178 <= KER_size_0_fu_918_p2;
                pool_out_bound_reg_1204 <= IFMDim_curr(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                KER_size_1_reg_1231 <= KER_size_1_fu_970_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                add_ln155_reg_1281 <= add_ln155_fu_1019_p2;
                select_ln155_1_reg_1291 <= select_ln155_1_fu_1060_p3;
                select_ln155_2_reg_1296 <= select_ln155_2_fu_1068_p3;
                select_ln155_reg_1286 <= select_ln155_fu_1036_p3;
                    zext_ln156_reg_1301(30 downto 0) <= zext_ln156_fu_1076_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                add_ln157_reg_1309 <= add_ln157_fu_1085_p2;
                add_ln158_reg_1319 <= add_ln158_fu_1108_p2;
                cmp132_not_reg_1324 <= cmp132_not_fu_1114_p2;
                trunc_ln158_reg_1314 <= trunc_ln158_fu_1104_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln153_reg_1174 <= icmp_ln153_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                mul_ln154_1_reg_1273 <= grp_fu_865_p2;
                mul_ln154_reg_1268 <= grp_fu_861_p2;
                sub131_reg_1247 <= sub131_fu_986_p2;
                sub137_reg_1253 <= sub137_fu_992_p2;
                sub_reg_1241 <= sub_fu_981_p2;
                    tmp_3_reg_1258(32 downto 1) <= tmp_3_fu_997_p3(32 downto 1);
                    tmp_5_reg_1263(31 downto 1) <= tmp_5_fu_1004_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                valIn_data_1_reg_1143 <= valIn_data_1_fu_878_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                valIn_data_2_reg_1149 <= valIn_data_2_fu_882_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                valIn_data_3_reg_1155 <= valIn_data_3_fu_886_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                valIn_data_4_reg_1160 <= valIn_data_4_fu_890_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                valIn_data_5_reg_1166 <= valIn_data_5_fu_894_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                valIn_data_reg_1137 <= valIn_data_fu_874_p1;
            end if;
        end if;
    end process;
    tmp_3_reg_1258(0) <= '0';
    tmp_5_reg_1263(0) <= '0';
    zext_ln156_reg_1301(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, icmp_ln153_reg_1174, ap_CS_fsm_state72, ap_CS_fsm_state78, ap_CS_fsm_state79, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done, icmp_ln155_fu_1014_p2, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state76, icmp_ln157_fu_1080_p2, ap_CS_fsm_state80, ap_CS_fsm_state83, regslice_both_out_r_U_apdone_blk, ap_CS_fsm_state84, out_r_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (out_r_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((icmp_ln153_reg_1174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (((icmp_ln155_fu_1014_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                if (((icmp_ln157_fu_1080_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                if (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state84) and (regslice_both_out_r_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    acc_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state72, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_address1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state80, ap_CS_fsm_state83, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            acc_address1 <= ap_const_lv64_3F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            acc_address1 <= ap_const_lv64_3E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            acc_address1 <= ap_const_lv64_3D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            acc_address1 <= ap_const_lv64_3C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            acc_address1 <= ap_const_lv64_3B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            acc_address1 <= ap_const_lv64_3A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            acc_address1 <= ap_const_lv64_39(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_address1 <= ap_const_lv64_38(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            acc_address1 <= ap_const_lv64_37(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            acc_address1 <= ap_const_lv64_36(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            acc_address1 <= ap_const_lv64_35(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            acc_address1 <= ap_const_lv64_34(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            acc_address1 <= ap_const_lv64_33(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            acc_address1 <= ap_const_lv64_32(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            acc_address1 <= ap_const_lv64_31(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            acc_address1 <= ap_const_lv64_30(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            acc_address1 <= ap_const_lv64_2F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            acc_address1 <= ap_const_lv64_2E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            acc_address1 <= ap_const_lv64_2D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            acc_address1 <= ap_const_lv64_2C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            acc_address1 <= ap_const_lv64_2B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            acc_address1 <= ap_const_lv64_2A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            acc_address1 <= ap_const_lv64_29(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            acc_address1 <= ap_const_lv64_28(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            acc_address1 <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            acc_address1 <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            acc_address1 <= ap_const_lv64_25(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            acc_address1 <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            acc_address1 <= ap_const_lv64_23(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            acc_address1 <= ap_const_lv64_22(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            acc_address1 <= ap_const_lv64_21(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            acc_address1 <= ap_const_lv64_20(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            acc_address1 <= ap_const_lv64_1F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            acc_address1 <= ap_const_lv64_1E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            acc_address1 <= ap_const_lv64_1D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            acc_address1 <= ap_const_lv64_1C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            acc_address1 <= ap_const_lv64_1B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            acc_address1 <= ap_const_lv64_1A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            acc_address1 <= ap_const_lv64_19(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            acc_address1 <= ap_const_lv64_18(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            acc_address1 <= ap_const_lv64_17(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            acc_address1 <= ap_const_lv64_16(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            acc_address1 <= ap_const_lv64_15(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            acc_address1 <= ap_const_lv64_14(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            acc_address1 <= ap_const_lv64_13(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            acc_address1 <= ap_const_lv64_12(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            acc_address1 <= ap_const_lv64_11(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            acc_address1 <= ap_const_lv64_10(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            acc_address1 <= ap_const_lv64_F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            acc_address1 <= ap_const_lv64_E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            acc_address1 <= ap_const_lv64_D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            acc_address1 <= ap_const_lv64_C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            acc_address1 <= ap_const_lv64_B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            acc_address1 <= ap_const_lv64_A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            acc_address1 <= ap_const_lv64_9(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            acc_address1 <= ap_const_lv64_8(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            acc_address1 <= ap_const_lv64_7(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            acc_address1 <= ap_const_lv64_6(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            acc_address1 <= ap_const_lv64_5(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            acc_address1 <= ap_const_lv64_4(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            acc_address1 <= ap_const_lv64_3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            acc_address1 <= ap_const_lv64_2(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            acc_address1 <= ap_const_lv64_1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_address1 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            acc_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            acc_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            acc_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_address1;
        else 
            acc_address1 <= "XXXXXX";
        end if; 
    end process;


    acc_ce0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            acc_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce0;
        else 
            acc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state72, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_ce1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state80, ap_CS_fsm_state83, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 
    = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) 
    or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state72) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (out_r_TREADY_int_regslice = ap_const_logic_1)) or ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            acc_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            acc_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            acc_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            acc_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_ce1;
        else 
            acc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    acc_d1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state72, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_d1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state80, ap_CS_fsm_state83, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 
    = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) 
    or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            acc_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            acc_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            acc_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            acc_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_d1;
        else 
            acc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    acc_we1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state72, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_we1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state80, ap_CS_fsm_state83, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 
    = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) 
    or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state72) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (out_r_TREADY_int_regslice = ap_const_logic_1)) or ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            acc_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            acc_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_acc_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            acc_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_acc_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            acc_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_acc_we1;
        else 
            acc_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln155_1_fu_1044_p2 <= std_logic_vector(unsigned(num_img_fu_242) + unsigned(ap_const_lv32_1));
    add_ln155_fu_1019_p2 <= std_logic_vector(unsigned(indvar_flatten20_fu_246) + unsigned(ap_const_lv63_1));
    add_ln157_fu_1085_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_786) + unsigned(ap_const_lv32_1));
    add_ln158_fu_1108_p2 <= std_logic_vector(unsigned(select_ln157_fu_1096_p3) + unsigned(ap_const_lv31_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done)
    begin
        if ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;

    ap_ST_fsm_state76_blk_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done)
    begin
        if ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state76_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state76_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state80_blk_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done)
    begin
        if ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state80_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state80_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done)
    begin
        if ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state83_blk_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done)
    begin
        if ((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state83_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state83_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state84_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk)
    begin
        if ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state84_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state84_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(out_r_TREADY_int_regslice)
    begin
        if ((out_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state1 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state2 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state3 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state4 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state5 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state6 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state7 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_state8 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    buf_1_address0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address0;
        else 
            buf_1_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_1_address1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_1_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_address1;
        else 
            buf_1_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_1_ce0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce0;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_1_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_ce1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_d1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_d1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_1_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_d1;
        else 
            buf_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_1_we1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_we1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_1_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_1_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_1_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_1_we1;
        else 
            buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_address0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address0;
        else 
            buf_2_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_2_address1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_2_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_address1;
        else 
            buf_2_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_2_ce0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce0;
        else 
            buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_ce1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_2_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_ce1;
        else 
            buf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_d1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_d1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_2_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_d1;
        else 
            buf_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_2_we1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_we1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_2_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_2_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_2_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_2_we1;
        else 
            buf_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_address0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address0;
        else 
            buf_3_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_3_address1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_3_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_address1;
        else 
            buf_3_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_3_ce0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce0;
        else 
            buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_ce1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_3_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_ce1;
        else 
            buf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_d1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_d1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_3_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_d1;
        else 
            buf_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_3_we1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_we1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_3_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_3_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_3_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_3_we1;
        else 
            buf_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_address0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_address0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address0;
        else 
            buf_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_address1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_address1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_address1;
        else 
            buf_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce0, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce0, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_ce0 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce0;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_ce1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_ce1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_d1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_d1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_d1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_d1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_d1;
        else 
            buf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_we1_assign_proc : process(grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_we1, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_we1, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            buf_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_buf_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            buf_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_buf_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_we1 <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_buf_r_we1;
        else 
            buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp130_not29_fu_1055_p2 <= "0" when (num_img_fu_242 = sub_reg_1241) else "1";
    cmp130_not_mid1_fu_1050_p2 <= "0" when (add_ln155_1_fu_1044_p2 = sub_reg_1241) else "1";
    cmp132_not_fu_1114_p2 <= "0" when (zext_ln156_reg_1301 = sub131_reg_1247) else "1";
    grp_fu_861_p0 <= zext_ln154_1_fu_940_p1(31 - 1 downto 0);
    grp_fu_861_p1 <= grp_fu_861_p10(32 - 1 downto 0);
    grp_fu_861_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(IFMCH_curr),63));
    grp_fu_865_p0 <= grp_fu_865_p00(32 - 1 downto 0);
    grp_fu_865_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(valIn_data_1_reg_1143),63));
    grp_fu_865_p1 <= zext_ln154_1_fu_940_p1(31 - 1 downto 0);
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_139_1_fu_808_ap_start_reg;
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_ap_start_reg;
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_171_10_fu_851_ap_start_reg;
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_ap_start_reg;
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state83);
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_ap_start_reg;
    grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state76);
    icmp_ln125_fu_898_p2 <= "1" when (valIn_data_reg_1137 = ap_const_lv32_3) else "0";
    icmp_ln153_fu_913_p2 <= "1" when (valIn_data_reg_1137 = ap_const_lv32_0) else "0";
    icmp_ln155_fu_1014_p2 <= "1" when (indvar_flatten20_fu_246 = mul_ln154_1_reg_1273) else "0";
    icmp_ln156_fu_1031_p2 <= "1" when (yp_fu_238 = pool_out_bound_reg_1204) else "0";
    icmp_ln157_fu_1080_p2 <= "1" when (indvar_flatten6_reg_786 = tmp_5_reg_1263) else "0";
    icmp_ln158_fu_1091_p2 <= "1" when (xp_reg_797 = pool_out_bound_reg_1204) else "0";

    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_r_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_in_r_TREADY, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_in_r_TREADY, ap_CS_fsm_state76, ap_CS_fsm_state80, out_r_TREADY_int_regslice)
    begin
        if (((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((out_r_TREADY_int_regslice 
    = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            in_r_TREADY_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_160_8_VITIS_LOOP_161_9_fu_825_in_r_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            in_r_TREADY_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_in_r_TREADY;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TDATA, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TDATA, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID, ap_CS_fsm_state76, ap_CS_fsm_state83, in_r_TDATA_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)))) then 
            out_r_TDATA_int_regslice <= in_r_TDATA_int_regslice;
        elsif (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            out_r_TDATA_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TDATA;
        elsif (((grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            out_r_TDATA_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TDATA;
        else 
            out_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state5, ap_block_state6, ap_block_state7, ap_block_state8, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID, grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID, ap_CS_fsm_state76, ap_CS_fsm_state83, out_r_TREADY_int_regslice)
    begin
        if (((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state8))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((out_r_TREADY_int_regslice 
    = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            out_r_TVALID_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_185_11_VITIS_LOOP_186_12_fu_834_out_r_TVALID;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            out_r_TVALID_int_regslice <= grp_maxpool_CIF_0_3_Pipeline_VITIS_LOOP_214_13_fu_816_out_r_TVALID;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    pool_out_bound_fu_926_p4 <= IFMDim_curr(31 downto 1);
    select_ln155_1_fu_1060_p3 <= 
        cmp130_not_mid1_fu_1050_p2 when (icmp_ln156_fu_1031_p2(0) = '1') else 
        cmp130_not29_fu_1055_p2;
    select_ln155_2_fu_1068_p3 <= 
        add_ln155_1_fu_1044_p2 when (icmp_ln156_fu_1031_p2(0) = '1') else 
        num_img_fu_242;
    select_ln155_fu_1036_p3 <= 
        ap_const_lv31_0 when (icmp_ln156_fu_1031_p2(0) = '1') else 
        yp_fu_238;
    select_ln157_fu_1096_p3 <= 
        ap_const_lv31_0 when (icmp_ln158_fu_1091_p2(0) = '1') else 
        xp_reg_797;
    sub131_fu_986_p2 <= std_logic_vector(unsigned(zext_ln154_fu_978_p1) + unsigned(ap_const_lv32_FFFFFFFF));
    sub137_fu_992_p2 <= std_logic_vector(unsigned(IFMCH_curr) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_fu_981_p2 <= std_logic_vector(unsigned(valIn_data_1_reg_1143) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_3_fu_997_p3 <= (IFMCH_curr & ap_const_lv1_0);
    tmp_5_fu_1004_p3 <= (pool_out_bound_reg_1204 & ap_const_lv1_0);
    trunc_ln158_fu_1104_p1 <= select_ln157_fu_1096_p3(2 - 1 downto 0);
    valIn_data_1_fu_878_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_2_fu_882_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_3_fu_886_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_4_fu_890_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_5_fu_894_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    valIn_data_fu_874_p1 <= in_r_TDATA_int_regslice(32 - 1 downto 0);
    yp_1_fu_1119_p2 <= std_logic_vector(unsigned(select_ln155_reg_1286) + unsigned(ap_const_lv31_1));
    zext_ln154_1_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_out_bound_fu_926_p4),63));
    zext_ln154_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_out_bound_reg_1204),32));
    zext_ln156_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln155_fu_1036_p3),32));
end behav;
