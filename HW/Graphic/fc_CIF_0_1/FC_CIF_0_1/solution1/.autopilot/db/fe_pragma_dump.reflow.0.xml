<pragmas>
<pragma file="fully_connected_1.cpp" line="107" pragmaType="pipeline" parentfunction="FC_CIF_0_1" off="0" ii="1" rewind="0" style=""/>
<pragma file="fully_connected_1.cpp" line="142" pragmaType="pipeline" parentfunction="FC_CIF_0_1" off="0" ii="1" rewind="0" style=""/>
<pragma file="fully_connected_1.cpp" line="161" pragmaType="pipeline" parentfunction="FC_CIF_0_1" off="0" ii="1" rewind="0" style=""/>
<pragma file="fully_connected_1.cpp" line="189" pragmaType="pipeline" parentfunction="FC_CIF_0_1" off="0" ii="1" rewind="0" style=""/>
<pragma file="fully_connected_1.cpp" line="38" pragmaType="interface" parentfunction="FC_CIF_0_1" mode="axis" port="in_stream_a" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="fully_connected_1.cpp" line="40" pragmaType="interface" parentfunction="FC_CIF_0_1" mode="axis" port="out_stream" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="fully_connected_1.cpp" line="41" pragmaType="interface" parentfunction="FC_CIF_0_1" mode="ap_ctrl_none" port="return" name=""/>
<pragma file="fully_connected_1.cpp" line="45" pragmaType="array_partition" parentfunction="FC_CIF_0_1" dim="2" factor="32" mode="block" dynamic="0" variable="_ZZ10FC_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1A"/>
<pragma file="fully_connected_1.cpp" line="46" pragmaType="array_partition" parentfunction="FC_CIF_0_1" dim="2" factor="32" mode="block" dynamic="0" variable="_ZZ10FC_CIF_0_1RN3hls6streamI7AXI_VALLi0EEES3_E1B"/>
<pragma file="fully_connected_1.cpp" line="184" pragmaType="bind_op" parentfunction="FC_CIF_0_1" op="12" impl="4" latency="-1"/>
<pragma file="fully_connected_1.cpp" line="185" pragmaType="bind_op" parentfunction="FC_CIF_0_1" op="12" impl="4" latency="-1"/>
<pragma file="fully_connected_1.cpp" line="186" pragmaType="bind_op" parentfunction="FC_CIF_0_1" op="12" impl="4" latency="-1"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="E:/downloads/.xinstall/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb1EEC2EDq33_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="E:/downloads/.xinstall/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<16>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<($_0)32, true>::div operator/<32, true>(ap_int_base<32, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<16>::ap_int<32>(ap_int<32> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, true>::RType<16, true>::mult operator*<16, true, 16, true>(ap_int_base<16, true> const&, ap_int_base<16, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/downloads/.xinstall/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<16, true>::ssdm_int(short)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<32, true>::div operator/<32, true, 32, true>(ap_int_base<32, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>& ap_int_base<32, true>::operator+=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
</pragmas>
