// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LeNet_wrapper_FC_1u_500u_10u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        connect_7_dout,
        connect_7_num_data_valid,
        connect_7_fifo_cap,
        connect_7_empty_n,
        connect_7_read,
        connect_8_din,
        connect_8_num_data_valid,
        connect_8_fifo_cap,
        connect_8_full_n,
        connect_8_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] connect_7_dout;
input  [6:0] connect_7_num_data_valid;
input  [6:0] connect_7_fifo_cap;
input   connect_7_empty_n;
output   connect_7_read;
output  [31:0] connect_8_din;
input  [6:0] connect_8_num_data_valid;
input  [6:0] connect_8_fifo_cap;
input   connect_8_full_n;
output   connect_8_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg connect_7_read;
reg[31:0] connect_8_din;
reg connect_8_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] B_COL_3;
reg   [31:0] B_ROW_3;
reg   [31:0] OFMDim_current_3;
reg    connect_7_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    connect_8_blk_n;
wire   [31:0] grp_fu_119_p2;
reg   [31:0] reg_127;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state19;
reg   [31:0] valIn_a_31_reg_207;
reg    ap_block_state1;
reg   [31:0] valIn_a_32_reg_211;
reg    ap_block_state2;
reg  signed [31:0] valIn_a_33_reg_216;
reg    ap_block_state3;
reg  signed [31:0] valIn_a_34_reg_224;
reg    ap_block_state4;
reg   [31:0] valIn_a_35_reg_230;
reg    ap_block_state6;
reg   [31:0] valIn_a_36_reg_237;
reg    ap_block_state7;
reg    ap_block_state8;
wire  signed [31:0] KER_size_0_fu_153_p2;
reg  signed [31:0] KER_size_0_reg_255;
wire    ap_CS_fsm_state10;
wire   [63:0] grp_fu_115_p2;
reg   [63:0] bound4_reg_276;
wire    ap_CS_fsm_state11;
wire  signed [31:0] grp_fu_123_p2;
reg  signed [31:0] mul_ln73_reg_284;
wire    ap_CS_fsm_state17;
wire  signed [31:0] KER_size_1_fu_199_p2;
reg  signed [31:0] KER_size_1_reg_289;
wire    ap_CS_fsm_state22;
wire   [31:0] KER_bound_fu_203_p2;
reg   [31:0] KER_bound_reg_294;
wire    ap_CS_fsm_state23;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_idle;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read;
wire    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start;
wire    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done;
wire    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_idle;
wire    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready;
wire   [31:0] grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din;
wire    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_idle;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read;
wire   [31:0] grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_idle;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read;
wire   [31:0] grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din;
wire    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write;
reg    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    ap_predicate_op77_call_state12;
reg    ap_block_state12_on_subcall_done;
wire   [0:0] icmp_ln92_fu_177_p2;
wire    ap_CS_fsm_state13;
reg    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg;
wire    ap_CS_fsm_state15;
reg   [31:0] B_COL_3_load_load_fu_170_p1;
wire    ap_CS_fsm_state16;
reg    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
reg    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg;
wire    ap_CS_fsm_state24;
reg    ap_predicate_pred285_state8;
reg    ap_predicate_pred287_state8;
reg   [63:0] indvar_flatten6_fu_64;
wire   [63:0] add_ln92_fu_182_p2;
reg    ap_block_state5;
wire   [31:0] grp_fu_115_p0;
wire   [31:0] grp_fu_115_p1;
reg  signed [31:0] grp_fu_119_p0;
reg  signed [31:0] grp_fu_119_p1;
wire    ap_CS_fsm_state18;
reg    grp_fu_119_ce;
reg    grp_fu_123_ce;
reg    ap_block_state21_on_subcall_done;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_predicate_pred289_state8;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire   [63:0] grp_fu_115_p00;
wire   [63:0] grp_fu_115_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 B_COL_3 = 32'd10;
#0 B_ROW_3 = 32'd500;
#0 OFMDim_current_3 = 32'd0;
#0 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg = 1'b0;
#0 grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg = 1'b0;
#0 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg = 1'b0;
#0 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg = 1'b0;
#0 indvar_flatten6_fu_64 = 64'd0;
end

LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start),
    .ap_done(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done),
    .ap_idle(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_idle),
    .ap_ready(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready),
    .connect_7_dout(connect_7_dout),
    .connect_7_num_data_valid(7'd0),
    .connect_7_fifo_cap(7'd0),
    .connect_7_empty_n(connect_7_empty_n),
    .connect_7_read(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read),
    .B_ROW_3_load(B_ROW_3)
);

LeNet_wrapper_FC_1u_500u_10u_Pipeline_L2 grp_FC_1u_500u_10u_Pipeline_L2_fu_89(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start),
    .ap_done(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done),
    .ap_idle(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_idle),
    .ap_ready(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready),
    .connect_8_din(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din),
    .connect_8_num_data_valid(7'd0),
    .connect_8_fifo_cap(7'd0),
    .connect_8_full_n(connect_8_full_n),
    .connect_8_write(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write),
    .B_COL_3_load(B_COL_3_load_load_fu_170_p1)
);

LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start),
    .ap_done(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done),
    .ap_idle(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_idle),
    .ap_ready(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready),
    .connect_7_dout(connect_7_dout),
    .connect_7_num_data_valid(7'd0),
    .connect_7_fifo_cap(7'd0),
    .connect_7_empty_n(connect_7_empty_n),
    .connect_7_read(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read),
    .connect_8_din(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din),
    .connect_8_num_data_valid(7'd0),
    .connect_8_fifo_cap(7'd0),
    .connect_8_full_n(connect_8_full_n),
    .connect_8_write(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write),
    .valIn_a_53(valIn_a_35_reg_230),
    .mul_ln73_2(reg_127)
);

LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7 grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start),
    .ap_done(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done),
    .ap_idle(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_idle),
    .ap_ready(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready),
    .connect_7_dout(connect_7_dout),
    .connect_7_num_data_valid(7'd0),
    .connect_7_fifo_cap(7'd0),
    .connect_7_empty_n(connect_7_empty_n),
    .connect_7_read(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read),
    .connect_8_din(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din),
    .connect_8_num_data_valid(7'd0),
    .connect_8_fifo_cap(7'd0),
    .connect_8_full_n(connect_8_full_n),
    .connect_8_write(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write),
    .KER_bound(KER_bound_reg_294)
);

LeNet_wrapper_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_115_p0),
    .din1(grp_fu_115_p1),
    .ce(1'b1),
    .dout(grp_fu_115_p2)
);

LeNet_wrapper_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U388(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p0),
    .din1(grp_fu_119_p1),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p2)
);

LeNet_wrapper_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U389(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(valIn_a_33_reg_216),
    .din1(valIn_a_34_reg_224),
    .ce(grp_fu_123_ce),
    .dout(grp_fu_123_p2)
);

LeNet_wrapper_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U390(
    .din0(valIn_a_35_reg_230),
    .din1(valIn_a_33_reg_216),
    .dout(KER_size_0_fu_153_p2)
);

LeNet_wrapper_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U391(
    .din0(valIn_a_33_reg_216),
    .din1(KER_size_0_reg_255),
    .dout(KER_size_1_fu_199_p2)
);

LeNet_wrapper_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U392(
    .din0(valIn_a_34_reg_224),
    .din1(KER_size_1_reg_289),
    .dout(KER_bound_fu_203_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state21) & (1'b0 == ap_block_state21_on_subcall_done))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= 1'b1;
        end else if ((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready == 1'b1)) begin
            grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= 1'b1;
        end else if ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready == 1'b1)) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready == 1'b1)) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln92_fu_177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done) & (valIn_a_31_reg_207 == 32'd0))) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= 1'b1;
        end else if ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready == 1'b1)) begin
            grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_pred287_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
        indvar_flatten6_fu_64 <= 64'd0;
    end else if (((icmp_ln92_fu_177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done) & (valIn_a_31_reg_207 == 32'd0))) begin
        indvar_flatten6_fu_64 <= add_ln92_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_pred285_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
        B_COL_3 <= valIn_a_35_reg_230;
        OFMDim_current_3 <= valIn_a_36_reg_237;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        B_COL_3_load_load_fu_170_p1 <= B_COL_3;
        bound4_reg_276 <= grp_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        B_ROW_3 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        KER_bound_reg_294 <= KER_bound_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
        KER_size_0_reg_255 <= KER_size_0_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        KER_size_1_reg_289 <= KER_size_1_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7))) begin
        ap_predicate_pred285_state8 <= (valIn_a_31_reg_207 == 32'd4);
        ap_predicate_pred287_state8 <= (valIn_a_31_reg_207 == 32'd0);
        ap_predicate_pred289_state8 <= (~(valIn_a_31_reg_207 == 32'd0) & ~(valIn_a_31_reg_207 == 32'd4));
        valIn_a_36_reg_237 <= connect_7_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_ln73_reg_284 <= grp_fu_123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_127 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        valIn_a_31_reg_207 <= connect_7_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
        valIn_a_32_reg_211 <= connect_7_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3))) begin
        valIn_a_33_reg_216 <= connect_7_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4))) begin
        valIn_a_34_reg_224 <= connect_7_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6))) begin
        valIn_a_35_reg_230 <= connect_7_dout;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state12_on_subcall_done)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state21_on_subcall_done)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state4)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state5)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state6)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state7)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state8)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'b0 == ap_block_state21_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        connect_7_blk_n = connect_7_empty_n;
    end else begin
        connect_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3)) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2)) | ((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6)) | ((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5)))) begin
        connect_7_read = 1'b1;
    end else if (((ap_predicate_op77_call_state12 == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        connect_7_read = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read;
    end else if (((1'b1 == ap_CS_fsm_state21) & (valIn_a_31_reg_207 == 32'd4))) begin
        connect_7_read = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        connect_7_read = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read;
    end else begin
        connect_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        connect_8_blk_n = connect_8_full_n;
    end else begin
        connect_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3)) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2)) | ((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6)) | ((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5)))) begin
        connect_8_din = connect_7_dout;
    end else if (((ap_predicate_op77_call_state12 == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        connect_8_din = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din;
    end else if (((1'b1 == ap_CS_fsm_state21) & (valIn_a_31_reg_207 == 32'd4))) begin
        connect_8_din = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        connect_8_din = grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din;
    end else begin
        connect_8_din = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3)) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2)) | ((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6)) | ((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5)))) begin
        connect_8_write = 1'b1;
    end else if (((ap_predicate_op77_call_state12 == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        connect_8_write = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write;
    end else if (((1'b1 == ap_CS_fsm_state21) & (valIn_a_31_reg_207 == 32'd4))) begin
        connect_8_write = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        connect_8_write = grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write;
    end else begin
        connect_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8)))) begin
        grp_fu_119_ce = 1'b1;
    end else begin
        grp_fu_119_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_119_p0 = mul_ln73_reg_284;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_119_p0 = OFMDim_current_3;
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_119_p1 = valIn_a_33_reg_216;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_119_p1 = OFMDim_current_3;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8)))) begin
        grp_fu_123_ce = 1'b1;
    end else begin
        grp_fu_123_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'b0 == ap_block_state21_on_subcall_done))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((ap_predicate_pred289_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((ap_predicate_pred285_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((ap_predicate_pred287_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done) & ((~(valIn_a_31_reg_207 == 32'd0) & ~(valIn_a_31_reg_207 == 32'd4)) | (~(valIn_a_31_reg_207 == 32'd4) & (icmp_ln92_fu_177_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((icmp_ln92_fu_177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done) & (valIn_a_31_reg_207 == 32'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'b0 == ap_block_state21_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln92_fu_182_p2 = (indvar_flatten6_fu_64 + 64'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state12_on_subcall_done = ((ap_predicate_op77_call_state12 == 1'b1) & (grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_on_subcall_done = ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done == 1'b0) & (valIn_a_31_reg_207 == 32'd4));
end

always @ (*) begin
    ap_block_state3 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((connect_8_full_n == 1'b0) | (connect_7_empty_n == 1'b0));
end

always @ (*) begin
    ap_predicate_op77_call_state12 = (~(valIn_a_31_reg_207 == 32'd0) & ~(valIn_a_31_reg_207 == 32'd4));
end

assign ap_ready = internal_ap_ready;

assign grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start = grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg;

assign grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg;

assign grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg;

assign grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start = grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg;

assign grp_fu_115_p0 = grp_fu_115_p00;

assign grp_fu_115_p00 = valIn_a_32_reg_211;

assign grp_fu_115_p1 = grp_fu_115_p10;

assign grp_fu_115_p10 = reg_127;

assign icmp_ln92_fu_177_p2 = ((indvar_flatten6_fu_64 == bound4_reg_276) ? 1'b1 : 1'b0);

assign start_out = real_start;

endmodule //LeNet_wrapper_FC_1u_500u_10u_s
