// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CIFAR_10_wrapper_pool_2u_32u_32u_Pipeline_VITIS_LOOP_153_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf_15_address0,
        buf_15_ce0,
        buf_15_q0,
        buf_15_address1,
        buf_15_ce1,
        buf_15_we1,
        buf_15_d1,
        buf_14_address0,
        buf_14_ce0,
        buf_14_q0,
        buf_14_address1,
        buf_14_ce1,
        buf_14_we1,
        buf_14_d1,
        buf_13_address0,
        buf_13_ce0,
        buf_13_q0,
        buf_13_address1,
        buf_13_ce1,
        buf_13_we1,
        buf_13_d1,
        buf_12_address0,
        buf_12_ce0,
        buf_12_q0,
        buf_12_address1,
        buf_12_ce1,
        buf_12_we1,
        buf_12_d1,
        buf_11_address0,
        buf_11_ce0,
        buf_11_q0,
        buf_11_address1,
        buf_11_ce1,
        buf_11_we1,
        buf_11_d1,
        buf_10_address0,
        buf_10_ce0,
        buf_10_q0,
        buf_10_address1,
        buf_10_ce1,
        buf_10_we1,
        buf_10_d1,
        buf_9_address0,
        buf_9_ce0,
        buf_9_q0,
        buf_9_address1,
        buf_9_ce1,
        buf_9_we1,
        buf_9_d1,
        buf_8_address0,
        buf_8_ce0,
        buf_8_q0,
        buf_8_address1,
        buf_8_ce1,
        buf_8_we1,
        buf_8_d1,
        buf_7_address0,
        buf_7_ce0,
        buf_7_q0,
        buf_7_address1,
        buf_7_ce1,
        buf_7_we1,
        buf_7_d1,
        buf_6_address0,
        buf_6_ce0,
        buf_6_q0,
        buf_6_address1,
        buf_6_ce1,
        buf_6_we1,
        buf_6_d1,
        buf_5_address0,
        buf_5_ce0,
        buf_5_q0,
        buf_5_address1,
        buf_5_ce1,
        buf_5_we1,
        buf_5_d1,
        buf_4_address0,
        buf_4_ce0,
        buf_4_q0,
        buf_4_address1,
        buf_4_ce1,
        buf_4_we1,
        buf_4_d1,
        buf_3_address0,
        buf_3_ce0,
        buf_3_q0,
        buf_3_address1,
        buf_3_ce1,
        buf_3_we1,
        buf_3_d1,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        empty,
        acc_address1,
        acc_ce1,
        acc_we1,
        acc_d1,
        acc_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] buf_15_address0;
output   buf_15_ce0;
input  [31:0] buf_15_q0;
output  [4:0] buf_15_address1;
output   buf_15_ce1;
output   buf_15_we1;
output  [31:0] buf_15_d1;
output  [4:0] buf_14_address0;
output   buf_14_ce0;
input  [31:0] buf_14_q0;
output  [4:0] buf_14_address1;
output   buf_14_ce1;
output   buf_14_we1;
output  [31:0] buf_14_d1;
output  [4:0] buf_13_address0;
output   buf_13_ce0;
input  [31:0] buf_13_q0;
output  [4:0] buf_13_address1;
output   buf_13_ce1;
output   buf_13_we1;
output  [31:0] buf_13_d1;
output  [4:0] buf_12_address0;
output   buf_12_ce0;
input  [31:0] buf_12_q0;
output  [4:0] buf_12_address1;
output   buf_12_ce1;
output   buf_12_we1;
output  [31:0] buf_12_d1;
output  [4:0] buf_11_address0;
output   buf_11_ce0;
input  [31:0] buf_11_q0;
output  [4:0] buf_11_address1;
output   buf_11_ce1;
output   buf_11_we1;
output  [31:0] buf_11_d1;
output  [4:0] buf_10_address0;
output   buf_10_ce0;
input  [31:0] buf_10_q0;
output  [4:0] buf_10_address1;
output   buf_10_ce1;
output   buf_10_we1;
output  [31:0] buf_10_d1;
output  [4:0] buf_9_address0;
output   buf_9_ce0;
input  [31:0] buf_9_q0;
output  [4:0] buf_9_address1;
output   buf_9_ce1;
output   buf_9_we1;
output  [31:0] buf_9_d1;
output  [4:0] buf_8_address0;
output   buf_8_ce0;
input  [31:0] buf_8_q0;
output  [4:0] buf_8_address1;
output   buf_8_ce1;
output   buf_8_we1;
output  [31:0] buf_8_d1;
output  [4:0] buf_7_address0;
output   buf_7_ce0;
input  [31:0] buf_7_q0;
output  [4:0] buf_7_address1;
output   buf_7_ce1;
output   buf_7_we1;
output  [31:0] buf_7_d1;
output  [4:0] buf_6_address0;
output   buf_6_ce0;
input  [31:0] buf_6_q0;
output  [4:0] buf_6_address1;
output   buf_6_ce1;
output   buf_6_we1;
output  [31:0] buf_6_d1;
output  [4:0] buf_5_address0;
output   buf_5_ce0;
input  [31:0] buf_5_q0;
output  [4:0] buf_5_address1;
output   buf_5_ce1;
output   buf_5_we1;
output  [31:0] buf_5_d1;
output  [4:0] buf_4_address0;
output   buf_4_ce0;
input  [31:0] buf_4_q0;
output  [4:0] buf_4_address1;
output   buf_4_ce1;
output   buf_4_we1;
output  [31:0] buf_4_d1;
output  [4:0] buf_3_address0;
output   buf_3_ce0;
input  [31:0] buf_3_q0;
output  [4:0] buf_3_address1;
output   buf_3_ce1;
output   buf_3_we1;
output  [31:0] buf_3_d1;
output  [4:0] buf_2_address0;
output   buf_2_ce0;
input  [31:0] buf_2_q0;
output  [4:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [31:0] buf_2_d1;
output  [4:0] buf_1_address0;
output   buf_1_ce0;
input  [31:0] buf_1_q0;
output  [4:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [31:0] buf_1_d1;
output  [4:0] buf_r_address0;
output   buf_r_ce0;
input  [31:0] buf_r_q0;
output  [4:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [31:0] buf_r_d1;
input  [3:0] empty;
output  [4:0] acc_address1;
output   acc_ce1;
output   acc_we1;
output  [31:0] acc_d1;
input  [31:0] acc_q1;

reg ap_idle;
reg buf_15_ce0;
reg buf_15_ce1;
reg buf_15_we1;
reg buf_14_ce0;
reg buf_14_ce1;
reg buf_14_we1;
reg buf_13_ce0;
reg buf_13_ce1;
reg buf_13_we1;
reg buf_12_ce0;
reg buf_12_ce1;
reg buf_12_we1;
reg buf_11_ce0;
reg buf_11_ce1;
reg buf_11_we1;
reg buf_10_ce0;
reg buf_10_ce1;
reg buf_10_we1;
reg buf_9_ce0;
reg buf_9_ce1;
reg buf_9_we1;
reg buf_8_ce0;
reg buf_8_ce1;
reg buf_8_we1;
reg buf_7_ce0;
reg buf_7_ce1;
reg buf_7_we1;
reg buf_6_ce0;
reg buf_6_ce1;
reg buf_6_we1;
reg buf_5_ce0;
reg buf_5_ce1;
reg buf_5_we1;
reg buf_4_ce0;
reg buf_4_ce1;
reg buf_4_we1;
reg buf_3_ce0;
reg buf_3_ce1;
reg buf_3_we1;
reg buf_2_ce0;
reg buf_2_ce1;
reg buf_2_we1;
reg buf_1_ce0;
reg buf_1_ce1;
reg buf_1_we1;
reg buf_r_ce0;
reg buf_r_ce1;
reg buf_r_we1;
reg acc_ce1;
reg acc_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln153_fu_416_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] tmp_reg_558;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] buf_addr_reg_567;
reg   [4:0] buf_addr_reg_567_pp0_iter1_reg;
reg   [4:0] buf_1_addr_reg_573;
reg   [4:0] buf_1_addr_reg_573_pp0_iter1_reg;
reg   [4:0] buf_2_addr_reg_579;
reg   [4:0] buf_2_addr_reg_579_pp0_iter1_reg;
reg   [4:0] buf_3_addr_reg_585;
reg   [4:0] buf_3_addr_reg_585_pp0_iter1_reg;
reg   [4:0] buf_4_addr_reg_591;
reg   [4:0] buf_4_addr_reg_591_pp0_iter1_reg;
reg   [4:0] buf_5_addr_reg_597;
reg   [4:0] buf_5_addr_reg_597_pp0_iter1_reg;
reg   [4:0] buf_6_addr_reg_603;
reg   [4:0] buf_6_addr_reg_603_pp0_iter1_reg;
reg   [4:0] buf_7_addr_reg_609;
reg   [4:0] buf_7_addr_reg_609_pp0_iter1_reg;
reg   [4:0] buf_8_addr_reg_615;
reg   [4:0] buf_8_addr_reg_615_pp0_iter1_reg;
reg   [4:0] buf_9_addr_reg_621;
reg   [4:0] buf_9_addr_reg_621_pp0_iter1_reg;
reg   [4:0] buf_10_addr_reg_627;
reg   [4:0] buf_10_addr_reg_627_pp0_iter1_reg;
reg   [4:0] buf_11_addr_reg_633;
reg   [4:0] buf_11_addr_reg_633_pp0_iter1_reg;
reg   [4:0] buf_12_addr_reg_639;
reg   [4:0] buf_12_addr_reg_639_pp0_iter1_reg;
reg   [4:0] buf_13_addr_reg_645;
reg   [4:0] buf_13_addr_reg_645_pp0_iter1_reg;
reg   [4:0] buf_14_addr_reg_651;
reg   [4:0] buf_14_addr_reg_651_pp0_iter1_reg;
reg   [4:0] buf_15_addr_reg_657;
reg   [4:0] buf_15_addr_reg_657_pp0_iter1_reg;
wire   [31:0] tmp_2_fu_454_p35;
reg   [31:0] tmp_2_reg_668;
reg   [31:0] acc_load_reg_674;
wire   [63:0] zext_ln153_fu_428_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] ch_fu_108;
wire   [5:0] add_ln153_fu_422_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_ch_2;
wire   [31:0] select_ln156_fu_529_p3;
wire   [31:0] tmp_2_fu_454_p33;
wire   [0:0] icmp_ln156_fu_525_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [3:0] tmp_2_fu_454_p1;
wire   [3:0] tmp_2_fu_454_p3;
wire   [3:0] tmp_2_fu_454_p5;
wire   [3:0] tmp_2_fu_454_p7;
wire   [3:0] tmp_2_fu_454_p9;
wire   [3:0] tmp_2_fu_454_p11;
wire   [3:0] tmp_2_fu_454_p13;
wire   [3:0] tmp_2_fu_454_p15;
wire  signed [3:0] tmp_2_fu_454_p17;
wire  signed [3:0] tmp_2_fu_454_p19;
wire  signed [3:0] tmp_2_fu_454_p21;
wire  signed [3:0] tmp_2_fu_454_p23;
wire  signed [3:0] tmp_2_fu_454_p25;
wire  signed [3:0] tmp_2_fu_454_p27;
wire  signed [3:0] tmp_2_fu_454_p29;
wire  signed [3:0] tmp_2_fu_454_p31;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ch_fu_108 = 6'd0;
#0 ap_done_reg = 1'b0;
end

CIFAR_10_wrapper_sparsemux_33_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_33_4_32_1_1_U283(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(buf_5_q0),
    .din6(buf_6_q0),
    .din7(buf_7_q0),
    .din8(buf_8_q0),
    .din9(buf_9_q0),
    .din10(buf_10_q0),
    .din11(buf_11_q0),
    .din12(buf_12_q0),
    .din13(buf_13_q0),
    .din14(buf_14_q0),
    .din15(buf_15_q0),
    .def(tmp_2_fu_454_p33),
    .sel(empty),
    .dout(tmp_2_fu_454_p35)
);

CIFAR_10_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln153_fu_416_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ch_fu_108 <= add_ln153_fu_422_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ch_fu_108 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_load_reg_674 <= acc_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        buf_10_addr_reg_627 <= zext_ln153_fu_428_p1;
        buf_10_addr_reg_627_pp0_iter1_reg <= buf_10_addr_reg_627;
        buf_11_addr_reg_633 <= zext_ln153_fu_428_p1;
        buf_11_addr_reg_633_pp0_iter1_reg <= buf_11_addr_reg_633;
        buf_12_addr_reg_639 <= zext_ln153_fu_428_p1;
        buf_12_addr_reg_639_pp0_iter1_reg <= buf_12_addr_reg_639;
        buf_13_addr_reg_645 <= zext_ln153_fu_428_p1;
        buf_13_addr_reg_645_pp0_iter1_reg <= buf_13_addr_reg_645;
        buf_14_addr_reg_651 <= zext_ln153_fu_428_p1;
        buf_14_addr_reg_651_pp0_iter1_reg <= buf_14_addr_reg_651;
        buf_15_addr_reg_657 <= zext_ln153_fu_428_p1;
        buf_15_addr_reg_657_pp0_iter1_reg <= buf_15_addr_reg_657;
        buf_1_addr_reg_573 <= zext_ln153_fu_428_p1;
        buf_1_addr_reg_573_pp0_iter1_reg <= buf_1_addr_reg_573;
        buf_2_addr_reg_579 <= zext_ln153_fu_428_p1;
        buf_2_addr_reg_579_pp0_iter1_reg <= buf_2_addr_reg_579;
        buf_3_addr_reg_585 <= zext_ln153_fu_428_p1;
        buf_3_addr_reg_585_pp0_iter1_reg <= buf_3_addr_reg_585;
        buf_4_addr_reg_591 <= zext_ln153_fu_428_p1;
        buf_4_addr_reg_591_pp0_iter1_reg <= buf_4_addr_reg_591;
        buf_5_addr_reg_597 <= zext_ln153_fu_428_p1;
        buf_5_addr_reg_597_pp0_iter1_reg <= buf_5_addr_reg_597;
        buf_6_addr_reg_603 <= zext_ln153_fu_428_p1;
        buf_6_addr_reg_603_pp0_iter1_reg <= buf_6_addr_reg_603;
        buf_7_addr_reg_609 <= zext_ln153_fu_428_p1;
        buf_7_addr_reg_609_pp0_iter1_reg <= buf_7_addr_reg_609;
        buf_8_addr_reg_615 <= zext_ln153_fu_428_p1;
        buf_8_addr_reg_615_pp0_iter1_reg <= buf_8_addr_reg_615;
        buf_9_addr_reg_621 <= zext_ln153_fu_428_p1;
        buf_9_addr_reg_621_pp0_iter1_reg <= buf_9_addr_reg_621;
        buf_addr_reg_567 <= zext_ln153_fu_428_p1;
        buf_addr_reg_567_pp0_iter1_reg <= buf_addr_reg_567;
        tmp_2_reg_668 <= tmp_2_fu_454_p35;
    end
end

always @ (*) begin
    if (((icmp_ln153_fu_416_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_ce1 = 1'b1;
    end else begin
        acc_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln153_fu_416_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_we1 = 1'b1;
    end else begin
        acc_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln153_fu_416_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ch_2 = 6'd0;
    end else begin
        ap_sig_allocacmp_ch_2 = ch_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_10_ce0 = 1'b1;
    end else begin
        buf_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_10_ce1 = 1'b1;
    end else begin
        buf_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd10))) begin
        buf_10_we1 = 1'b1;
    end else begin
        buf_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_11_ce0 = 1'b1;
    end else begin
        buf_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_11_ce1 = 1'b1;
    end else begin
        buf_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd11))) begin
        buf_11_we1 = 1'b1;
    end else begin
        buf_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_12_ce0 = 1'b1;
    end else begin
        buf_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_12_ce1 = 1'b1;
    end else begin
        buf_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd12))) begin
        buf_12_we1 = 1'b1;
    end else begin
        buf_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_13_ce0 = 1'b1;
    end else begin
        buf_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_13_ce1 = 1'b1;
    end else begin
        buf_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd13))) begin
        buf_13_we1 = 1'b1;
    end else begin
        buf_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_14_ce0 = 1'b1;
    end else begin
        buf_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_14_ce1 = 1'b1;
    end else begin
        buf_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd14))) begin
        buf_14_we1 = 1'b1;
    end else begin
        buf_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_15_ce0 = 1'b1;
    end else begin
        buf_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_15_ce1 = 1'b1;
    end else begin
        buf_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd15))) begin
        buf_15_we1 = 1'b1;
    end else begin
        buf_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd1))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd2))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_3_ce0 = 1'b1;
    end else begin
        buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_3_ce1 = 1'b1;
    end else begin
        buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd3))) begin
        buf_3_we1 = 1'b1;
    end else begin
        buf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_4_ce0 = 1'b1;
    end else begin
        buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_4_ce1 = 1'b1;
    end else begin
        buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd4))) begin
        buf_4_we1 = 1'b1;
    end else begin
        buf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_5_ce0 = 1'b1;
    end else begin
        buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_5_ce1 = 1'b1;
    end else begin
        buf_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd5))) begin
        buf_5_we1 = 1'b1;
    end else begin
        buf_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_6_ce0 = 1'b1;
    end else begin
        buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_6_ce1 = 1'b1;
    end else begin
        buf_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd6))) begin
        buf_6_we1 = 1'b1;
    end else begin
        buf_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_7_ce0 = 1'b1;
    end else begin
        buf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_7_ce1 = 1'b1;
    end else begin
        buf_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd7))) begin
        buf_7_we1 = 1'b1;
    end else begin
        buf_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_8_ce0 = 1'b1;
    end else begin
        buf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_8_ce1 = 1'b1;
    end else begin
        buf_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd8))) begin
        buf_8_we1 = 1'b1;
    end else begin
        buf_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_9_ce0 = 1'b1;
    end else begin
        buf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_9_ce1 = 1'b1;
    end else begin
        buf_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd9))) begin
        buf_9_we1 = 1'b1;
    end else begin
        buf_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_reg_558 == 4'd0))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_address1 = zext_ln153_fu_428_p1;

assign acc_d1 = 32'd4293967297;

assign add_ln153_fu_422_p2 = (ap_sig_allocacmp_ch_2 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign buf_10_address0 = zext_ln153_fu_428_p1;

assign buf_10_address1 = buf_10_addr_reg_627_pp0_iter1_reg;

assign buf_10_d1 = select_ln156_fu_529_p3;

assign buf_11_address0 = zext_ln153_fu_428_p1;

assign buf_11_address1 = buf_11_addr_reg_633_pp0_iter1_reg;

assign buf_11_d1 = select_ln156_fu_529_p3;

assign buf_12_address0 = zext_ln153_fu_428_p1;

assign buf_12_address1 = buf_12_addr_reg_639_pp0_iter1_reg;

assign buf_12_d1 = select_ln156_fu_529_p3;

assign buf_13_address0 = zext_ln153_fu_428_p1;

assign buf_13_address1 = buf_13_addr_reg_645_pp0_iter1_reg;

assign buf_13_d1 = select_ln156_fu_529_p3;

assign buf_14_address0 = zext_ln153_fu_428_p1;

assign buf_14_address1 = buf_14_addr_reg_651_pp0_iter1_reg;

assign buf_14_d1 = select_ln156_fu_529_p3;

assign buf_15_address0 = zext_ln153_fu_428_p1;

assign buf_15_address1 = buf_15_addr_reg_657_pp0_iter1_reg;

assign buf_15_d1 = select_ln156_fu_529_p3;

assign buf_1_address0 = zext_ln153_fu_428_p1;

assign buf_1_address1 = buf_1_addr_reg_573_pp0_iter1_reg;

assign buf_1_d1 = select_ln156_fu_529_p3;

assign buf_2_address0 = zext_ln153_fu_428_p1;

assign buf_2_address1 = buf_2_addr_reg_579_pp0_iter1_reg;

assign buf_2_d1 = select_ln156_fu_529_p3;

assign buf_3_address0 = zext_ln153_fu_428_p1;

assign buf_3_address1 = buf_3_addr_reg_585_pp0_iter1_reg;

assign buf_3_d1 = select_ln156_fu_529_p3;

assign buf_4_address0 = zext_ln153_fu_428_p1;

assign buf_4_address1 = buf_4_addr_reg_591_pp0_iter1_reg;

assign buf_4_d1 = select_ln156_fu_529_p3;

assign buf_5_address0 = zext_ln153_fu_428_p1;

assign buf_5_address1 = buf_5_addr_reg_597_pp0_iter1_reg;

assign buf_5_d1 = select_ln156_fu_529_p3;

assign buf_6_address0 = zext_ln153_fu_428_p1;

assign buf_6_address1 = buf_6_addr_reg_603_pp0_iter1_reg;

assign buf_6_d1 = select_ln156_fu_529_p3;

assign buf_7_address0 = zext_ln153_fu_428_p1;

assign buf_7_address1 = buf_7_addr_reg_609_pp0_iter1_reg;

assign buf_7_d1 = select_ln156_fu_529_p3;

assign buf_8_address0 = zext_ln153_fu_428_p1;

assign buf_8_address1 = buf_8_addr_reg_615_pp0_iter1_reg;

assign buf_8_d1 = select_ln156_fu_529_p3;

assign buf_9_address0 = zext_ln153_fu_428_p1;

assign buf_9_address1 = buf_9_addr_reg_621_pp0_iter1_reg;

assign buf_9_d1 = select_ln156_fu_529_p3;

assign buf_r_address0 = zext_ln153_fu_428_p1;

assign buf_r_address1 = buf_addr_reg_567_pp0_iter1_reg;

assign buf_r_d1 = select_ln156_fu_529_p3;

assign icmp_ln153_fu_416_p2 = ((ap_sig_allocacmp_ch_2 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln156_fu_525_p2 = (($signed(tmp_2_reg_668) > $signed(acc_load_reg_674)) ? 1'b1 : 1'b0);

assign select_ln156_fu_529_p3 = ((icmp_ln156_fu_525_p2[0:0] == 1'b1) ? tmp_2_reg_668 : acc_load_reg_674);

assign tmp_2_fu_454_p33 = 'bx;

assign tmp_reg_558 = empty;

assign zext_ln153_fu_428_p1 = ap_sig_allocacmp_ch_2;

endmodule //CIFAR_10_wrapper_pool_2u_32u_32u_Pipeline_VITIS_LOOP_153_10
