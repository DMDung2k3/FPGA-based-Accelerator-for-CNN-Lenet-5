-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_pool_2u_50u_8u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    connect_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_5_empty_n : IN STD_LOGIC;
    connect_5_read : OUT STD_LOGIC;
    connect_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_6_full_n : IN STD_LOGIC;
    connect_6_write : OUT STD_LOGIC );
end;


architecture behav of LeNet_wrapper_pool_2u_50u_8u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (67 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (67 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (67 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (67 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (67 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (67 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (67 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (67 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (67 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (67 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (67 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFF0BDC1 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000001";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal IFMCH_curr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal IFMDim_curr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal connect_5_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal connect_6_blk_n : STD_LOGIC;
    signal valIn_4_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal valIn_5_reg_851 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal valIn_6_reg_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal valIn_7_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal valIn_8_reg_867 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal valIn_9_reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal icmp_ln137_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_reg_881 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal KER_size_0_fu_729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal trunc_ln_fu_737_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln_reg_897 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln138_fu_751_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal KER_size_1_fu_771_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_1_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal KER_bound_fu_775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal tmp_2_fu_779_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_2_reg_932 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp_4_fu_786_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_701_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln138_reg_942 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_705_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln138_1_reg_947 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln139_fu_801_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln139_reg_955 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal add_ln141_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln141_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal trunc_ln142_fu_831_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln142_reg_968 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln142_fu_835_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln142_reg_973 : STD_LOGIC_VECTOR (30 downto 0);
    signal buf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_we1 : STD_LOGIC;
    signal buf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_we1 : STD_LOGIC;
    signal buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2_ce0 : STD_LOGIC;
    signal buf_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2_ce1 : STD_LOGIC;
    signal buf_2_we1 : STD_LOGIC;
    signal buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_3_ce0 : STD_LOGIC;
    signal buf_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_3_ce1 : STD_LOGIC;
    signal buf_3_we1 : STD_LOGIC;
    signal buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_ce0 : STD_LOGIC;
    signal acc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal acc_ce1 : STD_LOGIC;
    signal acc_we1 : STD_LOGIC;
    signal acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_idle : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_ready : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_done : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_idle : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_ready : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_5_read : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_write : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_idle : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_ready : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_connect_5_read : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_idle : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_ready : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_write : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_idle : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_ready : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce0 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_ce1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_we1 : STD_LOGIC;
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_reg_630 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln139_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal xp_reg_641 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state8_ignore_call5 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln141_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal icmp_ln109_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten20_fu_202 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    signal ap_block_state5 : BOOLEAN;
    signal grp_fu_701_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_705_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_705_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln142_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln141_fu_823_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state61_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (67 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal grp_fu_701_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_705_p00 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        connect_5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        connect_5_empty_n : IN STD_LOGIC;
        connect_5_read : OUT STD_LOGIC;
        connect_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_full_n : IN STD_LOGIC;
        connect_6_write : OUT STD_LOGIC;
        KER_bound : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        connect_5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        connect_5_empty_n : IN STD_LOGIC;
        connect_5_read : OUT STD_LOGIC;
        zext_ln138 : IN STD_LOGIC_VECTOR (32 downto 0);
        IFMCH_curr_load : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce0 : OUT STD_LOGIC;
        acc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_full_n : IN STD_LOGIC;
        connect_6_write : OUT STD_LOGIC;
        mul_ln138 : IN STD_LOGIC_VECTOR (62 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IFMCH_curr_load : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_3_ce1 : OUT STD_LOGIC;
        buf_3_we1 : OUT STD_LOGIC;
        buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (1 downto 0);
        acc_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        acc_ce1 : OUT STD_LOGIC;
        acc_we1 : OUT STD_LOGIC;
        acc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_mul_31ns_32ns_63_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component LeNet_wrapper_mul_32ns_31ns_63_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component LeNet_wrapper_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_s_buf_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_pool_2u_50u_8u_s_acc_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_U : component LeNet_wrapper_pool_2u_50u_8u_s_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_address0,
        ce0 => buf_ce0,
        q0 => buf_q0,
        address1 => buf_address1,
        ce1 => buf_ce1,
        we1 => buf_we1,
        d1 => buf_d1);

    buf_1_U : component LeNet_wrapper_pool_2u_50u_8u_s_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_address0,
        ce0 => buf_1_ce0,
        q0 => buf_1_q0,
        address1 => buf_1_address1,
        ce1 => buf_1_ce1,
        we1 => buf_1_we1,
        d1 => buf_1_d1);

    buf_2_U : component LeNet_wrapper_pool_2u_50u_8u_s_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_address0,
        ce0 => buf_2_ce0,
        q0 => buf_2_q0,
        address1 => buf_2_address1,
        ce1 => buf_2_ce1,
        we1 => buf_2_we1,
        d1 => buf_2_d1);

    buf_3_U : component LeNet_wrapper_pool_2u_50u_8u_s_buf_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_address0,
        ce0 => buf_3_ce0,
        q0 => buf_3_q0,
        address1 => buf_3_address1,
        ce1 => buf_3_ce1,
        we1 => buf_3_we1,
        d1 => buf_3_d1);

    acc_U : component LeNet_wrapper_pool_2u_50u_8u_s_acc_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address0,
        ce0 => acc_ce0,
        q0 => acc_q0,
        address1 => acc_address1,
        ce1 => acc_ce1,
        we1 => acc_we1,
        d1 => acc_d1,
        q1 => acc_q1);

    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652 : component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start,
        ap_done => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done,
        ap_idle => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_idle,
        ap_ready => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_ready,
        buf_3_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_address1,
        buf_3_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_ce1,
        buf_3_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_we1,
        buf_3_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_d1,
        buf_2_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_address1,
        buf_2_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_ce1,
        buf_2_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_we1,
        buf_2_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_d1,
        buf_1_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_address1,
        buf_1_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_ce1,
        buf_1_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_we1,
        buf_1_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_d1,
        buf_r_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_address1,
        buf_r_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_ce1,
        buf_r_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_we1,
        buf_r_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_d1);

    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660 : component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start,
        ap_done => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_done,
        ap_idle => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_idle,
        ap_ready => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_ready,
        connect_5_dout => connect_5_dout,
        connect_5_num_data_valid => ap_const_lv3_0,
        connect_5_fifo_cap => ap_const_lv3_0,
        connect_5_empty_n => connect_5_empty_n,
        connect_5_read => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_5_read,
        connect_6_din => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_din,
        connect_6_num_data_valid => ap_const_lv7_0,
        connect_6_fifo_cap => ap_const_lv7_0,
        connect_6_full_n => connect_6_full_n,
        connect_6_write => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_write,
        KER_bound => KER_bound_reg_927);

    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669 : component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start,
        ap_done => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done,
        ap_idle => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_idle,
        ap_ready => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_ready,
        connect_5_dout => connect_5_dout,
        connect_5_num_data_valid => ap_const_lv3_0,
        connect_5_fifo_cap => ap_const_lv3_0,
        connect_5_empty_n => connect_5_empty_n,
        connect_5_read => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_connect_5_read,
        zext_ln138 => tmp_2_reg_932,
        IFMCH_curr_load => IFMCH_curr,
        acc_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address0,
        acc_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce0,
        acc_q0 => acc_q0,
        acc_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address1,
        acc_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce1,
        acc_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_we1,
        acc_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_d1);

    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678 : component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start,
        ap_done => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done,
        ap_idle => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_idle,
        ap_ready => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_ready,
        connect_6_din => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_din,
        connect_6_num_data_valid => ap_const_lv7_0,
        connect_6_fifo_cap => ap_const_lv7_0,
        connect_6_full_n => connect_6_full_n,
        connect_6_write => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_write,
        mul_ln138 => mul_ln138_reg_942,
        acc_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_address1,
        acc_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_ce1,
        acc_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_we1,
        acc_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_d1,
        IFMCH_curr_load => IFMCH_curr,
        buf_3_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address0,
        buf_3_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce0,
        buf_3_q0 => buf_3_q0,
        buf_3_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address1,
        buf_3_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce1,
        buf_3_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_we1,
        buf_3_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_d1,
        buf_2_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address0,
        buf_2_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce0,
        buf_2_q0 => buf_2_q0,
        buf_2_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address1,
        buf_2_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce1,
        buf_2_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_we1,
        buf_2_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_d1,
        buf_1_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address0,
        buf_1_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce0,
        buf_1_q0 => buf_1_q0,
        buf_1_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address1,
        buf_1_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce1,
        buf_1_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_we1,
        buf_1_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_d1,
        buf_r_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address0,
        buf_r_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address1,
        buf_r_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce1,
        buf_r_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_we1,
        buf_r_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_d1);

    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691 : component LeNet_wrapper_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start,
        ap_done => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done,
        ap_idle => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_idle,
        ap_ready => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_ready,
        buf_3_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address0,
        buf_3_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce0,
        buf_3_q0 => buf_3_q0,
        buf_3_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address1,
        buf_3_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce1,
        buf_3_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_we1,
        buf_3_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_d1,
        buf_2_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address0,
        buf_2_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce0,
        buf_2_q0 => buf_2_q0,
        buf_2_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address1,
        buf_2_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce1,
        buf_2_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_we1,
        buf_2_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_d1,
        buf_1_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address0,
        buf_1_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce0,
        buf_1_q0 => buf_1_q0,
        buf_1_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address1,
        buf_1_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce1,
        buf_1_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_we1,
        buf_1_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_d1,
        buf_r_address0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address0,
        buf_r_ce0 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address1,
        buf_r_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce1,
        buf_r_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_we1,
        buf_r_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_d1,
        empty => trunc_ln142_reg_968,
        acc_address1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_address1,
        acc_ce1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_ce1,
        acc_we1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_we1,
        acc_d1 => grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_d1,
        acc_q1 => acc_q1);

    mul_31ns_32ns_63_2_1_U334 : component LeNet_wrapper_mul_31ns_32ns_63_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_701_p0,
        din1 => grp_fu_701_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_701_p2);

    mul_32ns_31ns_63_2_1_U335 : component LeNet_wrapper_mul_32ns_31ns_63_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_705_p0,
        din1 => grp_fu_705_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_705_p2);

    mul_32s_32s_32_1_1_U336 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_8_reg_867,
        din1 => valIn_6_reg_856,
        dout => KER_size_0_fu_729_p2);

    mul_32s_32s_32_1_1_U337 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_6_reg_856,
        din1 => KER_size_0_reg_885,
        dout => KER_size_1_fu_771_p2);

    mul_32s_32s_32_1_1_U338 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_7_reg_862,
        din1 => KER_size_1_reg_922,
        dout => KER_bound_fu_775_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_ignore_call5))) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_ready = ap_const_logic_1)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln141_fu_807_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_ready = ap_const_logic_1)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_ready = ap_const_logic_1)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln141_fu_807_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_ready = ap_const_logic_1)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_ready = ap_const_logic_1)) then 
                    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten20_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln137_reg_881 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                indvar_flatten20_fu_202 <= ap_const_lv63_0;
            elsif (((icmp_ln141_fu_807_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                indvar_flatten20_fu_202 <= add_ln139_reg_955;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
                indvar_flatten6_reg_630 <= add_ln141_reg_963;
            elsif (((icmp_ln139_fu_796_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                indvar_flatten6_reg_630 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    xp_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
                xp_reg_641 <= add_ln142_reg_973;
            elsif (((icmp_ln139_fu_796_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                xp_reg_641 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_709_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                IFMCH_curr <= valIn_8_reg_867;
                IFMDim_curr <= valIn_9_reg_873;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                KER_bound_reg_927 <= KER_bound_fu_775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                KER_size_0_reg_885 <= KER_size_0_fu_729_p2;
                trunc_ln_reg_897 <= IFMDim_curr(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                KER_size_1_reg_922 <= KER_size_1_fu_771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                add_ln139_reg_955 <= add_ln139_fu_801_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                add_ln141_reg_963 <= add_ln141_fu_812_p2;
                add_ln142_reg_973 <= add_ln142_fu_835_p2;
                trunc_ln142_reg_968 <= trunc_ln142_fu_831_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                icmp_ln137_reg_881 <= icmp_ln137_fu_724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                mul_ln138_1_reg_947 <= grp_fu_705_p2;
                mul_ln138_reg_942 <= grp_fu_701_p2;
                    tmp_2_reg_932(32 downto 1) <= tmp_2_fu_779_p3(32 downto 1);
                    tmp_4_reg_937(31 downto 1) <= tmp_4_fu_786_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                valIn_4_reg_845 <= connect_5_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                valIn_5_reg_851 <= connect_5_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                valIn_6_reg_856 <= connect_5_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                valIn_7_reg_862 <= connect_5_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                valIn_8_reg_867 <= connect_5_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                valIn_9_reg_873 <= connect_5_dout;
            end if;
        end if;
    end process;
    tmp_2_reg_932(0) <= '0';
    tmp_4_reg_937(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, icmp_ln137_reg_881, ap_block_state8, ap_CS_fsm_state57, ap_CS_fsm_state63, ap_CS_fsm_state64, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done, icmp_ln139_fu_796_p2, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state61, icmp_ln141_fu_807_p2, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_block_state5, ap_block_state61_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((icmp_ln137_reg_881 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                if (((icmp_ln139_fu_796_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state64 => 
                if (((icmp_ln141_fu_807_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                if (((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    acc_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state57, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_address1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            acc_address1 <= ap_const_lv64_31(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            acc_address1 <= ap_const_lv64_30(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            acc_address1 <= ap_const_lv64_2F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            acc_address1 <= ap_const_lv64_2E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            acc_address1 <= ap_const_lv64_2D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            acc_address1 <= ap_const_lv64_2C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            acc_address1 <= ap_const_lv64_2B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            acc_address1 <= ap_const_lv64_2A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            acc_address1 <= ap_const_lv64_29(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            acc_address1 <= ap_const_lv64_28(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            acc_address1 <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            acc_address1 <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            acc_address1 <= ap_const_lv64_25(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            acc_address1 <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            acc_address1 <= ap_const_lv64_23(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            acc_address1 <= ap_const_lv64_22(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            acc_address1 <= ap_const_lv64_21(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            acc_address1 <= ap_const_lv64_20(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            acc_address1 <= ap_const_lv64_1F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            acc_address1 <= ap_const_lv64_1E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            acc_address1 <= ap_const_lv64_1D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            acc_address1 <= ap_const_lv64_1C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            acc_address1 <= ap_const_lv64_1B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            acc_address1 <= ap_const_lv64_1A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            acc_address1 <= ap_const_lv64_19(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            acc_address1 <= ap_const_lv64_18(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            acc_address1 <= ap_const_lv64_17(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            acc_address1 <= ap_const_lv64_16(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            acc_address1 <= ap_const_lv64_15(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            acc_address1 <= ap_const_lv64_14(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            acc_address1 <= ap_const_lv64_13(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            acc_address1 <= ap_const_lv64_12(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            acc_address1 <= ap_const_lv64_11(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            acc_address1 <= ap_const_lv64_10(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            acc_address1 <= ap_const_lv64_F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            acc_address1 <= ap_const_lv64_E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            acc_address1 <= ap_const_lv64_D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            acc_address1 <= ap_const_lv64_C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            acc_address1 <= ap_const_lv64_B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            acc_address1 <= ap_const_lv64_A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            acc_address1 <= ap_const_lv64_9(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            acc_address1 <= ap_const_lv64_8(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            acc_address1 <= ap_const_lv64_7(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            acc_address1 <= ap_const_lv64_6(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            acc_address1 <= ap_const_lv64_5(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            acc_address1 <= ap_const_lv64_4(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            acc_address1 <= ap_const_lv64_3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            acc_address1 <= ap_const_lv64_2(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            acc_address1 <= ap_const_lv64_1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            acc_address1 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            acc_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            acc_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_address1;
        else 
            acc_address1 <= "XXXXXX";
        end if; 
    end process;


    acc_ce0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce0, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce0;
        else 
            acc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc_ce1_assign_proc : process(ap_CS_fsm_state8, ap_block_state8, ap_CS_fsm_state57, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_ce1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 
    = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state57) or ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            acc_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            acc_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            acc_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_ce1;
        else 
            acc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    acc_d1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state57, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_d1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 
    = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state57) 
    or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            acc_d1 <= ap_const_lv32_FFF0BDC1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            acc_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            acc_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_d1;
        else 
            acc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    acc_we1_assign_proc : process(ap_CS_fsm_state8, ap_block_state8, ap_CS_fsm_state57, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_we1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 
    = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state57) or ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            acc_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            acc_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_acc_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            acc_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_acc_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            acc_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_acc_we1;
        else 
            acc_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln139_fu_801_p2 <= std_logic_vector(unsigned(indvar_flatten20_fu_202) + unsigned(ap_const_lv63_1));
    add_ln141_fu_812_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_630) + unsigned(ap_const_lv32_1));
    add_ln142_fu_835_p2 <= std_logic_vector(unsigned(select_ln141_fu_823_p3) + unsigned(ap_const_lv31_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4)
    begin
        if ((ap_const_boolean_1 = ap_block_state4)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5)
    begin
        if ((ap_const_boolean_1 = ap_block_state5)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state60_blk <= ap_const_logic_0;

    ap_ST_fsm_state61_blk_assign_proc : process(ap_block_state61_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state61_on_subcall_done)) then 
            ap_ST_fsm_state61_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state61_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;

    ap_ST_fsm_state65_blk_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done)
    begin
        if ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state65_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state65_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state66_blk <= ap_const_logic_0;

    ap_ST_fsm_state67_blk_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done)
    begin
        if ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state67_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state67_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state68_blk_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done)
    begin
        if ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state68_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state68_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7)
    begin
        if ((ap_const_boolean_1 = ap_block_state7)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8)
    begin
        if ((ap_const_boolean_1 = ap_block_state8)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done)
    begin
        if ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state2 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state3 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state4 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state5 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state6 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state61_on_subcall_done_assign_proc : process(icmp_ln137_reg_881, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_done)
    begin
                ap_block_state61_on_subcall_done <= ((grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_done = ap_const_logic_0) and (icmp_ln137_reg_881 = ap_const_lv1_0));
    end process;


    ap_block_state7_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state7 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state8 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_ignore_call5_assign_proc : process(connect_5_empty_n, connect_6_full_n)
    begin
                ap_block_state8_ignore_call5 <= ((connect_6_full_n = ap_const_logic_0) or (connect_5_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state61, ap_block_state61_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    buf_1_address0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address0;
        else 
            buf_1_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_1_address1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_1_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_address1;
        else 
            buf_1_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_1_ce0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce0;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_1_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_ce1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_d1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_d1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_1_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_d1;
        else 
            buf_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_1_we1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_we1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_1_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_1_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_1_we1;
        else 
            buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_address0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address0;
        else 
            buf_2_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_2_address1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_2_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_address1;
        else 
            buf_2_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_2_ce0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce0;
        else 
            buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_ce1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_2_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_ce1;
        else 
            buf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_d1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_d1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_2_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_d1;
        else 
            buf_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_2_we1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_we1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_2_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_2_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_2_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_2_we1;
        else 
            buf_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_address0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address0;
        else 
            buf_3_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_3_address1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_3_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_address1;
        else 
            buf_3_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_3_ce0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce0;
        else 
            buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_ce1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_3_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_ce1;
        else 
            buf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_d1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_d1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_3_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_d1;
        else 
            buf_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_3_we1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_we1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_3_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_3_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_3_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_3_we1;
        else 
            buf_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_address0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_address0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address0;
        else 
            buf_address0 <= "XXXXXX";
        end if; 
    end process;


    buf_address1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_address1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_address1;
        else 
            buf_address1 <= "XXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce0, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce0, ap_CS_fsm_state67, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_ce0 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce0;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_ce1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_ce1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_d1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_d1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_d1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_d1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_d1;
        else 
            buf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_we1_assign_proc : process(grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_we1, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_we1, ap_CS_fsm_state67, ap_CS_fsm_state9, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_buf_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            buf_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_buf_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_we1 <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_buf_r_we1;
        else 
            buf_we1 <= ap_const_logic_0;
        end if; 
    end process;


    connect_5_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_5_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_5_blk_n <= connect_5_empty_n;
        else 
            connect_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_5_read_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, icmp_ln137_reg_881, ap_block_state8, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_5_read, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_connect_5_read, ap_CS_fsm_state61, ap_CS_fsm_state65, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_5_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            connect_5_read <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_connect_5_read;
        elsif (((icmp_ln137_reg_881 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            connect_5_read <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_5_read;
        else 
            connect_5_read <= ap_const_logic_0;
        end if; 
    end process;


    connect_6_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_6_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_6_blk_n <= connect_6_full_n;
        else 
            connect_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_6_din_assign_proc : process(ap_CS_fsm_state1, connect_5_dout, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, icmp_ln137_reg_881, ap_block_state8, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_din, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_din, ap_CS_fsm_state61, ap_CS_fsm_state68, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_6_din <= connect_5_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            connect_6_din <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_din;
        elsif (((icmp_ln137_reg_881 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            connect_6_din <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_din;
        else 
            connect_6_din <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_din;
        end if; 
    end process;


    connect_6_write_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, icmp_ln137_reg_881, ap_block_state8, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_write, grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_write, ap_CS_fsm_state61, ap_CS_fsm_state68, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_6_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            connect_6_write <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_connect_6_write;
        elsif (((icmp_ln137_reg_881 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            connect_6_write <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_connect_6_write;
        else 
            connect_6_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_701_p0 <= zext_ln138_fu_751_p1(31 - 1 downto 0);
    grp_fu_701_p1 <= grp_fu_701_p10(32 - 1 downto 0);
    grp_fu_701_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(IFMCH_curr),63));
    grp_fu_705_p0 <= grp_fu_705_p00(32 - 1 downto 0);
    grp_fu_705_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(valIn_5_reg_851),63));
    grp_fu_705_p1 <= zext_ln138_fu_751_p1(31 - 1 downto 0);
    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_123_1_fu_652_ap_start_reg;
    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_144_8_VITIS_LOOP_145_9_fu_669_ap_start_reg;
    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_153_10_fu_691_ap_start_reg;
    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_167_11_VITIS_LOOP_168_12_fu_678_ap_start_reg;
    grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start <= grp_pool_2u_50u_8u_Pipeline_VITIS_LOOP_194_13_fu_660_ap_start_reg;
    icmp_ln109_fu_709_p2 <= "1" when (valIn_4_reg_845 = ap_const_lv32_2) else "0";
    icmp_ln137_fu_724_p2 <= "1" when (valIn_4_reg_845 = ap_const_lv32_0) else "0";
    icmp_ln139_fu_796_p2 <= "1" when (indvar_flatten20_fu_202 = mul_ln138_1_reg_947) else "0";
    icmp_ln141_fu_807_p2 <= "1" when (indvar_flatten6_reg_630 = tmp_4_reg_937) else "0";
    icmp_ln142_fu_818_p2 <= "1" when (xp_reg_641 = trunc_ln_reg_897) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state61, ap_block_state61_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln141_fu_823_p3 <= 
        ap_const_lv31_0 when (icmp_ln142_fu_818_p2(0) = '1') else 
        xp_reg_641;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_779_p3 <= (IFMCH_curr & ap_const_lv1_0);
    tmp_4_fu_786_p3 <= (trunc_ln_reg_897 & ap_const_lv1_0);
    trunc_ln142_fu_831_p1 <= select_ln141_fu_823_p3(2 - 1 downto 0);
    trunc_ln_fu_737_p4 <= IFMDim_curr(31 downto 1);
    zext_ln138_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_737_p4),63));
end behav;
