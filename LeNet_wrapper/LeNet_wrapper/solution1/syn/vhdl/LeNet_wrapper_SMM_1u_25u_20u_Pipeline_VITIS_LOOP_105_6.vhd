-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_SMM_1u_25u_20u_Pipeline_VITIS_LOOP_105_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    connect_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_1_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_1_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_1_empty_n : IN STD_LOGIC;
    connect_1_read : OUT STD_LOGIC;
    B_ROW_5_load : IN STD_LOGIC_VECTOR (31 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of LeNet_wrapper_SMM_1u_25u_20u_Pipeline_VITIS_LOOP_105_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv10_25 : STD_LOGIC_VECTOR (9 downto 0) := "0000100101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln108_reg_387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln105_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal connect_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln105_fu_273_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln105_reg_383 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln108_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln105_2_fu_332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_urem_fu_86 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal select_ln105_fu_295_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_phi_urem_load : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul_fu_90 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln105_3_fu_316_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_2_fu_94 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln105_fu_263_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln110_fu_343_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln105_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln105_4_fu_283_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln105_2_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_322_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_230 : BOOLEAN;
    signal ap_condition_235 : BOOLEAN;
    signal ap_condition_115 : BOOLEAN;
    signal ap_condition_325 : BOOLEAN;
    signal ap_condition_328 : BOOLEAN;
    signal ap_condition_331 : BOOLEAN;
    signal ap_condition_334 : BOOLEAN;
    signal ap_condition_337 : BOOLEAN;
    signal ap_condition_340 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component LeNet_wrapper_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    j_2_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln105_fu_257_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_2_fu_94 <= add_ln105_fu_263_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_2_fu_94 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_mul_fu_90 <= ap_const_lv10_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    phi_mul_fu_90 <= add_ln105_3_fu_316_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_urem_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln105_fu_257_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    phi_urem_fu_86 <= select_ln105_fu_295_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    phi_urem_fu_86 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln108_reg_387 <= icmp_ln108_fu_277_p2;
                trunc_ln105_reg_383 <= trunc_ln105_fu_273_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln105_3_fu_316_p2 <= std_logic_vector(unsigned(phi_mul_fu_90) + unsigned(ap_const_lv10_25));
    add_ln105_4_fu_283_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_urem_load) + unsigned(ap_const_lv5_1));
    add_ln105_fu_263_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(connect_1_empty_n, icmp_ln108_reg_387)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((icmp_ln108_reg_387 = ap_const_lv1_1) and (connect_1_empty_n = ap_const_logic_0));
    end process;


    ap_condition_115_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_115 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_230_assign_proc : process(icmp_ln108_reg_387, trunc_ln105_reg_383)
    begin
                ap_condition_230 <= (((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_7)));
    end process;


    ap_condition_235_assign_proc : process(icmp_ln108_reg_387, trunc_ln105_reg_383)
    begin
                ap_condition_235 <= (((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_7)));
    end process;


    ap_condition_325_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_325 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_5));
    end process;


    ap_condition_328_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_328 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_4));
    end process;


    ap_condition_331_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_331 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_3));
    end process;


    ap_condition_334_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_334 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_2));
    end process;


    ap_condition_337_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_337 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_1));
    end process;


    ap_condition_340_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, trunc_ln105_reg_383)
    begin
                ap_condition_340 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln105_fu_257_p2)
    begin
        if (((icmp_ln105_fu_257_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_2_fu_94)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j <= j_2_fu_94;
        end if; 
    end process;


    ap_sig_allocacmp_phi_urem_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, phi_urem_fu_86, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_phi_urem_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_phi_urem_load <= phi_urem_fu_86;
        end if; 
    end process;


    connect_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, connect_1_empty_n, icmp_ln108_reg_387, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connect_1_blk_n <= connect_1_empty_n;
        else 
            connect_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connect_1_read <= ap_const_logic_1;
        else 
            connect_1_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln105_2_fu_289_p2 <= "1" when (unsigned(add_ln105_4_fu_283_p2) < unsigned(ap_const_lv5_7)) else "0";
    icmp_ln105_fu_257_p2 <= "1" when (ap_sig_allocacmp_j = ap_const_lv5_19) else "0";
    icmp_ln108_fu_277_p2 <= "1" when (unsigned(zext_ln105_fu_269_p1) < unsigned(B_ROW_5_load)) else "0";
    select_ln105_fu_295_p3 <= 
        add_ln105_4_fu_283_p2 when (icmp_ln105_2_fu_289_p2(0) = '1') else 
        ap_const_lv5_0;
    tmp_fu_322_p4 <= phi_mul_fu_90(9 downto 8);
    trunc_ln105_fu_273_p1 <= ap_sig_allocacmp_phi_urem_load(3 - 1 downto 0);
    trunc_ln110_fu_343_p1 <= connect_1_dout(8 - 1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_7)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_7)))))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1_assign_proc : process(trunc_ln110_fu_343_p1, ap_condition_230, ap_condition_235, ap_condition_115)
    begin
        if ((ap_const_boolean_1 = ap_condition_115)) then
            if ((ap_const_boolean_1 = ap_condition_235)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 <= trunc_ln110_fu_343_p1;
            elsif ((ap_const_boolean_1 = ap_condition_230)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_1) and (trunc_ln105_reg_383 = ap_const_lv3_7)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_6)) or ((icmp_ln108_reg_387 = ap_const_lv1_0) and (trunc_ln105_reg_383 = ap_const_lv3_7)))))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_325)
    begin
        if ((ap_const_boolean_1 = ap_condition_325)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_328)
    begin
        if ((ap_const_boolean_1 = ap_condition_328)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_331)
    begin
        if ((ap_const_boolean_1 = ap_condition_331)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_334)
    begin
        if ((ap_const_boolean_1 = ap_condition_334)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_337)
    begin
        if ((ap_const_boolean_1 = ap_condition_337)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address1 <= zext_ln105_2_fu_332_p1(2 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1_assign_proc : process(icmp_ln108_reg_387, trunc_ln110_fu_343_p1, ap_condition_340)
    begin
        if ((ap_const_boolean_1 = ap_condition_340)) then
            if ((icmp_ln108_reg_387 = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1 <= trunc_ln110_fu_343_p1;
            elsif ((icmp_ln108_reg_387 = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1 <= ap_const_lv8_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln108_reg_387, trunc_ln105_reg_383, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln105_reg_383 = ap_const_lv3_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln105_2_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_322_p4),64));
    zext_ln105_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j),32));
end behav;
