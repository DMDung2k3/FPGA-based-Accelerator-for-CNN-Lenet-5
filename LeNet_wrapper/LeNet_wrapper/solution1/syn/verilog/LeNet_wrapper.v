// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="LeNet_wrapper_LeNet_wrapper,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=12.592000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=316,HLS_SYN_DSP=0,HLS_SYN_FF=17608,HLS_SYN_LUT=61952,HLS_VERSION=2023_2}" *)

module LeNet_wrapper (
        in_stream_TDATA,
        out_stream_TDATA,
        ap_clk,
        ap_rst_n,
        in_stream_TVALID,
        in_stream_TREADY,
        out_stream_TVALID,
        out_stream_TREADY
);


input  [63:0] in_stream_TDATA;
output  [63:0] out_stream_TDATA;
input   ap_clk;
input   ap_rst_n;
input   in_stream_TVALID;
output   in_stream_TREADY;
output   out_stream_TVALID;
input   out_stream_TREADY;

 reg    ap_rst_n_inv;
wire    AXI_DMA_SLAVE_U0_ap_start;
wire    AXI_DMA_SLAVE_U0_ap_done;
wire    AXI_DMA_SLAVE_U0_ap_continue;
wire    AXI_DMA_SLAVE_U0_ap_idle;
wire    AXI_DMA_SLAVE_U0_ap_ready;
wire    AXI_DMA_SLAVE_U0_start_out;
wire    AXI_DMA_SLAVE_U0_start_write;
wire    AXI_DMA_SLAVE_U0_in_stream_TREADY;
wire   [31:0] AXI_DMA_SLAVE_U0_connect_0_din;
wire    AXI_DMA_SLAVE_U0_connect_0_write;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_ap_start;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_ap_done;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_ap_continue;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_ap_idle;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_ap_ready;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_start_out;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_start_write;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_connect_0_read;
wire   [31:0] SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_din;
wire    SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_write;
wire    SMM_1u_25u_20u_U0_ap_start;
wire    SMM_1u_25u_20u_U0_ap_done;
wire    SMM_1u_25u_20u_U0_ap_continue;
wire    SMM_1u_25u_20u_U0_ap_idle;
wire    SMM_1u_25u_20u_U0_ap_ready;
wire    SMM_1u_25u_20u_U0_start_out;
wire    SMM_1u_25u_20u_U0_start_write;
wire    SMM_1u_25u_20u_U0_connect_1_read;
wire   [31:0] SMM_1u_25u_20u_U0_connect_2_din;
wire    SMM_1u_25u_20u_U0_connect_2_write;
wire    pool_2u_20u_24u_U0_ap_start;
wire    pool_2u_20u_24u_U0_ap_done;
wire    pool_2u_20u_24u_U0_ap_continue;
wire    pool_2u_20u_24u_U0_ap_idle;
wire    pool_2u_20u_24u_U0_ap_ready;
wire    pool_2u_20u_24u_U0_start_out;
wire    pool_2u_20u_24u_U0_start_write;
wire    pool_2u_20u_24u_U0_connect_2_read;
wire   [31:0] pool_2u_20u_24u_U0_connect_3_din;
wire    pool_2u_20u_24u_U0_connect_3_write;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_ap_start;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_ap_done;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_ap_continue;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_ap_idle;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_ap_ready;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_start_out;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_start_write;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_connect_3_read;
wire   [31:0] SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_din;
wire    SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_write;
wire    SMM_1u_500u_50u_U0_ap_start;
wire    SMM_1u_500u_50u_U0_ap_done;
wire    SMM_1u_500u_50u_U0_ap_continue;
wire    SMM_1u_500u_50u_U0_ap_idle;
wire    SMM_1u_500u_50u_U0_ap_ready;
wire    SMM_1u_500u_50u_U0_start_out;
wire    SMM_1u_500u_50u_U0_start_write;
wire    SMM_1u_500u_50u_U0_connect_4_read;
wire   [31:0] SMM_1u_500u_50u_U0_connect_5_din;
wire    SMM_1u_500u_50u_U0_connect_5_write;
wire    pool_2u_50u_8u_U0_ap_start;
wire    pool_2u_50u_8u_U0_ap_done;
wire    pool_2u_50u_8u_U0_ap_continue;
wire    pool_2u_50u_8u_U0_ap_idle;
wire    pool_2u_50u_8u_U0_ap_ready;
wire    pool_2u_50u_8u_U0_start_out;
wire    pool_2u_50u_8u_U0_start_write;
wire    pool_2u_50u_8u_U0_connect_5_read;
wire   [31:0] pool_2u_50u_8u_U0_connect_6_din;
wire    pool_2u_50u_8u_U0_connect_6_write;
wire    FC_1u_800u_500u_U0_ap_start;
wire    FC_1u_800u_500u_U0_ap_done;
wire    FC_1u_800u_500u_U0_ap_continue;
wire    FC_1u_800u_500u_U0_ap_idle;
wire    FC_1u_800u_500u_U0_ap_ready;
wire    FC_1u_800u_500u_U0_start_out;
wire    FC_1u_800u_500u_U0_start_write;
wire    FC_1u_800u_500u_U0_connect_6_read;
wire   [31:0] FC_1u_800u_500u_U0_connect_7_din;
wire    FC_1u_800u_500u_U0_connect_7_write;
wire    FC_1u_500u_10u_U0_ap_start;
wire    FC_1u_500u_10u_U0_ap_done;
wire    FC_1u_500u_10u_U0_ap_continue;
wire    FC_1u_500u_10u_U0_ap_idle;
wire    FC_1u_500u_10u_U0_ap_ready;
wire    FC_1u_500u_10u_U0_start_out;
wire    FC_1u_500u_10u_U0_start_write;
wire    FC_1u_500u_10u_U0_connect_7_read;
wire   [31:0] FC_1u_500u_10u_U0_connect_8_din;
wire    FC_1u_500u_10u_U0_connect_8_write;
wire    AXI_DMA_MASTER_U0_ap_start;
wire    AXI_DMA_MASTER_U0_ap_done;
wire    AXI_DMA_MASTER_U0_ap_continue;
wire    AXI_DMA_MASTER_U0_ap_idle;
wire    AXI_DMA_MASTER_U0_ap_ready;
wire    AXI_DMA_MASTER_U0_connect_8_read;
wire   [63:0] AXI_DMA_MASTER_U0_out_stream_TDATA;
wire    AXI_DMA_MASTER_U0_out_stream_TVALID;
wire    connect_0_full_n;
wire   [31:0] connect_0_dout;
wire   [6:0] connect_0_num_data_valid;
wire   [6:0] connect_0_fifo_cap;
wire    connect_0_empty_n;
wire    connect_1_full_n;
wire   [31:0] connect_1_dout;
wire   [6:0] connect_1_num_data_valid;
wire   [6:0] connect_1_fifo_cap;
wire    connect_1_empty_n;
wire    connect_2_full_n;
wire   [31:0] connect_2_dout;
wire   [2:0] connect_2_num_data_valid;
wire   [2:0] connect_2_fifo_cap;
wire    connect_2_empty_n;
wire    connect_3_full_n;
wire   [31:0] connect_3_dout;
wire   [6:0] connect_3_num_data_valid;
wire   [6:0] connect_3_fifo_cap;
wire    connect_3_empty_n;
wire    connect_4_full_n;
wire   [31:0] connect_4_dout;
wire   [6:0] connect_4_num_data_valid;
wire   [6:0] connect_4_fifo_cap;
wire    connect_4_empty_n;
wire    connect_5_full_n;
wire   [31:0] connect_5_dout;
wire   [2:0] connect_5_num_data_valid;
wire   [2:0] connect_5_fifo_cap;
wire    connect_5_empty_n;
wire    connect_6_full_n;
wire   [31:0] connect_6_dout;
wire   [6:0] connect_6_num_data_valid;
wire   [6:0] connect_6_fifo_cap;
wire    connect_6_empty_n;
wire    connect_7_full_n;
wire   [31:0] connect_7_dout;
wire   [6:0] connect_7_num_data_valid;
wire   [6:0] connect_7_fifo_cap;
wire    connect_7_empty_n;
wire    connect_8_full_n;
wire   [31:0] connect_8_dout;
wire   [6:0] connect_8_num_data_valid;
wire   [6:0] connect_8_fifo_cap;
wire    connect_8_empty_n;
wire   [0:0] start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_din;
wire    start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_full_n;
wire   [0:0] start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_dout;
wire    start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_empty_n;
wire   [0:0] start_for_SMM_1u_25u_20u_U0_din;
wire    start_for_SMM_1u_25u_20u_U0_full_n;
wire   [0:0] start_for_SMM_1u_25u_20u_U0_dout;
wire    start_for_SMM_1u_25u_20u_U0_empty_n;
wire   [0:0] start_for_pool_2u_20u_24u_U0_din;
wire    start_for_pool_2u_20u_24u_U0_full_n;
wire   [0:0] start_for_pool_2u_20u_24u_U0_dout;
wire    start_for_pool_2u_20u_24u_U0_empty_n;
wire   [0:0] start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_din;
wire    start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_full_n;
wire   [0:0] start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_dout;
wire    start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_empty_n;
wire   [0:0] start_for_SMM_1u_500u_50u_U0_din;
wire    start_for_SMM_1u_500u_50u_U0_full_n;
wire   [0:0] start_for_SMM_1u_500u_50u_U0_dout;
wire    start_for_SMM_1u_500u_50u_U0_empty_n;
wire   [0:0] start_for_pool_2u_50u_8u_U0_din;
wire    start_for_pool_2u_50u_8u_U0_full_n;
wire   [0:0] start_for_pool_2u_50u_8u_U0_dout;
wire    start_for_pool_2u_50u_8u_U0_empty_n;
wire   [0:0] start_for_FC_1u_800u_500u_U0_din;
wire    start_for_FC_1u_800u_500u_U0_full_n;
wire   [0:0] start_for_FC_1u_800u_500u_U0_dout;
wire    start_for_FC_1u_800u_500u_U0_empty_n;
wire   [0:0] start_for_FC_1u_500u_10u_U0_din;
wire    start_for_FC_1u_500u_10u_U0_full_n;
wire   [0:0] start_for_FC_1u_500u_10u_U0_dout;
wire    start_for_FC_1u_500u_10u_U0_empty_n;
wire   [0:0] start_for_AXI_DMA_MASTER_U0_din;
wire    start_for_AXI_DMA_MASTER_U0_full_n;
wire   [0:0] start_for_AXI_DMA_MASTER_U0_dout;
wire    start_for_AXI_DMA_MASTER_U0_empty_n;

LeNet_wrapper_AXI_DMA_SLAVE AXI_DMA_SLAVE_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXI_DMA_SLAVE_U0_ap_start),
    .start_full_n(start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_full_n),
    .ap_done(AXI_DMA_SLAVE_U0_ap_done),
    .ap_continue(AXI_DMA_SLAVE_U0_ap_continue),
    .ap_idle(AXI_DMA_SLAVE_U0_ap_idle),
    .ap_ready(AXI_DMA_SLAVE_U0_ap_ready),
    .start_out(AXI_DMA_SLAVE_U0_start_out),
    .start_write(AXI_DMA_SLAVE_U0_start_write),
    .in_stream_TDATA(in_stream_TDATA),
    .in_stream_TVALID(in_stream_TVALID),
    .in_stream_TREADY(AXI_DMA_SLAVE_U0_in_stream_TREADY),
    .connect_0_din(AXI_DMA_SLAVE_U0_connect_0_din),
    .connect_0_num_data_valid(connect_0_num_data_valid),
    .connect_0_fifo_cap(connect_0_fifo_cap),
    .connect_0_full_n(connect_0_full_n),
    .connect_0_write(AXI_DMA_SLAVE_U0_connect_0_write)
);

LeNet_wrapper_SCIG_5u_1u_28u_20u_24u_0u_s SCIG_5u_1u_28u_20u_24u_0u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_start),
    .start_full_n(start_for_SMM_1u_25u_20u_U0_full_n),
    .ap_done(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_done),
    .ap_continue(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_continue),
    .ap_idle(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_idle),
    .ap_ready(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_ready),
    .start_out(SCIG_5u_1u_28u_20u_24u_0u_U0_start_out),
    .start_write(SCIG_5u_1u_28u_20u_24u_0u_U0_start_write),
    .connect_0_dout(connect_0_dout),
    .connect_0_num_data_valid(connect_0_num_data_valid),
    .connect_0_fifo_cap(connect_0_fifo_cap),
    .connect_0_empty_n(connect_0_empty_n),
    .connect_0_read(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_0_read),
    .connect_1_din(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_din),
    .connect_1_num_data_valid(connect_1_num_data_valid),
    .connect_1_fifo_cap(connect_1_fifo_cap),
    .connect_1_full_n(connect_1_full_n),
    .connect_1_write(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_write)
);

LeNet_wrapper_SMM_1u_25u_20u_s SMM_1u_25u_20u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(SMM_1u_25u_20u_U0_ap_start),
    .start_full_n(start_for_pool_2u_20u_24u_U0_full_n),
    .ap_done(SMM_1u_25u_20u_U0_ap_done),
    .ap_continue(SMM_1u_25u_20u_U0_ap_continue),
    .ap_idle(SMM_1u_25u_20u_U0_ap_idle),
    .ap_ready(SMM_1u_25u_20u_U0_ap_ready),
    .start_out(SMM_1u_25u_20u_U0_start_out),
    .start_write(SMM_1u_25u_20u_U0_start_write),
    .connect_1_dout(connect_1_dout),
    .connect_1_num_data_valid(connect_1_num_data_valid),
    .connect_1_fifo_cap(connect_1_fifo_cap),
    .connect_1_empty_n(connect_1_empty_n),
    .connect_1_read(SMM_1u_25u_20u_U0_connect_1_read),
    .connect_2_din(SMM_1u_25u_20u_U0_connect_2_din),
    .connect_2_num_data_valid(connect_2_num_data_valid),
    .connect_2_fifo_cap(connect_2_fifo_cap),
    .connect_2_full_n(connect_2_full_n),
    .connect_2_write(SMM_1u_25u_20u_U0_connect_2_write)
);

LeNet_wrapper_pool_2u_20u_24u_s pool_2u_20u_24u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(pool_2u_20u_24u_U0_ap_start),
    .start_full_n(start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_full_n),
    .ap_done(pool_2u_20u_24u_U0_ap_done),
    .ap_continue(pool_2u_20u_24u_U0_ap_continue),
    .ap_idle(pool_2u_20u_24u_U0_ap_idle),
    .ap_ready(pool_2u_20u_24u_U0_ap_ready),
    .start_out(pool_2u_20u_24u_U0_start_out),
    .start_write(pool_2u_20u_24u_U0_start_write),
    .connect_2_dout(connect_2_dout),
    .connect_2_num_data_valid(connect_2_num_data_valid),
    .connect_2_fifo_cap(connect_2_fifo_cap),
    .connect_2_empty_n(connect_2_empty_n),
    .connect_2_read(pool_2u_20u_24u_U0_connect_2_read),
    .connect_3_din(pool_2u_20u_24u_U0_connect_3_din),
    .connect_3_num_data_valid(connect_3_num_data_valid),
    .connect_3_fifo_cap(connect_3_fifo_cap),
    .connect_3_full_n(connect_3_full_n),
    .connect_3_write(pool_2u_20u_24u_U0_connect_3_write)
);

LeNet_wrapper_SCIG_5u_20u_12u_50u_8u_0u_s SCIG_5u_20u_12u_50u_8u_0u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_start),
    .start_full_n(start_for_SMM_1u_500u_50u_U0_full_n),
    .ap_done(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_done),
    .ap_continue(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_continue),
    .ap_idle(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_idle),
    .ap_ready(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_ready),
    .start_out(SCIG_5u_20u_12u_50u_8u_0u_U0_start_out),
    .start_write(SCIG_5u_20u_12u_50u_8u_0u_U0_start_write),
    .connect_3_dout(connect_3_dout),
    .connect_3_num_data_valid(connect_3_num_data_valid),
    .connect_3_fifo_cap(connect_3_fifo_cap),
    .connect_3_empty_n(connect_3_empty_n),
    .connect_3_read(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_3_read),
    .connect_4_din(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_din),
    .connect_4_num_data_valid(connect_4_num_data_valid),
    .connect_4_fifo_cap(connect_4_fifo_cap),
    .connect_4_full_n(connect_4_full_n),
    .connect_4_write(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_write)
);

LeNet_wrapper_SMM_1u_500u_50u_s SMM_1u_500u_50u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(SMM_1u_500u_50u_U0_ap_start),
    .start_full_n(start_for_pool_2u_50u_8u_U0_full_n),
    .ap_done(SMM_1u_500u_50u_U0_ap_done),
    .ap_continue(SMM_1u_500u_50u_U0_ap_continue),
    .ap_idle(SMM_1u_500u_50u_U0_ap_idle),
    .ap_ready(SMM_1u_500u_50u_U0_ap_ready),
    .start_out(SMM_1u_500u_50u_U0_start_out),
    .start_write(SMM_1u_500u_50u_U0_start_write),
    .connect_4_dout(connect_4_dout),
    .connect_4_num_data_valid(connect_4_num_data_valid),
    .connect_4_fifo_cap(connect_4_fifo_cap),
    .connect_4_empty_n(connect_4_empty_n),
    .connect_4_read(SMM_1u_500u_50u_U0_connect_4_read),
    .connect_5_din(SMM_1u_500u_50u_U0_connect_5_din),
    .connect_5_num_data_valid(connect_5_num_data_valid),
    .connect_5_fifo_cap(connect_5_fifo_cap),
    .connect_5_full_n(connect_5_full_n),
    .connect_5_write(SMM_1u_500u_50u_U0_connect_5_write)
);

LeNet_wrapper_pool_2u_50u_8u_s pool_2u_50u_8u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(pool_2u_50u_8u_U0_ap_start),
    .start_full_n(start_for_FC_1u_800u_500u_U0_full_n),
    .ap_done(pool_2u_50u_8u_U0_ap_done),
    .ap_continue(pool_2u_50u_8u_U0_ap_continue),
    .ap_idle(pool_2u_50u_8u_U0_ap_idle),
    .ap_ready(pool_2u_50u_8u_U0_ap_ready),
    .start_out(pool_2u_50u_8u_U0_start_out),
    .start_write(pool_2u_50u_8u_U0_start_write),
    .connect_5_dout(connect_5_dout),
    .connect_5_num_data_valid(connect_5_num_data_valid),
    .connect_5_fifo_cap(connect_5_fifo_cap),
    .connect_5_empty_n(connect_5_empty_n),
    .connect_5_read(pool_2u_50u_8u_U0_connect_5_read),
    .connect_6_din(pool_2u_50u_8u_U0_connect_6_din),
    .connect_6_num_data_valid(connect_6_num_data_valid),
    .connect_6_fifo_cap(connect_6_fifo_cap),
    .connect_6_full_n(connect_6_full_n),
    .connect_6_write(pool_2u_50u_8u_U0_connect_6_write)
);

LeNet_wrapper_FC_1u_800u_500u_s FC_1u_800u_500u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FC_1u_800u_500u_U0_ap_start),
    .start_full_n(start_for_FC_1u_500u_10u_U0_full_n),
    .ap_done(FC_1u_800u_500u_U0_ap_done),
    .ap_continue(FC_1u_800u_500u_U0_ap_continue),
    .ap_idle(FC_1u_800u_500u_U0_ap_idle),
    .ap_ready(FC_1u_800u_500u_U0_ap_ready),
    .start_out(FC_1u_800u_500u_U0_start_out),
    .start_write(FC_1u_800u_500u_U0_start_write),
    .connect_6_dout(connect_6_dout),
    .connect_6_num_data_valid(connect_6_num_data_valid),
    .connect_6_fifo_cap(connect_6_fifo_cap),
    .connect_6_empty_n(connect_6_empty_n),
    .connect_6_read(FC_1u_800u_500u_U0_connect_6_read),
    .connect_7_din(FC_1u_800u_500u_U0_connect_7_din),
    .connect_7_num_data_valid(connect_7_num_data_valid),
    .connect_7_fifo_cap(connect_7_fifo_cap),
    .connect_7_full_n(connect_7_full_n),
    .connect_7_write(FC_1u_800u_500u_U0_connect_7_write)
);

LeNet_wrapper_FC_1u_500u_10u_s FC_1u_500u_10u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FC_1u_500u_10u_U0_ap_start),
    .start_full_n(start_for_AXI_DMA_MASTER_U0_full_n),
    .ap_done(FC_1u_500u_10u_U0_ap_done),
    .ap_continue(FC_1u_500u_10u_U0_ap_continue),
    .ap_idle(FC_1u_500u_10u_U0_ap_idle),
    .ap_ready(FC_1u_500u_10u_U0_ap_ready),
    .start_out(FC_1u_500u_10u_U0_start_out),
    .start_write(FC_1u_500u_10u_U0_start_write),
    .connect_7_dout(connect_7_dout),
    .connect_7_num_data_valid(connect_7_num_data_valid),
    .connect_7_fifo_cap(connect_7_fifo_cap),
    .connect_7_empty_n(connect_7_empty_n),
    .connect_7_read(FC_1u_500u_10u_U0_connect_7_read),
    .connect_8_din(FC_1u_500u_10u_U0_connect_8_din),
    .connect_8_num_data_valid(connect_8_num_data_valid),
    .connect_8_fifo_cap(connect_8_fifo_cap),
    .connect_8_full_n(connect_8_full_n),
    .connect_8_write(FC_1u_500u_10u_U0_connect_8_write)
);

LeNet_wrapper_AXI_DMA_MASTER AXI_DMA_MASTER_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXI_DMA_MASTER_U0_ap_start),
    .ap_done(AXI_DMA_MASTER_U0_ap_done),
    .ap_continue(AXI_DMA_MASTER_U0_ap_continue),
    .ap_idle(AXI_DMA_MASTER_U0_ap_idle),
    .ap_ready(AXI_DMA_MASTER_U0_ap_ready),
    .connect_8_dout(connect_8_dout),
    .connect_8_num_data_valid(connect_8_num_data_valid),
    .connect_8_fifo_cap(connect_8_fifo_cap),
    .connect_8_empty_n(connect_8_empty_n),
    .connect_8_read(AXI_DMA_MASTER_U0_connect_8_read),
    .out_stream_TDATA(AXI_DMA_MASTER_U0_out_stream_TDATA),
    .out_stream_TVALID(AXI_DMA_MASTER_U0_out_stream_TVALID),
    .out_stream_TREADY(out_stream_TREADY)
);

LeNet_wrapper_fifo_w32_d50_A connect_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXI_DMA_SLAVE_U0_connect_0_din),
    .if_full_n(connect_0_full_n),
    .if_write(AXI_DMA_SLAVE_U0_connect_0_write),
    .if_dout(connect_0_dout),
    .if_num_data_valid(connect_0_num_data_valid),
    .if_fifo_cap(connect_0_fifo_cap),
    .if_empty_n(connect_0_empty_n),
    .if_read(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_0_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_din),
    .if_full_n(connect_1_full_n),
    .if_write(SCIG_5u_1u_28u_20u_24u_0u_U0_connect_1_write),
    .if_dout(connect_1_dout),
    .if_num_data_valid(connect_1_num_data_valid),
    .if_fifo_cap(connect_1_fifo_cap),
    .if_empty_n(connect_1_empty_n),
    .if_read(SMM_1u_25u_20u_U0_connect_1_read)
);

LeNet_wrapper_fifo_w32_d2_S connect_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(SMM_1u_25u_20u_U0_connect_2_din),
    .if_full_n(connect_2_full_n),
    .if_write(SMM_1u_25u_20u_U0_connect_2_write),
    .if_dout(connect_2_dout),
    .if_num_data_valid(connect_2_num_data_valid),
    .if_fifo_cap(connect_2_fifo_cap),
    .if_empty_n(connect_2_empty_n),
    .if_read(pool_2u_20u_24u_U0_connect_2_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pool_2u_20u_24u_U0_connect_3_din),
    .if_full_n(connect_3_full_n),
    .if_write(pool_2u_20u_24u_U0_connect_3_write),
    .if_dout(connect_3_dout),
    .if_num_data_valid(connect_3_num_data_valid),
    .if_fifo_cap(connect_3_fifo_cap),
    .if_empty_n(connect_3_empty_n),
    .if_read(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_3_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_din),
    .if_full_n(connect_4_full_n),
    .if_write(SCIG_5u_20u_12u_50u_8u_0u_U0_connect_4_write),
    .if_dout(connect_4_dout),
    .if_num_data_valid(connect_4_num_data_valid),
    .if_fifo_cap(connect_4_fifo_cap),
    .if_empty_n(connect_4_empty_n),
    .if_read(SMM_1u_500u_50u_U0_connect_4_read)
);

LeNet_wrapper_fifo_w32_d2_S connect_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(SMM_1u_500u_50u_U0_connect_5_din),
    .if_full_n(connect_5_full_n),
    .if_write(SMM_1u_500u_50u_U0_connect_5_write),
    .if_dout(connect_5_dout),
    .if_num_data_valid(connect_5_num_data_valid),
    .if_fifo_cap(connect_5_fifo_cap),
    .if_empty_n(connect_5_empty_n),
    .if_read(pool_2u_50u_8u_U0_connect_5_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pool_2u_50u_8u_U0_connect_6_din),
    .if_full_n(connect_6_full_n),
    .if_write(pool_2u_50u_8u_U0_connect_6_write),
    .if_dout(connect_6_dout),
    .if_num_data_valid(connect_6_num_data_valid),
    .if_fifo_cap(connect_6_fifo_cap),
    .if_empty_n(connect_6_empty_n),
    .if_read(FC_1u_800u_500u_U0_connect_6_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FC_1u_800u_500u_U0_connect_7_din),
    .if_full_n(connect_7_full_n),
    .if_write(FC_1u_800u_500u_U0_connect_7_write),
    .if_dout(connect_7_dout),
    .if_num_data_valid(connect_7_num_data_valid),
    .if_fifo_cap(connect_7_fifo_cap),
    .if_empty_n(connect_7_empty_n),
    .if_read(FC_1u_500u_10u_U0_connect_7_read)
);

LeNet_wrapper_fifo_w32_d50_A connect_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FC_1u_500u_10u_U0_connect_8_din),
    .if_full_n(connect_8_full_n),
    .if_write(FC_1u_500u_10u_U0_connect_8_write),
    .if_dout(connect_8_dout),
    .if_num_data_valid(connect_8_num_data_valid),
    .if_fifo_cap(connect_8_fifo_cap),
    .if_empty_n(connect_8_empty_n),
    .if_read(AXI_DMA_MASTER_U0_connect_8_read)
);

LeNet_wrapper_start_for_SCIG_5u_1u_28u_20u_24u_0u_U0 start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_din),
    .if_full_n(start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_full_n),
    .if_write(AXI_DMA_SLAVE_U0_start_write),
    .if_dout(start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_dout),
    .if_empty_n(start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_empty_n),
    .if_read(SCIG_5u_1u_28u_20u_24u_0u_U0_ap_ready)
);

LeNet_wrapper_start_for_SMM_1u_25u_20u_U0 start_for_SMM_1u_25u_20u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_SMM_1u_25u_20u_U0_din),
    .if_full_n(start_for_SMM_1u_25u_20u_U0_full_n),
    .if_write(SCIG_5u_1u_28u_20u_24u_0u_U0_start_write),
    .if_dout(start_for_SMM_1u_25u_20u_U0_dout),
    .if_empty_n(start_for_SMM_1u_25u_20u_U0_empty_n),
    .if_read(SMM_1u_25u_20u_U0_ap_ready)
);

LeNet_wrapper_start_for_pool_2u_20u_24u_U0 start_for_pool_2u_20u_24u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_pool_2u_20u_24u_U0_din),
    .if_full_n(start_for_pool_2u_20u_24u_U0_full_n),
    .if_write(SMM_1u_25u_20u_U0_start_write),
    .if_dout(start_for_pool_2u_20u_24u_U0_dout),
    .if_empty_n(start_for_pool_2u_20u_24u_U0_empty_n),
    .if_read(pool_2u_20u_24u_U0_ap_ready)
);

LeNet_wrapper_start_for_SCIG_5u_20u_12u_50u_8u_0u_U0 start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_din),
    .if_full_n(start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_full_n),
    .if_write(pool_2u_20u_24u_U0_start_write),
    .if_dout(start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_dout),
    .if_empty_n(start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_empty_n),
    .if_read(SCIG_5u_20u_12u_50u_8u_0u_U0_ap_ready)
);

LeNet_wrapper_start_for_SMM_1u_500u_50u_U0 start_for_SMM_1u_500u_50u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_SMM_1u_500u_50u_U0_din),
    .if_full_n(start_for_SMM_1u_500u_50u_U0_full_n),
    .if_write(SCIG_5u_20u_12u_50u_8u_0u_U0_start_write),
    .if_dout(start_for_SMM_1u_500u_50u_U0_dout),
    .if_empty_n(start_for_SMM_1u_500u_50u_U0_empty_n),
    .if_read(SMM_1u_500u_50u_U0_ap_ready)
);

LeNet_wrapper_start_for_pool_2u_50u_8u_U0 start_for_pool_2u_50u_8u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_pool_2u_50u_8u_U0_din),
    .if_full_n(start_for_pool_2u_50u_8u_U0_full_n),
    .if_write(SMM_1u_500u_50u_U0_start_write),
    .if_dout(start_for_pool_2u_50u_8u_U0_dout),
    .if_empty_n(start_for_pool_2u_50u_8u_U0_empty_n),
    .if_read(pool_2u_50u_8u_U0_ap_ready)
);

LeNet_wrapper_start_for_FC_1u_800u_500u_U0 start_for_FC_1u_800u_500u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FC_1u_800u_500u_U0_din),
    .if_full_n(start_for_FC_1u_800u_500u_U0_full_n),
    .if_write(pool_2u_50u_8u_U0_start_write),
    .if_dout(start_for_FC_1u_800u_500u_U0_dout),
    .if_empty_n(start_for_FC_1u_800u_500u_U0_empty_n),
    .if_read(FC_1u_800u_500u_U0_ap_ready)
);

LeNet_wrapper_start_for_FC_1u_500u_10u_U0 start_for_FC_1u_500u_10u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FC_1u_500u_10u_U0_din),
    .if_full_n(start_for_FC_1u_500u_10u_U0_full_n),
    .if_write(FC_1u_800u_500u_U0_start_write),
    .if_dout(start_for_FC_1u_500u_10u_U0_dout),
    .if_empty_n(start_for_FC_1u_500u_10u_U0_empty_n),
    .if_read(FC_1u_500u_10u_U0_ap_ready)
);

LeNet_wrapper_start_for_AXI_DMA_MASTER_U0 start_for_AXI_DMA_MASTER_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_AXI_DMA_MASTER_U0_din),
    .if_full_n(start_for_AXI_DMA_MASTER_U0_full_n),
    .if_write(FC_1u_500u_10u_U0_start_write),
    .if_dout(start_for_AXI_DMA_MASTER_U0_dout),
    .if_empty_n(start_for_AXI_DMA_MASTER_U0_empty_n),
    .if_read(AXI_DMA_MASTER_U0_ap_ready)
);

assign AXI_DMA_MASTER_U0_ap_continue = 1'b1;

assign AXI_DMA_MASTER_U0_ap_start = start_for_AXI_DMA_MASTER_U0_empty_n;

assign AXI_DMA_SLAVE_U0_ap_continue = 1'b1;

assign AXI_DMA_SLAVE_U0_ap_start = 1'b1;

assign FC_1u_500u_10u_U0_ap_continue = 1'b1;

assign FC_1u_500u_10u_U0_ap_start = start_for_FC_1u_500u_10u_U0_empty_n;

assign FC_1u_800u_500u_U0_ap_continue = 1'b1;

assign FC_1u_800u_500u_U0_ap_start = start_for_FC_1u_800u_500u_U0_empty_n;

assign SCIG_5u_1u_28u_20u_24u_0u_U0_ap_continue = 1'b1;

assign SCIG_5u_1u_28u_20u_24u_0u_U0_ap_start = start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_empty_n;

assign SCIG_5u_20u_12u_50u_8u_0u_U0_ap_continue = 1'b1;

assign SCIG_5u_20u_12u_50u_8u_0u_U0_ap_start = start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_empty_n;

assign SMM_1u_25u_20u_U0_ap_continue = 1'b1;

assign SMM_1u_25u_20u_U0_ap_start = start_for_SMM_1u_25u_20u_U0_empty_n;

assign SMM_1u_500u_50u_U0_ap_continue = 1'b1;

assign SMM_1u_500u_50u_U0_ap_start = start_for_SMM_1u_500u_50u_U0_empty_n;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign in_stream_TREADY = AXI_DMA_SLAVE_U0_in_stream_TREADY;

assign out_stream_TDATA = AXI_DMA_MASTER_U0_out_stream_TDATA;

assign out_stream_TVALID = AXI_DMA_MASTER_U0_out_stream_TVALID;

assign pool_2u_20u_24u_U0_ap_continue = 1'b1;

assign pool_2u_20u_24u_U0_ap_start = start_for_pool_2u_20u_24u_U0_empty_n;

assign pool_2u_50u_8u_U0_ap_continue = 1'b1;

assign pool_2u_50u_8u_U0_ap_start = start_for_pool_2u_50u_8u_U0_empty_n;

assign start_for_AXI_DMA_MASTER_U0_din = 1'b1;

assign start_for_FC_1u_500u_10u_U0_din = 1'b1;

assign start_for_FC_1u_800u_500u_U0_din = 1'b1;

assign start_for_SCIG_5u_1u_28u_20u_24u_0u_U0_din = 1'b1;

assign start_for_SCIG_5u_20u_12u_50u_8u_0u_U0_din = 1'b1;

assign start_for_SMM_1u_25u_20u_U0_din = 1'b1;

assign start_for_SMM_1u_500u_50u_U0_din = 1'b1;

assign start_for_pool_2u_20u_24u_U0_din = 1'b1;

assign start_for_pool_2u_50u_8u_U0_din = 1'b1;

endmodule //LeNet_wrapper
