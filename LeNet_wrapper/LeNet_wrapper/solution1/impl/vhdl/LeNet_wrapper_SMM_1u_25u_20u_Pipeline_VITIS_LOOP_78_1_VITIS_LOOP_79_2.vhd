-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_SMM_1u_25u_20u_Pipeline_VITIS_LOOP_78_1_VITIS_LOOP_79_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    connect_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_1_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_1_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_1_empty_n : IN STD_LOGIC;
    connect_1_read : OUT STD_LOGIC;
    connect_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_2_full_n : IN STD_LOGIC;
    connect_2_write : OUT STD_LOGIC;
    valIn_a_29 : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln75_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of LeNet_wrapper_SMM_1u_25u_20u_Pipeline_VITIS_LOOP_78_1_VITIS_LOOP_79_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv11_25 : STD_LOGIC_VECTOR (10 downto 0) := "00000100101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal or_ln82_reg_509 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln78_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal connect_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal connect_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln79_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_484 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln78_fu_305_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_494 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln82_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln84_fu_407_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln84_reg_504_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln82_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_509_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln79_fu_429_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln79_reg_513 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln84_3_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_102 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln79_fu_349_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (4 downto 0);
    signal i_6_fu_106 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal select_ln78_2_fu_374_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_110 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal add_ln78_2_fu_290_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln84_fu_443_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln79_fu_321_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln79_fu_321_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln79_fu_321_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_337_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln79_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln78_fu_368_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln78_fu_389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ult_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_381_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln84_fu_404_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln82_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_337_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln79_fu_321_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_318 : BOOLEAN;
    signal ap_condition_323 : BOOLEAN;
    signal ap_condition_477 : BOOLEAN;
    signal ap_condition_480 : BOOLEAN;
    signal ap_condition_483 : BOOLEAN;
    signal ap_condition_486 : BOOLEAN;
    signal ap_condition_489 : BOOLEAN;
    signal ap_condition_492 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component LeNet_wrapper_urem_5ns_4ns_3_9_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component LeNet_wrapper_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_5ns_7ns_11_1_1_U87 : component LeNet_wrapper_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln79_fu_321_p0,
        din1 => mul_ln79_fu_321_p1,
        dout => mul_ln79_fu_321_p2);

    urem_5ns_4ns_3_9_1_U88 : component LeNet_wrapper_urem_5ns_4ns_3_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln78_fu_305_p3,
        din1 => grp_fu_337_p1,
        ce => grp_fu_337_ce,
        dout => grp_fu_337_p2);

    flow_control_loop_pipe_sequential_init_U : component LeNet_wrapper_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_6_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_6_fu_106 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    i_6_fu_106 <= select_ln78_2_fu_374_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln78_fu_284_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_110 <= add_ln78_2_fu_290_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_110 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln78_fu_284_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_102 <= add_ln79_fu_349_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_102 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln84_reg_504 <= add_ln84_fu_407_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln79_reg_484 <= icmp_ln79_fu_299_p2;
                icmp_ln82_reg_499 <= icmp_ln82_fu_343_p2;
                or_ln82_reg_509 <= or_ln82_fu_418_p2;
                tmp_reg_494 <= mul_ln79_fu_321_p2(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln84_reg_504_pp0_iter2_reg <= add_ln84_reg_504;
                add_ln84_reg_504_pp0_iter3_reg <= add_ln84_reg_504_pp0_iter2_reg;
                add_ln84_reg_504_pp0_iter4_reg <= add_ln84_reg_504_pp0_iter3_reg;
                add_ln84_reg_504_pp0_iter5_reg <= add_ln84_reg_504_pp0_iter4_reg;
                add_ln84_reg_504_pp0_iter6_reg <= add_ln84_reg_504_pp0_iter5_reg;
                add_ln84_reg_504_pp0_iter7_reg <= add_ln84_reg_504_pp0_iter6_reg;
                add_ln84_reg_504_pp0_iter8_reg <= add_ln84_reg_504_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                or_ln82_reg_509_pp0_iter2_reg <= or_ln82_reg_509;
                or_ln82_reg_509_pp0_iter3_reg <= or_ln82_reg_509_pp0_iter2_reg;
                or_ln82_reg_509_pp0_iter4_reg <= or_ln82_reg_509_pp0_iter3_reg;
                or_ln82_reg_509_pp0_iter5_reg <= or_ln82_reg_509_pp0_iter4_reg;
                or_ln82_reg_509_pp0_iter6_reg <= or_ln82_reg_509_pp0_iter5_reg;
                or_ln82_reg_509_pp0_iter7_reg <= or_ln82_reg_509_pp0_iter6_reg;
                or_ln82_reg_509_pp0_iter8_reg <= or_ln82_reg_509_pp0_iter7_reg;
                trunc_ln79_reg_513 <= trunc_ln79_fu_429_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln78_2_fu_290_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv9_1));
    add_ln78_fu_368_p2 <= std_logic_vector(unsigned(i_6_fu_106) + unsigned(ap_const_lv5_1));
    add_ln79_fu_349_p2 <= std_logic_vector(unsigned(select_ln78_fu_305_p3) + unsigned(ap_const_lv5_1));
    add_ln84_fu_407_p2 <= std_logic_vector(unsigned(tmp_9_fu_381_p3) + unsigned(zext_ln84_fu_404_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_state10_pp0_stage0_iter9)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter9));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(connect_1_empty_n, or_ln82_reg_509_pp0_iter8_reg, connect_2_full_n)
    begin
                ap_block_state10_pp0_stage0_iter9 <= (((connect_2_full_n = ap_const_logic_0) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (connect_1_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_318_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln79_reg_513)
    begin
                ap_condition_318 <= (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_7)));
    end process;


    ap_condition_323_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln79_reg_513)
    begin
                ap_condition_323 <= (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_7)));
    end process;


    ap_condition_477_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_477 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_5));
    end process;


    ap_condition_480_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_480 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_4));
    end process;


    ap_condition_483_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_483 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_3));
    end process;


    ap_condition_486_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_486 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_2));
    end process;


    ap_condition_489_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_489 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_1));
    end process;


    ap_condition_492_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln79_reg_513)
    begin
                ap_condition_492 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln78_fu_284_p2)
    begin
        if (((icmp_ln78_fu_284_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_110)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_102, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_102;
        end if; 
    end process;


    connect_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter9, connect_1_empty_n, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            connect_1_blk_n <= connect_1_empty_n;
        else 
            connect_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_1_read_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            connect_1_read <= ap_const_logic_1;
        else 
            connect_1_read <= ap_const_logic_0;
        end if; 
    end process;


    connect_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, connect_2_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            connect_2_blk_n <= connect_2_full_n;
        else 
            connect_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    connect_2_din <= connect_1_dout;

    connect_2_write_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            connect_2_write <= ap_const_logic_1;
        else 
            connect_2_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_337_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_337_ce <= ap_const_logic_1;
        else 
            grp_fu_337_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_337_p1 <= ap_const_lv5_7(4 - 1 downto 0);
    icmp_ln78_fu_284_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv9_1F4) else "0";
    icmp_ln79_fu_299_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv5_19) else "0";
    icmp_ln82_fu_343_p2 <= "1" when (unsigned(zext_ln79_fu_313_p1) < unsigned(mul_ln75_2)) else "0";
    mul_ln79_fu_321_p0 <= mul_ln79_fu_321_p00(5 - 1 downto 0);
    mul_ln79_fu_321_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_fu_305_p3),11));
    mul_ln79_fu_321_p1 <= ap_const_lv11_25(7 - 1 downto 0);
    or_ln82_fu_418_p2 <= (xor_ln82_fu_413_p2 or rev_fu_398_p2);
    rev_fu_398_p2 <= (ult_fu_393_p2 xor ap_const_lv1_1);
    select_ln78_2_fu_374_p3 <= 
        add_ln78_fu_368_p2 when (icmp_ln79_reg_484(0) = '1') else 
        i_6_fu_106;
    select_ln78_fu_305_p3 <= 
        ap_const_lv5_0 when (icmp_ln79_fu_299_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    tmp_9_fu_381_p3 <= (select_ln78_2_fu_374_p3 & ap_const_lv2_0);
    trunc_ln79_fu_429_p1 <= grp_fu_337_p2(3 - 1 downto 0);
    trunc_ln84_fu_443_p1 <= connect_1_dout(8 - 1 downto 0);
    ult_fu_393_p2 <= "1" when (unsigned(zext_ln78_fu_389_p1) < unsigned(valIn_a_29)) else "0";
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_7)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_7)))))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, trunc_ln84_fu_443_p1, ap_condition_318, ap_condition_323)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_323)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 <= ap_const_lv8_0;
            elsif ((ap_const_boolean_1 = ap_condition_318)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (trunc_ln79_reg_513 = ap_const_lv3_7)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_6)) or ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (trunc_ln79_reg_513 = ap_const_lv3_7)))))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_477)
    begin
        if ((ap_const_boolean_1 = ap_condition_477)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_480)
    begin
        if ((ap_const_boolean_1 = ap_condition_480)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_483)
    begin
        if ((ap_const_boolean_1 = ap_condition_483)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_486)
    begin
        if ((ap_const_boolean_1 = ap_condition_486)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_489)
    begin
        if ((ap_const_boolean_1 = ap_condition_489)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address1 <= zext_ln84_3_fu_433_p1(7 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1_assign_proc : process(or_ln82_reg_509_pp0_iter8_reg, trunc_ln84_fu_443_p1, ap_condition_492)
    begin
        if ((ap_const_boolean_1 = ap_condition_492)) then
            if ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1 <= trunc_ln84_fu_443_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_we1_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln82_reg_509_pp0_iter8_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_513)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_509_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln79_reg_513 = ap_const_lv3_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln82_fu_413_p2 <= (icmp_ln82_reg_499 xor ap_const_lv1_1);
    zext_ln78_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_2_fu_374_p3),32));
    zext_ln79_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_fu_305_p3),32));
    zext_ln84_3_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln84_reg_504_pp0_iter8_reg),64));
    zext_ln84_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_494),7));
end behav;
