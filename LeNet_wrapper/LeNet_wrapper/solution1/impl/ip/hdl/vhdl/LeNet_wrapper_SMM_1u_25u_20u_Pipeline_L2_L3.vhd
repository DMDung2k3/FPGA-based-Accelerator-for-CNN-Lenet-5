-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_SMM_1u_25u_20u_Pipeline_L2_L3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    connect_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_2_full_n : IN STD_LOGIC;
    connect_2_write : OUT STD_LOGIC;
    bound4 : IN STD_LOGIC_VECTOR (33 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce0 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of LeNet_wrapper_SMM_1u_25u_20u_Pipeline_L2_L3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv11_25 : STD_LOGIC_VECTOR (10 downto 0) := "00000100101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv9_13 : STD_LOGIC_VECTOR (8 downto 0) := "000010011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln124_2_reg_1506 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln121_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal connect_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_591 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln124_reg_1474 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln124_reg_1474_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_595 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_599 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln124_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_1455_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln121_fu_655_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln121_reg_1460 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln127_fu_671_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln127_reg_1466 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln124_fu_675_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln124_reg_1474_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln123_fu_683_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln123_reg_1490 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln123_fu_697_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln123_reg_1495 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_27_reg_1500 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln124_2_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_2_reg_1506_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln127_10_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_10_reg_1510 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_11_fu_791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_11_reg_1542 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_13_fu_832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_13_reg_1578 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_15_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_15_reg_1614 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_26_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_26_reg_1646 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln127_13_fu_935_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln127_13_reg_1686 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_941_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_1706 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_1706_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_964_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1721 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1721_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1721_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_987_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_1736 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1010_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_1756 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_1756_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1033_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1766 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1766_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1766_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1063_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_1791 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1086_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1796 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1109_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_reg_1801 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_reg_1801_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1162_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_1816 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1185_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_1821 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_1821_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1384_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1392_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln127_9_fu_1288_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln127_9_reg_1876 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_reg_1881 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln130_5_reg_1886 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln130_6_reg_1891 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln127_8_fu_774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_5_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_6_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_7_fu_923_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_29_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_fu_136 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal sum_2_fu_1307_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ic_fu_140 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln124_fu_723_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ib_fu_144 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln121_4_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten6_fu_148 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    signal add_ln121_2_fu_631_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln121_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln124_fu_679_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln127_16_cast_fu_689_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln127_14_fu_707_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln127_14_fu_707_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln127_14_fu_707_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_750_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln127_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_782_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln127_12_cast_fu_762_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln127_12_fu_801_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln127_12_fu_801_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln127_12_fu_801_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_fu_807_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_825_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln127_39_fu_838_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln127_13_fu_845_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln127_13_fu_845_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln127_13_fu_845_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_851_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_869_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln127_25_fu_888_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln127_12_fu_891_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln127_15_fu_907_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln127_15_fu_907_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln127_15_fu_907_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_fu_913_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln127_28_fu_931_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_941_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_964_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_987_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1010_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1033_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1063_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1086_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1109_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1135_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1135_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1162_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1185_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_1211_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_1211_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln127_6_fu_1256_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln127_9_fu_1272_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1400_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1409_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln127_37_fu_1285_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln127_36_fu_1282_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln121_3_fu_1297_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln127_38_fu_1304_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln130_fu_1321_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln130_fu_1352_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln130_fu_1355_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln130_3_fu_1365_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln130_2_fu_1359_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln130_2_fu_1368_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal output_data_fu_1372_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1384_ce : STD_LOGIC;
    signal grp_fu_1392_ce : STD_LOGIC;
    signal grp_fu_1400_ce : STD_LOGIC;
    signal grp_fu_1409_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln127_12_fu_801_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln127_13_fu_845_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln127_14_fu_707_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln127_15_fu_907_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_941_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_941_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_941_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_941_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_964_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_964_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_964_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_964_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_987_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_987_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_987_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_987_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1010_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1010_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1010_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1010_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_1033_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_1033_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_1033_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_1033_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1063_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1063_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1063_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1063_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_1086_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_1086_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_1086_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_1086_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1109_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1109_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1109_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1109_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1135_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1135_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1135_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1135_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_1162_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_1162_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_1162_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_1162_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_1185_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_1185_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_1185_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_1185_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1211_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1211_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1211_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1211_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component LeNet_wrapper_mul_4ns_6ns_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component LeNet_wrapper_sparsemux_9_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component LeNet_wrapper_mul_8s_8s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component LeNet_wrapper_mac_muladd_8s_8s_16s_17_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component LeNet_wrapper_mac_muladd_8s_8s_17s_17_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component LeNet_wrapper_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_5ns_7ns_11_1_1_U40 : component LeNet_wrapper_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln127_14_fu_707_p0,
        din1 => mul_ln127_14_fu_707_p1,
        dout => mul_ln127_14_fu_707_p2);

    mul_4ns_6ns_9_1_1_U41 : component LeNet_wrapper_mul_4ns_6ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        din0 => mul_ln127_12_fu_801_p0,
        din1 => mul_ln127_12_fu_801_p1,
        dout => mul_ln127_12_fu_801_p2);

    mul_4ns_6ns_9_1_1_U42 : component LeNet_wrapper_mul_4ns_6ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        din0 => mul_ln127_13_fu_845_p0,
        din1 => mul_ln127_13_fu_845_p1,
        dout => mul_ln127_13_fu_845_p2);

    mul_5ns_7ns_11_1_1_U43 : component LeNet_wrapper_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln127_15_fu_907_p0,
        din1 => mul_ln127_15_fu_907_p1,
        dout => mul_ln127_15_fu_907_p2);

    sparsemux_9_2_8_1_1_U44 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_q0,
        def => tmp_fu_941_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_fu_941_p11);

    sparsemux_9_2_8_1_1_U45 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "11",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        CASE3 => "10",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0,
        def => tmp_11_fu_964_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_11_fu_964_p11);

    sparsemux_9_2_8_1_1_U46 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0,
        def => tmp_13_fu_987_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_13_fu_987_p11);

    sparsemux_9_2_8_1_1_U47 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "11",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        CASE3 => "01",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0,
        def => tmp_15_fu_1010_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_15_fu_1010_p11);

    sparsemux_9_2_8_1_1_U48 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_q0,
        def => tmp_17_fu_1033_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_17_fu_1033_p11);

    sparsemux_9_2_8_1_1_U49 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "11",
        din2_WIDTH => 8,
        CASE3 => "00",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_q0,
        def => tmp_19_fu_1063_p9,
        sel => trunc_ln124_reg_1474_pp0_iter2_reg,
        dout => tmp_19_fu_1063_p11);

    sparsemux_9_2_8_1_1_U50 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_q0,
        din3 => reg_591,
        def => tmp_s_fu_1086_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_s_fu_1086_p11);

    sparsemux_9_2_8_1_1_U51 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "11",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        CASE3 => "10",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_q0,
        din1 => reg_595,
        din2 => reg_599,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0,
        def => tmp_12_fu_1109_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_12_fu_1109_p11);

    sparsemux_9_2_8_1_1_U52 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_q0,
        din2 => reg_591,
        din3 => reg_595,
        def => tmp_14_fu_1135_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_14_fu_1135_p11);

    sparsemux_9_2_8_1_1_U53 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "11",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        CASE3 => "01",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_q0,
        din2 => reg_599,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0,
        def => tmp_16_fu_1162_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_16_fu_1162_p11);

    sparsemux_9_2_8_1_1_U54 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_q0,
        din1 => reg_591,
        din2 => reg_595,
        din3 => reg_599,
        def => tmp_18_fu_1185_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_18_fu_1185_p11);

    sparsemux_9_2_8_1_1_U55 : component LeNet_wrapper_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "11",
        din2_WIDTH => 8,
        CASE3 => "00",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_q0,
        din1 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_q0,
        din2 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_q0,
        din3 => void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_q0,
        def => tmp_20_fu_1211_p9,
        sel => trunc_ln124_reg_1474_pp0_iter3_reg,
        dout => tmp_20_fu_1211_p11);

    mul_8s_8s_16_1_1_U56 : component LeNet_wrapper_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_12_reg_1801_pp0_iter5_reg,
        din1 => tmp_11_reg_1721_pp0_iter5_reg,
        dout => mul_ln127_6_fu_1256_p2);

    mul_8s_8s_16_1_1_U57 : component LeNet_wrapper_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_18_reg_1821_pp0_iter5_reg,
        din1 => tmp_17_reg_1766_pp0_iter5_reg,
        dout => mul_ln127_9_fu_1272_p2);

    mac_muladd_8s_8s_16s_17_4_1_U58 : component LeNet_wrapper_mac_muladd_8s_8s_16s_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_14_fu_1135_p11,
        din1 => tmp_13_reg_1736,
        din2 => mul_ln127_6_fu_1256_p2,
        ce => grp_fu_1384_ce,
        dout => grp_fu_1384_p3);

    mac_muladd_8s_8s_16s_17_4_1_U59 : component LeNet_wrapper_mac_muladd_8s_8s_16s_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_20_fu_1211_p11,
        din1 => tmp_19_reg_1791,
        din2 => mul_ln127_9_fu_1272_p2,
        ce => grp_fu_1392_ce,
        dout => grp_fu_1392_p3);

    mac_muladd_8s_8s_17s_17_4_1_U60 : component LeNet_wrapper_mac_muladd_8s_8s_17s_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_reg_1796,
        din1 => tmp_reg_1706_pp0_iter4_reg,
        din2 => grp_fu_1384_p3,
        ce => grp_fu_1400_ce,
        dout => grp_fu_1400_p3);

    mac_muladd_8s_8s_17s_17_4_1_U61 : component LeNet_wrapper_mac_muladd_8s_8s_17s_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_16_reg_1816,
        din1 => tmp_15_reg_1756_pp0_iter4_reg,
        din2 => grp_fu_1392_p3,
        ce => grp_fu_1409_ce,
        dout => grp_fu_1409_p3);

    flow_control_loop_pipe_sequential_init_U : component LeNet_wrapper_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ib_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ib_fu_144 <= ap_const_lv32_0;
                elsif (((icmp_ln121_fu_626_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ib_fu_144 <= select_ln121_4_fu_663_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_140 <= ap_const_lv3_0;
                elsif (((icmp_ln121_fu_626_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ic_fu_140 <= add_ln124_fu_723_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten6_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten6_fu_148 <= ap_const_lv34_0;
                elsif (((icmp_ln121_fu_626_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten6_fu_148 <= add_ln121_2_fu_631_p2;
                end if;
            end if; 
        end if;
    end process;

    sum_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    sum_fu_136 <= ap_const_lv20_0;
                elsif ((ap_enable_reg_pp0_iter9 = ap_const_logic_1)) then 
                    sum_fu_136 <= sum_2_fu_1307_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln123_reg_1490 <= add_ln123_fu_683_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln124_2_reg_1506 <= icmp_ln124_2_fu_729_p2;
                icmp_ln124_reg_1455 <= icmp_ln124_fu_649_p2;
                select_ln121_reg_1460 <= select_ln121_fu_655_p3;
                tmp_27_reg_1500 <= mul_ln127_14_fu_707_p2(10 downto 8);
                trunc_ln124_reg_1474 <= trunc_ln124_fu_675_p1;
                trunc_ln127_reg_1466 <= trunc_ln127_fu_671_p1;
                xor_ln123_reg_1495 <= xor_ln123_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln127_13_reg_1686 <= add_ln127_13_fu_935_p2;
                add_ln127_9_reg_1876 <= add_ln127_9_fu_1288_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln124_2_reg_1506_pp0_iter2_reg <= icmp_ln124_2_reg_1506;
                icmp_ln124_2_reg_1506_pp0_iter3_reg <= icmp_ln124_2_reg_1506_pp0_iter2_reg;
                icmp_ln124_2_reg_1506_pp0_iter4_reg <= icmp_ln124_2_reg_1506_pp0_iter3_reg;
                icmp_ln124_2_reg_1506_pp0_iter5_reg <= icmp_ln124_2_reg_1506_pp0_iter4_reg;
                icmp_ln124_2_reg_1506_pp0_iter6_reg <= icmp_ln124_2_reg_1506_pp0_iter5_reg;
                icmp_ln124_2_reg_1506_pp0_iter7_reg <= icmp_ln124_2_reg_1506_pp0_iter6_reg;
                icmp_ln124_2_reg_1506_pp0_iter8_reg <= icmp_ln124_2_reg_1506_pp0_iter7_reg;
                icmp_ln124_2_reg_1506_pp0_iter9_reg <= icmp_ln124_2_reg_1506_pp0_iter8_reg;
                icmp_ln124_reg_1455_pp0_iter2_reg <= icmp_ln124_reg_1455;
                icmp_ln124_reg_1455_pp0_iter3_reg <= icmp_ln124_reg_1455_pp0_iter2_reg;
                icmp_ln124_reg_1455_pp0_iter4_reg <= icmp_ln124_reg_1455_pp0_iter3_reg;
                icmp_ln124_reg_1455_pp0_iter5_reg <= icmp_ln124_reg_1455_pp0_iter4_reg;
                icmp_ln124_reg_1455_pp0_iter6_reg <= icmp_ln124_reg_1455_pp0_iter5_reg;
                icmp_ln124_reg_1455_pp0_iter7_reg <= icmp_ln124_reg_1455_pp0_iter6_reg;
                icmp_ln124_reg_1455_pp0_iter8_reg <= icmp_ln124_reg_1455_pp0_iter7_reg;
                tmp_11_reg_1721 <= tmp_11_fu_964_p11;
                tmp_11_reg_1721_pp0_iter4_reg <= tmp_11_reg_1721;
                tmp_11_reg_1721_pp0_iter5_reg <= tmp_11_reg_1721_pp0_iter4_reg;
                tmp_12_reg_1801 <= tmp_12_fu_1109_p11;
                tmp_12_reg_1801_pp0_iter5_reg <= tmp_12_reg_1801;
                tmp_13_reg_1736 <= tmp_13_fu_987_p11;
                tmp_15_reg_1756 <= tmp_15_fu_1010_p11;
                tmp_15_reg_1756_pp0_iter4_reg <= tmp_15_reg_1756;
                tmp_16_reg_1816 <= tmp_16_fu_1162_p11;
                tmp_17_reg_1766 <= tmp_17_fu_1033_p11;
                tmp_17_reg_1766_pp0_iter4_reg <= tmp_17_reg_1766;
                tmp_17_reg_1766_pp0_iter5_reg <= tmp_17_reg_1766_pp0_iter4_reg;
                tmp_18_reg_1821 <= tmp_18_fu_1185_p11;
                tmp_18_reg_1821_pp0_iter5_reg <= tmp_18_reg_1821;
                tmp_19_reg_1791 <= tmp_19_fu_1063_p11;
                tmp_29_reg_1881 <= sum_2_fu_1307_p2(19 downto 19);
                tmp_reg_1706 <= tmp_fu_941_p11;
                tmp_reg_1706_pp0_iter4_reg <= tmp_reg_1706;
                tmp_s_reg_1796 <= tmp_s_fu_1086_p11;
                trunc_ln124_reg_1474_pp0_iter2_reg <= trunc_ln124_reg_1474;
                trunc_ln124_reg_1474_pp0_iter3_reg <= trunc_ln124_reg_1474_pp0_iter2_reg;
                trunc_ln130_5_reg_1886 <= sub_ln130_fu_1321_p2(19 downto 7);
                trunc_ln130_6_reg_1891 <= sum_2_fu_1307_p2(19 downto 7);
                    zext_ln127_10_reg_1510(6 downto 2) <= zext_ln127_10_fu_757_p1(6 downto 2);
                    zext_ln127_11_reg_1542(0) <= zext_ln127_11_fu_791_p1(0);    zext_ln127_11_reg_1542(6 downto 2) <= zext_ln127_11_fu_791_p1(6 downto 2);
                    zext_ln127_13_reg_1578(6 downto 0) <= zext_ln127_13_fu_832_p1(6 downto 0);
                    zext_ln127_15_reg_1614(6 downto 0) <= zext_ln127_15_fu_876_p1(6 downto 0);
                    zext_ln127_26_reg_1646(6 downto 0) <= zext_ln127_26_fu_897_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then
                reg_591 <= void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then
                reg_595 <= void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then
                reg_599 <= void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_q0;
            end if;
        end if;
    end process;
    zext_ln127_10_reg_1510(1 downto 0) <= "00";
    zext_ln127_10_reg_1510(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln127_11_reg_1542(1) <= '0';
    zext_ln127_11_reg_1542(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln127_13_reg_1578(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln127_15_reg_1614(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln127_26_reg_1646(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln121_2_fu_631_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_148) + unsigned(ap_const_lv34_1));
    add_ln121_fu_643_p2 <= std_logic_vector(unsigned(ib_fu_144) + unsigned(ap_const_lv32_1));
    add_ln123_fu_683_p2 <= std_logic_vector(unsigned(zext_ln124_fu_679_p1) + unsigned(ap_const_lv5_14));
    add_ln124_fu_723_p2 <= std_logic_vector(unsigned(select_ln121_fu_655_p3) + unsigned(ap_const_lv3_1));
    add_ln127_12_fu_891_p2 <= std_logic_vector(unsigned(tmp_21_fu_750_p3) + unsigned(zext_ln127_25_fu_888_p1));
    add_ln127_13_fu_935_p2 <= std_logic_vector(unsigned(tmp_21_fu_750_p3) + unsigned(zext_ln127_28_fu_931_p1));
    add_ln127_9_fu_1288_p2 <= std_logic_vector(signed(sext_ln127_37_fu_1285_p1) + signed(sext_ln127_36_fu_1282_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_state11_pp0_stage0_iter10)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage0_iter10));
    end process;


    ap_block_state11_pp0_stage0_iter10_assign_proc : process(connect_2_full_n, icmp_ln124_2_reg_1506_pp0_iter9_reg)
    begin
                ap_block_state11_pp0_stage0_iter10 <= ((icmp_ln124_2_reg_1506_pp0_iter9_reg = ap_const_lv1_1) and (connect_2_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln121_fu_626_p2)
    begin
        if (((icmp_ln121_fu_626_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    connect_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter10, connect_2_full_n, icmp_ln124_2_reg_1506_pp0_iter9_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln124_2_reg_1506_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            connect_2_blk_n <= connect_2_full_n;
        else 
            connect_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        connect_2_din <= std_logic_vector(IEEE.numeric_std.resize(signed(output_data_fu_1372_p3),32));


    connect_2_write_assign_proc : process(ap_enable_reg_pp0_iter10, icmp_ln124_2_reg_1506_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln124_2_reg_1506_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            connect_2_write <= ap_const_logic_1;
        else 
            connect_2_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1384_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1384_ce <= ap_const_logic_1;
        else 
            grp_fu_1384_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1392_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1392_ce <= ap_const_logic_1;
        else 
            grp_fu_1392_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1400_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1400_ce <= ap_const_logic_1;
        else 
            grp_fu_1400_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1409_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1409_ce <= ap_const_logic_1;
        else 
            grp_fu_1409_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln121_fu_626_p2 <= "1" when (indvar_flatten6_fu_148 = bound4) else "0";
    icmp_ln124_2_fu_729_p2 <= "1" when (add_ln124_fu_723_p2 = ap_const_lv3_4) else "0";
    icmp_ln124_fu_649_p2 <= "1" when (ic_fu_140 = ap_const_lv3_4) else "0";
    icmp_ln127_fu_769_p2 <= "1" when (select_ln121_reg_1460 = ap_const_lv3_3) else "0";
    mul_ln127_12_fu_801_p0 <= mul_ln127_12_fu_801_p00(4 - 1 downto 0);
    mul_ln127_12_fu_801_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln127_12_cast_fu_762_p3),9));
    mul_ln127_12_fu_801_p1 <= ap_const_lv9_13(6 - 1 downto 0);
    mul_ln127_13_fu_845_p0 <= mul_ln127_13_fu_845_p00(4 - 1 downto 0);
    mul_ln127_13_fu_845_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln127_39_fu_838_p1),9));
    mul_ln127_13_fu_845_p1 <= ap_const_lv9_13(6 - 1 downto 0);
    mul_ln127_14_fu_707_p0 <= mul_ln127_14_fu_707_p00(5 - 1 downto 0);
    mul_ln127_14_fu_707_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln127_16_cast_fu_689_p3),11));
    mul_ln127_14_fu_707_p1 <= ap_const_lv11_25(7 - 1 downto 0);
    mul_ln127_15_fu_907_p0 <= mul_ln127_15_fu_907_p00(5 - 1 downto 0);
    mul_ln127_15_fu_907_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_reg_1490),11));
    mul_ln127_15_fu_907_p1 <= ap_const_lv11_25(7 - 1 downto 0);
    output_data_fu_1372_p3 <= 
        sub_ln130_2_fu_1359_p2 when (tmp_29_reg_1881(0) = '1') else 
        zext_ln130_2_fu_1368_p1;
    select_ln121_3_fu_1297_p3 <= 
        ap_const_lv20_0 when (icmp_ln124_reg_1455_pp0_iter8_reg(0) = '1') else 
        sum_fu_136;
    select_ln121_4_fu_663_p3 <= 
        add_ln121_fu_643_p2 when (icmp_ln124_fu_649_p2(0) = '1') else 
        ib_fu_144;
    select_ln121_fu_655_p3 <= 
        ap_const_lv3_0 when (icmp_ln124_fu_649_p2(0) = '1') else 
        ic_fu_140;
        sext_ln127_36_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1400_p3),18));

        sext_ln127_37_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1409_p3),18));

        sext_ln127_38_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln127_9_reg_1876),20));

        sext_ln127_39_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln123_reg_1495),4));

        sext_ln130_3_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln130_6_reg_1891),25));

        sext_ln130_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln130_5_reg_1886),25));

    sub_ln130_2_fu_1359_p2 <= std_logic_vector(unsigned(ap_const_lv26_0) - unsigned(zext_ln130_fu_1355_p1));
    sub_ln130_fu_1321_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(sum_2_fu_1307_p2));
    sum_2_fu_1307_p2 <= std_logic_vector(unsigned(select_ln121_3_fu_1297_p3) + unsigned(sext_ln127_38_fu_1304_p1));
    tmp_11_fu_964_p9 <= "XXXXXXXX";
    tmp_12_fu_1109_p9 <= "XXXXXXXX";
    tmp_13_fu_987_p9 <= "XXXXXXXX";
    tmp_14_fu_1135_p9 <= "XXXXXXXX";
    tmp_15_fu_1010_p9 <= "XXXXXXXX";
    tmp_16_fu_1162_p9 <= "XXXXXXXX";
    tmp_17_fu_1033_p9 <= "XXXXXXXX";
    tmp_18_fu_1185_p9 <= "XXXXXXXX";
    tmp_19_fu_1063_p9 <= "XXXXXXXX";
    tmp_20_fu_1211_p9 <= "XXXXXXXX";
    tmp_21_fu_750_p3 <= (trunc_ln127_reg_1466 & ap_const_lv2_0);
    tmp_22_fu_782_p4 <= ((trunc_ln127_reg_1466 & ap_const_lv1_0) & icmp_ln127_fu_769_p2);
    tmp_23_fu_807_p4 <= mul_ln127_12_fu_801_p2(8 downto 7);
    tmp_24_fu_825_p3 <= (trunc_ln127_reg_1466 & tmp_23_fu_807_p4);
    tmp_25_fu_851_p4 <= mul_ln127_13_fu_845_p2(8 downto 7);
    tmp_26_fu_869_p3 <= (trunc_ln127_reg_1466 & tmp_25_fu_851_p4);
    tmp_28_fu_913_p4 <= mul_ln127_15_fu_907_p2(10 downto 8);
    tmp_fu_941_p9 <= "XXXXXXXX";
    tmp_s_fu_1086_p9 <= "XXXXXXXX";
    trunc_ln124_fu_675_p1 <= select_ln121_fu_655_p3(2 - 1 downto 0);
    trunc_ln127_fu_671_p1 <= select_ln121_4_fu_663_p3(5 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_8_fu_774_p1, zext_ln127_5_fu_861_p1, zext_ln127_7_fu_923_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 <= zext_ln127_7_fu_923_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 <= zext_ln127_5_fu_861_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 <= zext_ln127_8_fu_774_p1(2 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_8_fu_774_p1, zext_ln127_5_fu_861_p1, zext_ln127_6_fu_881_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 <= zext_ln127_6_fu_881_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 <= zext_ln127_5_fu_861_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 <= zext_ln127_8_fu_774_p1(2 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_8_fu_774_p1, zext_ln127_fu_817_p1, zext_ln127_6_fu_881_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 <= zext_ln127_6_fu_881_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 <= zext_ln127_fu_817_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 <= zext_ln127_8_fu_774_p1(2 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_fu_817_p1, zext_ln127_6_fu_881_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 <= zext_ln127_6_fu_881_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 <= zext_ln127_fu_817_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 <= ap_const_lv2_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_fu_817_p1, zext_ln127_6_fu_881_p1, zext_ln127_7_fu_923_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= zext_ln127_7_fu_923_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= zext_ln127_6_fu_881_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= zext_ln127_fu_817_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= ap_const_lv2_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_fu_817_p1, zext_ln127_5_fu_861_p1, zext_ln127_7_fu_923_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= zext_ln127_7_fu_923_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= zext_ln127_5_fu_861_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= zext_ln127_fu_817_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= ap_const_lv2_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_8_fu_774_p1, zext_ln127_5_fu_861_p1, zext_ln127_7_fu_923_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= zext_ln127_7_fu_923_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= zext_ln127_5_fu_861_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= zext_ln127_8_fu_774_p1(2 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= ap_const_lv2_0;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= "XX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_address0 <= "XX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_A_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, trunc_ln124_reg_1474_pp0_iter2_reg, zext_ln127_11_reg_1542, zext_ln127_15_reg_1614, zext_ln127_29_fu_1056_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 <= zext_ln127_29_fu_1056_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 <= zext_ln127_15_reg_1614(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 <= zext_ln127_11_reg_1542(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_11_fu_791_p1, zext_ln127_15_fu_876_p1, zext_ln127_26_fu_897_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 <= zext_ln127_26_fu_897_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 <= zext_ln127_15_fu_876_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 <= zext_ln127_11_fu_791_p1(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_11_fu_791_p1, zext_ln127_13_fu_832_p1, zext_ln127_26_fu_897_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 <= zext_ln127_26_fu_897_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 <= zext_ln127_13_fu_832_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 <= zext_ln127_11_fu_791_p1(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, trunc_ln124_reg_1474, zext_ln127_10_fu_757_p1, zext_ln127_13_fu_832_p1, zext_ln127_26_fu_897_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474 = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 <= zext_ln127_26_fu_897_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 <= zext_ln127_13_fu_832_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474 = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 <= zext_ln127_10_fu_757_p1(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln124_reg_1474 = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, trunc_ln124_reg_1474_pp0_iter2_reg, zext_ln127_10_reg_1510, zext_ln127_13_reg_1578, zext_ln127_26_reg_1646, zext_ln127_29_fu_1056_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= zext_ln127_29_fu_1056_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= zext_ln127_26_reg_1646(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= zext_ln127_13_reg_1578(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= zext_ln127_10_reg_1510(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, trunc_ln124_reg_1474_pp0_iter2_reg, zext_ln127_10_reg_1510, zext_ln127_13_reg_1578, zext_ln127_15_reg_1614, zext_ln127_29_fu_1056_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= zext_ln127_29_fu_1056_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= zext_ln127_15_reg_1614(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= zext_ln127_13_reg_1578(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= zext_ln127_10_reg_1510(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, trunc_ln124_reg_1474_pp0_iter2_reg, zext_ln127_10_reg_1510, zext_ln127_11_reg_1542, zext_ln127_15_reg_1614, zext_ln127_29_fu_1056_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= zext_ln127_29_fu_1056_p1(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= zext_ln127_15_reg_1614(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= zext_ln127_11_reg_1542(7 - 1 downto 0);
            elsif ((trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= zext_ln127_10_reg_1510(7 - 1 downto 0);
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= "XXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_address0 <= "XXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln124_reg_1474_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln124_reg_1474_pp0_iter2_reg = ap_const_lv2_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce0 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln123_fu_697_p2 <= (select_ln121_fu_655_p3 xor ap_const_lv3_4);
    zext_ln124_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln121_fu_655_p3),5));
    zext_ln127_10_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_750_p3),64));
    zext_ln127_11_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_782_p4),64));
    zext_ln127_12_cast_fu_762_p3 <= (ap_const_lv1_1 & select_ln121_reg_1460);
    zext_ln127_13_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_825_p3),64));
    zext_ln127_15_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_869_p3),64));
    zext_ln127_16_cast_fu_689_p3 <= (ap_const_lv2_2 & select_ln121_fu_655_p3);
    zext_ln127_25_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_1500),7));
    zext_ln127_26_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_12_fu_891_p2),64));
    zext_ln127_28_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_913_p4),7));
    zext_ln127_29_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_13_reg_1686),64));
    zext_ln127_5_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_851_p4),64));
    zext_ln127_6_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_1500),64));
    zext_ln127_7_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_913_p4),64));
    zext_ln127_8_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln127_fu_769_p2),64));
    zext_ln127_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_807_p4),64));
    zext_ln130_2_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln130_3_fu_1365_p1),26));
    zext_ln130_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln130_fu_1352_p1),26));
end behav;
