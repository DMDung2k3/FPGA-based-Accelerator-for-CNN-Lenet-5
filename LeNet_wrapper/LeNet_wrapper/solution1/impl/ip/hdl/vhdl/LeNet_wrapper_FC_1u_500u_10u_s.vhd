-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_FC_1u_500u_10u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    connect_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_7_empty_n : IN STD_LOGIC;
    connect_7_read : OUT STD_LOGIC;
    connect_8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_8_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_8_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_8_full_n : IN STD_LOGIC;
    connect_8_write : OUT STD_LOGIC );
end;


architecture behav of LeNet_wrapper_FC_1u_500u_10u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal B_COL_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    signal B_ROW_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110100";
    signal OFMDim_current_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal connect_7_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal connect_8_blk_n : STD_LOGIC;
    signal grp_fu_119_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_127 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal valIn_a_31_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal valIn_a_32_reg_211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal valIn_a_33_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal valIn_a_34_reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal valIn_a_35_reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal valIn_a_36_reg_237 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal KER_size_0_fu_153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_reg_255 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_115_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound4_reg_276 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln73_reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal KER_size_1_fu_199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_1_reg_289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal KER_bound_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_idle : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_idle : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_idle : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_idle : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write : STD_LOGIC;
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_predicate_op77_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal icmp_ln92_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal B_COL_3_load_load_fu_170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_predicate_pred285_state8 : BOOLEAN;
    signal ap_predicate_pred287_state8 : BOOLEAN;
    signal indvar_flatten6_fu_64 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln92_fu_182_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal grp_fu_115_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_119_ce : STD_LOGIC;
    signal grp_fu_123_ce : STD_LOGIC;
    signal ap_block_state21_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_predicate_pred289_state8 : BOOLEAN;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal grp_fu_115_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_115_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_empty_n : IN STD_LOGIC;
        connect_7_read : OUT STD_LOGIC;
        B_ROW_3_load : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_500u_10u_Pipeline_L2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_8_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_full_n : IN STD_LOGIC;
        connect_8_write : OUT STD_LOGIC;
        B_COL_3_load : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_empty_n : IN STD_LOGIC;
        connect_7_read : OUT STD_LOGIC;
        connect_8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_8_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_full_n : IN STD_LOGIC;
        connect_8_write : OUT STD_LOGIC;
        valIn_a_53 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln73_2 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_empty_n : IN STD_LOGIC;
        connect_7_read : OUT STD_LOGIC;
        connect_8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_8_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_8_full_n : IN STD_LOGIC;
        connect_8_write : OUT STD_LOGIC;
        KER_bound : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component LeNet_wrapper_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82 : component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start,
        ap_done => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done,
        ap_idle => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_idle,
        ap_ready => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready,
        connect_7_dout => connect_7_dout,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_empty_n => connect_7_empty_n,
        connect_7_read => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read,
        B_ROW_3_load => B_ROW_3);

    grp_FC_1u_500u_10u_Pipeline_L2_fu_89 : component LeNet_wrapper_FC_1u_500u_10u_Pipeline_L2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start,
        ap_done => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done,
        ap_idle => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_idle,
        ap_ready => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready,
        connect_8_din => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din,
        connect_8_num_data_valid => ap_const_lv7_0,
        connect_8_fifo_cap => ap_const_lv7_0,
        connect_8_full_n => connect_8_full_n,
        connect_8_write => grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write,
        B_COL_3_load => B_COL_3_load_load_fu_170_p1);

    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96 : component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start,
        ap_done => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done,
        ap_idle => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_idle,
        ap_ready => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready,
        connect_7_dout => connect_7_dout,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_empty_n => connect_7_empty_n,
        connect_7_read => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read,
        connect_8_din => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din,
        connect_8_num_data_valid => ap_const_lv7_0,
        connect_8_fifo_cap => ap_const_lv7_0,
        connect_8_full_n => connect_8_full_n,
        connect_8_write => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write,
        valIn_a_53 => valIn_a_35_reg_230,
        mul_ln73_2 => reg_127);

    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106 : component LeNet_wrapper_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start,
        ap_done => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done,
        ap_idle => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_idle,
        ap_ready => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready,
        connect_7_dout => connect_7_dout,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_empty_n => connect_7_empty_n,
        connect_7_read => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read,
        connect_8_din => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din,
        connect_8_num_data_valid => ap_const_lv7_0,
        connect_8_fifo_cap => ap_const_lv7_0,
        connect_8_full_n => connect_8_full_n,
        connect_8_write => grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write,
        KER_bound => KER_bound_reg_294);

    mul_32ns_32ns_64_2_1_U387 : component LeNet_wrapper_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_115_p0,
        din1 => grp_fu_115_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_115_p2);

    mul_32s_32s_32_2_1_U388 : component LeNet_wrapper_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_119_p0,
        din1 => grp_fu_119_p1,
        ce => grp_fu_119_ce,
        dout => grp_fu_119_p2);

    mul_32s_32s_32_2_1_U389 : component LeNet_wrapper_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => valIn_a_33_reg_216,
        din1 => valIn_a_34_reg_224,
        ce => grp_fu_123_ce,
        dout => grp_fu_123_p2);

    mul_32s_32s_32_1_1_U390 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_35_reg_230,
        din1 => valIn_a_33_reg_216,
        dout => KER_size_0_fu_153_p2);

    mul_32s_32s_32_1_1_U391 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_33_reg_216,
        din1 => KER_size_0_reg_255,
        dout => KER_size_1_fu_199_p2);

    mul_32s_32s_32_1_1_U392 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_34_reg_224,
        din1 => KER_size_1_reg_289,
        dout => KER_bound_fu_203_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_boolean_0 = ap_block_state21_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln92_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (valIn_a_31_reg_207 = ap_const_lv32_0))) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_pred287_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then 
                indvar_flatten6_fu_64 <= ap_const_lv64_0;
            elsif (((icmp_ln92_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (valIn_a_31_reg_207 = ap_const_lv32_0))) then 
                indvar_flatten6_fu_64 <= add_ln92_fu_182_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_pred285_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                B_COL_3 <= valIn_a_35_reg_230;
                OFMDim_current_3 <= valIn_a_36_reg_237;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                B_COL_3_load_load_fu_170_p1 <= B_COL_3;
                bound4_reg_276 <= grp_fu_115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                B_ROW_3 <= grp_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                KER_bound_reg_294 <= KER_bound_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                KER_size_0_reg_255 <= KER_size_0_fu_153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                KER_size_1_reg_289 <= KER_size_1_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                    ap_predicate_pred285_state8 <= (valIn_a_31_reg_207 = ap_const_lv32_4);
                    ap_predicate_pred287_state8 <= (valIn_a_31_reg_207 = ap_const_lv32_0);
                    ap_predicate_pred289_state8 <= (not((valIn_a_31_reg_207 = ap_const_lv32_0)) and not((valIn_a_31_reg_207 = ap_const_lv32_4)));
                valIn_a_36_reg_237 <= connect_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                mul_ln73_reg_284 <= grp_fu_123_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                reg_127 <= grp_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                valIn_a_31_reg_207 <= connect_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                valIn_a_32_reg_211 <= connect_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                valIn_a_33_reg_216 <= connect_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                valIn_a_34_reg_224 <= connect_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                valIn_a_35_reg_230 <= connect_7_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_31_reg_207, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done, grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln92_fu_177_p2, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state21, ap_predicate_pred285_state8, ap_predicate_pred287_state8, ap_block_state5, ap_block_state21_on_subcall_done, ap_predicate_pred289_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_predicate_pred289_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((ap_predicate_pred285_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_predicate_pred287_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and ((not((valIn_a_31_reg_207 = ap_const_lv32_0)) and not((valIn_a_31_reg_207 = ap_const_lv32_4))) or (not((valIn_a_31_reg_207 = ap_const_lv32_4)) and (icmp_ln92_fu_177_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((icmp_ln92_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (valIn_a_31_reg_207 = ap_const_lv32_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_boolean_0 = ap_block_state21_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln92_fu_182_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_64) + unsigned(ap_const_lv64_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done)
    begin
        if ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done)
    begin
        if ((grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(ap_block_state21_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state21_on_subcall_done)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4)
    begin
        if ((ap_const_boolean_1 = ap_block_state4)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5)
    begin
        if ((ap_const_boolean_1 = ap_block_state5)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7)
    begin
        if ((ap_const_boolean_1 = ap_block_state7)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8)
    begin
        if ((ap_const_boolean_1 = ap_block_state8)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state1 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done, ap_predicate_op77_call_state12)
    begin
                ap_block_state12_on_subcall_done <= ((ap_predicate_op77_call_state12 = ap_const_boolean_1) and (grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state2 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state21_on_subcall_done_assign_proc : process(valIn_a_31_reg_207, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done)
    begin
                ap_block_state21_on_subcall_done <= ((grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_done = ap_const_logic_0) and (valIn_a_31_reg_207 = ap_const_lv32_4));
    end process;


    ap_block_state3_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state3 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state4 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state5 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state6 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state7 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(connect_7_empty_n, connect_8_full_n)
    begin
                ap_block_state8 <= ((connect_8_full_n = ap_const_logic_0) or (connect_7_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state21, ap_block_state21_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_boolean_0 = ap_block_state21_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op77_call_state12_assign_proc : process(valIn_a_31_reg_207)
    begin
                ap_predicate_op77_call_state12 <= (not((valIn_a_31_reg_207 = ap_const_lv32_0)) and not((valIn_a_31_reg_207 = ap_const_lv32_4)));
    end process;

    ap_ready <= internal_ap_ready;

    connect_7_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_7_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_7_blk_n <= connect_7_empty_n;
        else 
            connect_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_7_read_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_31_reg_207, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read, ap_CS_fsm_state12, ap_predicate_op77_call_state12, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)))) then 
            connect_7_read <= ap_const_logic_1;
        elsif (((ap_predicate_op77_call_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_7_read <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_7_read;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (valIn_a_31_reg_207 = ap_const_lv32_4))) then 
            connect_7_read <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_7_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            connect_7_read <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_connect_7_read;
        else 
            connect_7_read <= ap_const_logic_0;
        end if; 
    end process;


    connect_8_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_8_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_8_blk_n <= connect_8_full_n;
        else 
            connect_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_8_din_assign_proc : process(ap_CS_fsm_state1, connect_7_dout, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_31_reg_207, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din, ap_CS_fsm_state12, ap_predicate_op77_call_state12, ap_CS_fsm_state16, ap_CS_fsm_state21, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)))) then 
            connect_8_din <= connect_7_dout;
        elsif (((ap_predicate_op77_call_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_8_din <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (valIn_a_31_reg_207 = ap_const_lv32_4))) then 
            connect_8_din <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            connect_8_din <= grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_din;
        else 
            connect_8_din <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_din;
        end if; 
    end process;


    connect_8_write_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_31_reg_207, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write, grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write, ap_CS_fsm_state12, ap_predicate_op77_call_state12, ap_CS_fsm_state16, ap_CS_fsm_state21, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)))) then 
            connect_8_write <= ap_const_logic_1;
        elsif (((ap_predicate_op77_call_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_8_write <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_connect_8_write;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (valIn_a_31_reg_207 = ap_const_lv32_4))) then 
            connect_8_write <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_connect_8_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            connect_8_write <= grp_FC_1u_500u_10u_Pipeline_L2_fu_89_connect_8_write;
        else 
            connect_8_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start <= grp_FC_1u_500u_10u_Pipeline_L2_fu_89_ap_start_reg;
    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_136_7_fu_106_ap_start_reg;
    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_96_ap_start_reg;
    grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start <= grp_FC_1u_500u_10u_Pipeline_VITIS_LOOP_99_6_fu_82_ap_start_reg;
    grp_fu_115_p0 <= grp_fu_115_p00(32 - 1 downto 0);
    grp_fu_115_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(valIn_a_32_reg_211),64));
    grp_fu_115_p1 <= grp_fu_115_p10(32 - 1 downto 0);
    grp_fu_115_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_127),64));

    grp_fu_119_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_block_state8, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            grp_fu_119_ce <= ap_const_logic_1;
        else 
            grp_fu_119_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_119_p0_assign_proc : process(OFMDim_current_3, ap_CS_fsm_state8, mul_ln73_reg_284, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_119_p0 <= mul_ln73_reg_284;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_119_p0 <= OFMDim_current_3;
        else 
            grp_fu_119_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_119_p1_assign_proc : process(OFMDim_current_3, ap_CS_fsm_state8, valIn_a_33_reg_216, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_119_p1 <= valIn_a_33_reg_216;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_119_p1 <= OFMDim_current_3;
        else 
            grp_fu_119_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_123_ce_assign_proc : process(ap_CS_fsm_state8, ap_block_state8, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            grp_fu_123_ce <= ap_const_logic_1;
        else 
            grp_fu_123_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln92_fu_177_p2 <= "1" when (indvar_flatten6_fu_64 = bound4_reg_276) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state21, ap_block_state21_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_boolean_0 = ap_block_state21_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
