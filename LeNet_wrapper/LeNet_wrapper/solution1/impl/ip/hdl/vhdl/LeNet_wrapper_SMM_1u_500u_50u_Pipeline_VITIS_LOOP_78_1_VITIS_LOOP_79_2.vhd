-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_SMM_1u_500u_50u_Pipeline_VITIS_LOOP_78_1_VITIS_LOOP_79_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    connect_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_4_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_4_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_4_empty_n : IN STD_LOGIC;
    connect_4_read : OUT STD_LOGIC;
    connect_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    connect_5_full_n : IN STD_LOGIC;
    connect_5_write : OUT STD_LOGIC;
    valIn_a_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln75_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_ce1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_we1 : OUT STD_LOGIC;
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_ce1 : OUT STD_LOGIC;
    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_we1 : OUT STD_LOGIC;
    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of LeNet_wrapper_SMM_1u_500u_50u_Pipeline_VITIS_LOOP_78_1_VITIS_LOOP_79_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_61A8 : STD_LOGIC_VECTOR (14 downto 0) := "110000110101000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv19_2E9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001011101001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv12_2E : STD_LOGIC_VECTOR (11 downto 0) := "000000101110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal or_ln82_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_606_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln78_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal connect_5_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal connect_4_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln79_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_580_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln78_fu_395_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln78_reg_585 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln82_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_reg_591_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_596 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_596_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln82_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_606_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln79_fu_508_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_615 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln84_2_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_120 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal add_ln79_fu_419_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (8 downto 0);
    signal i_4_fu_124 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln78_1_fu_463_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_fu_128 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal add_ln78_1_fu_380_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln84_fu_526_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_407_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln79_fu_438_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln79_fu_438_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln79_fu_438_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln78_fu_457_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln78_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ult_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln82_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_407_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_541_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_541_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_541_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_541_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_407_ce : STD_LOGIC;
    signal grp_fu_541_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_541_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_541_p20 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln79_fu_438_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_condition_654 : BOOLEAN;
    signal ap_condition_657 : BOOLEAN;
    signal ap_condition_660 : BOOLEAN;
    signal ap_condition_663 : BOOLEAN;
    signal ap_condition_666 : BOOLEAN;
    signal ap_condition_669 : BOOLEAN;
    signal ap_condition_672 : BOOLEAN;
    signal ap_condition_675 : BOOLEAN;
    signal ap_condition_678 : BOOLEAN;
    signal ap_condition_681 : BOOLEAN;
    signal ap_condition_684 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_urem_9ns_5ns_4_13_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component LeNet_wrapper_mul_9ns_11ns_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component LeNet_wrapper_mac_muladd_6ns_6ns_6ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component LeNet_wrapper_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    urem_9ns_5ns_4_13_1_U271 : component LeNet_wrapper_urem_9ns_5ns_4_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 5,
        dout_WIDTH => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln78_fu_395_p3,
        din1 => grp_fu_407_p1,
        ce => grp_fu_407_ce,
        dout => grp_fu_407_p2);

    mul_9ns_11ns_19_1_1_U272 : component LeNet_wrapper_mul_9ns_11ns_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        din0 => mul_ln79_fu_438_p0,
        din1 => mul_ln79_fu_438_p1,
        dout => mul_ln79_fu_438_p2);

    mac_muladd_6ns_6ns_6ns_12_4_1_U273 : component LeNet_wrapper_mac_muladd_6ns_6ns_6ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_541_p0,
        din1 => grp_fu_541_p1,
        din2 => grp_fu_541_p2,
        ce => grp_fu_541_ce,
        dout => grp_fu_541_p3);

    flow_control_loop_pipe_sequential_init_U : component LeNet_wrapper_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_4_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    i_4_fu_124 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter10 = ap_const_logic_1)) then 
                    i_4_fu_124 <= select_ln78_1_fu_463_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln78_fu_374_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_128 <= add_ln78_1_fu_380_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_128 <= ap_const_lv15_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln78_fu_374_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_120 <= add_ln79_fu_419_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_120 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln79_reg_580_pp0_iter2_reg <= icmp_ln79_reg_580_pp0_iter1_reg;
                icmp_ln79_reg_580_pp0_iter3_reg <= icmp_ln79_reg_580_pp0_iter2_reg;
                icmp_ln79_reg_580_pp0_iter4_reg <= icmp_ln79_reg_580_pp0_iter3_reg;
                icmp_ln79_reg_580_pp0_iter5_reg <= icmp_ln79_reg_580_pp0_iter4_reg;
                icmp_ln79_reg_580_pp0_iter6_reg <= icmp_ln79_reg_580_pp0_iter5_reg;
                icmp_ln79_reg_580_pp0_iter7_reg <= icmp_ln79_reg_580_pp0_iter6_reg;
                icmp_ln79_reg_580_pp0_iter8_reg <= icmp_ln79_reg_580_pp0_iter7_reg;
                icmp_ln79_reg_580_pp0_iter9_reg <= icmp_ln79_reg_580_pp0_iter8_reg;
                icmp_ln82_reg_591_pp0_iter2_reg <= icmp_ln82_reg_591_pp0_iter1_reg;
                icmp_ln82_reg_591_pp0_iter3_reg <= icmp_ln82_reg_591_pp0_iter2_reg;
                icmp_ln82_reg_591_pp0_iter4_reg <= icmp_ln82_reg_591_pp0_iter3_reg;
                icmp_ln82_reg_591_pp0_iter5_reg <= icmp_ln82_reg_591_pp0_iter4_reg;
                icmp_ln82_reg_591_pp0_iter6_reg <= icmp_ln82_reg_591_pp0_iter5_reg;
                icmp_ln82_reg_591_pp0_iter7_reg <= icmp_ln82_reg_591_pp0_iter6_reg;
                icmp_ln82_reg_591_pp0_iter8_reg <= icmp_ln82_reg_591_pp0_iter7_reg;
                icmp_ln82_reg_591_pp0_iter9_reg <= icmp_ln82_reg_591_pp0_iter8_reg;
                or_ln82_reg_606 <= or_ln82_fu_494_p2;
                or_ln82_reg_606_pp0_iter11_reg <= or_ln82_reg_606;
                or_ln82_reg_606_pp0_iter12_reg <= or_ln82_reg_606_pp0_iter11_reg;
                tmp_reg_596_pp0_iter10_reg <= tmp_reg_596_pp0_iter9_reg;
                tmp_reg_596_pp0_iter11_reg <= tmp_reg_596_pp0_iter10_reg;
                tmp_reg_596_pp0_iter2_reg <= tmp_reg_596;
                tmp_reg_596_pp0_iter3_reg <= tmp_reg_596_pp0_iter2_reg;
                tmp_reg_596_pp0_iter4_reg <= tmp_reg_596_pp0_iter3_reg;
                tmp_reg_596_pp0_iter5_reg <= tmp_reg_596_pp0_iter4_reg;
                tmp_reg_596_pp0_iter6_reg <= tmp_reg_596_pp0_iter5_reg;
                tmp_reg_596_pp0_iter7_reg <= tmp_reg_596_pp0_iter6_reg;
                tmp_reg_596_pp0_iter8_reg <= tmp_reg_596_pp0_iter7_reg;
                tmp_reg_596_pp0_iter9_reg <= tmp_reg_596_pp0_iter8_reg;
                trunc_ln79_reg_615 <= trunc_ln79_fu_508_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln79_reg_580 <= icmp_ln79_fu_389_p2;
                icmp_ln79_reg_580_pp0_iter1_reg <= icmp_ln79_reg_580;
                icmp_ln82_reg_591 <= icmp_ln82_fu_413_p2;
                icmp_ln82_reg_591_pp0_iter1_reg <= icmp_ln82_reg_591;
                select_ln78_reg_585 <= select_ln78_fu_395_p3;
                tmp_reg_596 <= mul_ln79_fu_438_p2(18 downto 13);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln78_1_fu_380_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv15_1));
    add_ln78_fu_457_p2 <= std_logic_vector(unsigned(i_4_fu_124) + unsigned(ap_const_lv6_1));
    add_ln79_fu_419_p2 <= std_logic_vector(unsigned(select_ln78_fu_395_p3) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_state14_pp0_stage0_iter13)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage0_iter13));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_state14_pp0_stage0_iter13)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage0_iter13));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_state14_pp0_stage0_iter13)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage0_iter13));
    end process;


    ap_block_state14_pp0_stage0_iter13_assign_proc : process(connect_4_empty_n, or_ln82_reg_606_pp0_iter12_reg, connect_5_full_n)
    begin
                ap_block_state14_pp0_stage0_iter13 <= (((connect_5_full_n = ap_const_logic_0) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) or ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (connect_4_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_654_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_654 <= (not((trunc_ln79_reg_615 = ap_const_lv4_0)) and not((trunc_ln79_reg_615 = ap_const_lv4_1)) and not((trunc_ln79_reg_615 = ap_const_lv4_2)) and not((trunc_ln79_reg_615 = ap_const_lv4_3)) and not((trunc_ln79_reg_615 = ap_const_lv4_4)) and not((trunc_ln79_reg_615 = ap_const_lv4_5)) and not((trunc_ln79_reg_615 = ap_const_lv4_6)) and not((trunc_ln79_reg_615 = ap_const_lv4_7)) and not((trunc_ln79_reg_615 = ap_const_lv4_8)) and not((trunc_ln79_reg_615 = ap_const_lv4_9)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1));
    end process;


    ap_condition_657_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_657 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_8));
    end process;


    ap_condition_660_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_660 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_7));
    end process;


    ap_condition_663_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_663 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_6));
    end process;


    ap_condition_666_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_666 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_5));
    end process;


    ap_condition_669_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_669 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_4));
    end process;


    ap_condition_672_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_672 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_3));
    end process;


    ap_condition_675_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_675 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_2));
    end process;


    ap_condition_678_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_678 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_1));
    end process;


    ap_condition_681_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_681 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_0));
    end process;


    ap_condition_684_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, trunc_ln79_reg_615)
    begin
                ap_condition_684 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_9));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln78_fu_374_p2)
    begin
        if (((icmp_ln78_fu_374_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_120, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_120;
        end if; 
    end process;


    connect_4_blk_n_assign_proc : process(ap_enable_reg_pp0_iter13, connect_4_empty_n, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            connect_4_blk_n <= connect_4_empty_n;
        else 
            connect_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_4_read_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            connect_4_read <= ap_const_logic_1;
        else 
            connect_4_read <= ap_const_logic_0;
        end if; 
    end process;


    connect_5_blk_n_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, connect_5_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            connect_5_blk_n <= connect_5_full_n;
        else 
            connect_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    connect_5_din <= connect_4_dout;

    connect_5_write_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            connect_5_write <= ap_const_logic_1;
        else 
            connect_5_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_407_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_407_ce <= ap_const_logic_1;
        else 
            grp_fu_407_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_407_p1 <= ap_const_lv9_B(5 - 1 downto 0);

    grp_fu_541_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_541_ce <= ap_const_logic_1;
        else 
            grp_fu_541_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_541_p0 <= grp_fu_541_p00(6 - 1 downto 0);
    grp_fu_541_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_1_fu_463_p3),12));
    grp_fu_541_p1 <= ap_const_lv12_2E(6 - 1 downto 0);
    grp_fu_541_p2 <= grp_fu_541_p20(6 - 1 downto 0);
    grp_fu_541_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_596_pp0_iter11_reg),12));
    icmp_ln78_fu_374_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv15_61A8) else "0";
    icmp_ln79_fu_389_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv9_1F4) else "0";
    icmp_ln82_fu_413_p2 <= "1" when (unsigned(zext_ln79_fu_403_p1) < unsigned(mul_ln75_1)) else "0";
    mul_ln79_fu_438_p0 <= mul_ln79_fu_438_p00(9 - 1 downto 0);
    mul_ln79_fu_438_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_reg_585),19));
    mul_ln79_fu_438_p1 <= ap_const_lv19_2E9(11 - 1 downto 0);
    or_ln82_fu_494_p2 <= (xor_ln82_fu_489_p2 or rev_fu_483_p2);
    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if (((not((trunc_ln79_reg_615 = ap_const_lv4_0)) and not((trunc_ln79_reg_615 = ap_const_lv4_1)) and not((trunc_ln79_reg_615 = ap_const_lv4_2)) and not((trunc_ln79_reg_615 = ap_const_lv4_3)) and not((trunc_ln79_reg_615 = ap_const_lv4_4)) and not((trunc_ln79_reg_615 = ap_const_lv4_5)) and not((trunc_ln79_reg_615 = ap_const_lv4_6)) and not((trunc_ln79_reg_615 = ap_const_lv4_7)) and not((trunc_ln79_reg_615 = ap_const_lv4_8)) and not((trunc_ln79_reg_615 = ap_const_lv4_9)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or (not((trunc_ln79_reg_615 = ap_const_lv4_0)) and not((trunc_ln79_reg_615 = ap_const_lv4_1)) and not((trunc_ln79_reg_615 = ap_const_lv4_2)) and not((trunc_ln79_reg_615 = ap_const_lv4_3)) and not((trunc_ln79_reg_615 = ap_const_lv4_4)) and not((trunc_ln79_reg_615 = ap_const_lv4_5)) and not((trunc_ln79_reg_615 = ap_const_lv4_6)) and not((trunc_ln79_reg_615 = ap_const_lv4_7)) and not((trunc_ln79_reg_615 
    = ap_const_lv4_8)) and not((trunc_ln79_reg_615 = ap_const_lv4_9)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)))) then 
            p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_ce1 <= ap_const_logic_1;
        else 
            p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_654)
    begin
        if ((ap_const_boolean_1 = ap_condition_654)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1 <= trunc_ln84_fu_526_p1;
            else 
                p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1 <= "XXXXXXXX";
            end if;
        else 
            p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_d1 <= "XXXXXXXX";
        end if; 
    end process;


    p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if (((not((trunc_ln79_reg_615 = ap_const_lv4_0)) and not((trunc_ln79_reg_615 = ap_const_lv4_1)) and not((trunc_ln79_reg_615 = ap_const_lv4_2)) and not((trunc_ln79_reg_615 = ap_const_lv4_3)) and not((trunc_ln79_reg_615 = ap_const_lv4_4)) and not((trunc_ln79_reg_615 = ap_const_lv4_5)) and not((trunc_ln79_reg_615 = ap_const_lv4_6)) and not((trunc_ln79_reg_615 = ap_const_lv4_7)) and not((trunc_ln79_reg_615 = ap_const_lv4_8)) and not((trunc_ln79_reg_615 = ap_const_lv4_9)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or (not((trunc_ln79_reg_615 = ap_const_lv4_0)) and not((trunc_ln79_reg_615 = ap_const_lv4_1)) and not((trunc_ln79_reg_615 = ap_const_lv4_2)) and not((trunc_ln79_reg_615 = ap_const_lv4_3)) and not((trunc_ln79_reg_615 = ap_const_lv4_4)) and not((trunc_ln79_reg_615 = ap_const_lv4_5)) and not((trunc_ln79_reg_615 = ap_const_lv4_6)) and not((trunc_ln79_reg_615 = ap_const_lv4_7)) and not((trunc_ln79_reg_615 
    = ap_const_lv4_8)) and not((trunc_ln79_reg_615 = ap_const_lv4_9)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)))) then 
            p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_we1 <= ap_const_logic_1;
        else 
            p_ZZ3SMMILj1ELj500ELj50EEvRN3hls6streamI6ap_intILi32EELi0EEES5_jjiE1B_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    rev_fu_483_p2 <= (ult_fu_478_p2 xor ap_const_lv1_1);
    select_ln78_1_fu_463_p3 <= 
        add_ln78_fu_457_p2 when (icmp_ln79_reg_580_pp0_iter9_reg(0) = '1') else 
        i_4_fu_124;
    select_ln78_fu_395_p3 <= 
        ap_const_lv9_0 when (icmp_ln79_fu_389_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln79_fu_508_p1 <= grp_fu_407_p2(4 - 1 downto 0);
    trunc_ln84_fu_526_p1 <= connect_4_dout(8 - 1 downto 0);
    ult_fu_478_p2 <= "1" when (unsigned(zext_ln78_fu_474_p1) < unsigned(valIn_a_15)) else "0";
    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_8)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_657)
    begin
        if ((ap_const_boolean_1 = ap_condition_657)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_8)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_7)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_660)
    begin
        if ((ap_const_boolean_1 = ap_condition_660)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_7)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_6)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_663)
    begin
        if ((ap_const_boolean_1 = ap_condition_663)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_6)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_666)
    begin
        if ((ap_const_boolean_1 = ap_condition_666)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_5)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_669)
    begin
        if ((ap_const_boolean_1 = ap_condition_669)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_4)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_672)
    begin
        if ((ap_const_boolean_1 = ap_condition_672)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_3)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_675)
    begin
        if ((ap_const_boolean_1 = ap_condition_675)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_2)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_678)
    begin
        if ((ap_const_boolean_1 = ap_condition_678)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_1)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_681)
    begin
        if ((ap_const_boolean_1 = ap_condition_681)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_0)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_address1 <= zext_ln84_2_fu_512_p1(12 - 1 downto 0);

    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_9)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_ce1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1_assign_proc : process(or_ln82_reg_606_pp0_iter12_reg, trunc_ln84_fu_526_p1, ap_condition_684)
    begin
        if ((ap_const_boolean_1 = ap_condition_684)) then
            if ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1 <= ap_const_lv8_0;
            elsif ((or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0)) then 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1 <= trunc_ln84_fu_526_p1;
            else 
                void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1 <= "XXXXXXXX";
            end if;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_d1 <= "XXXXXXXX";
        end if; 
    end process;


    void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_we1_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln82_reg_606_pp0_iter12_reg, ap_block_pp0_stage0_11001, trunc_ln79_reg_615)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln82_reg_606_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (trunc_ln79_reg_615 = ap_const_lv4_9)))) then 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_we1 <= ap_const_logic_1;
        else 
            void_SMM_stream_stream_ap_int_32_0_unsigned_int_unsigned_int_int_B_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln82_fu_489_p2 <= (icmp_ln82_reg_591_pp0_iter9_reg xor ap_const_lv1_1);
    zext_ln78_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_1_fu_463_p3),32));
    zext_ln79_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln78_fu_395_p3),32));
    zext_ln84_2_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_541_p3),64));
end behav;
