-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LeNet_wrapper_FC_1u_800u_500u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    connect_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_6_empty_n : IN STD_LOGIC;
    connect_6_read : OUT STD_LOGIC;
    connect_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    connect_7_full_n : IN STD_LOGIC;
    connect_7_write : OUT STD_LOGIC );
end;


architecture behav of LeNet_wrapper_FC_1u_800u_500u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv42_320 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001100100000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal B_COL_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110100";
    signal B_ROW_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    signal OFMDim_current_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_ce0 : STD_LOGIC;
    signal B_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_ce1 : STD_LOGIC;
    signal B_we1 : STD_LOGIC;
    signal A_ce0 : STD_LOGIC;
    signal A_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal A_ce1 : STD_LOGIC;
    signal A_we1 : STD_LOGIC;
    signal connect_6_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal connect_7_blk_n : STD_LOGIC;
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal valIn_a_22_reg_237 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal valIn_a_23_reg_241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal valIn_a_24_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal valIn_a_25_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal valIn_a_26_reg_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal valIn_a_27_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal KER_size_0_fu_178_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_0_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_139_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal bound4_reg_308 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_135_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound11_reg_313 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln73_reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal KER_size_1_fu_229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_size_1_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal KER_bound_fu_233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_idle : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_ready : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_connect_6_read : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_ce1 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_we1 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_idle : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_ready : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_write : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_ce0 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_ce0 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_done : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_idle : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_ready : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_6_read : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_write : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_address1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_ce1 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_we1 : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_done : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_idle : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_ready : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_6_read : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_write : STD_LOGIC;
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal B_ROW_2_load_load_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_NS_fsm_state16 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state21 : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_predicate_pred366_state8 : BOOLEAN;
    signal ap_predicate_pred381_state8 : BOOLEAN;
    signal indvar_flatten13_fu_76 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln92_fu_212_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_op82_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal icmp_ln92_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal grp_fu_135_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_144_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fu_144_ce : STD_LOGIC;
    signal grp_fu_148_ce : STD_LOGIC;
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_predicate_pred383_state8 : BOOLEAN;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal grp_fu_135_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_135_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_empty_n : IN STD_LOGIC;
        connect_6_read : OUT STD_LOGIC;
        B_ROW_4_load : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_we1 : OUT STD_LOGIC;
        A_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_800u_500u_Pipeline_L2_L3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_full_n : IN STD_LOGIC;
        connect_7_write : OUT STD_LOGIC;
        bound4 : IN STD_LOGIC_VECTOR (41 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_empty_n : IN STD_LOGIC;
        connect_6_read : OUT STD_LOGIC;
        connect_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_full_n : IN STD_LOGIC;
        connect_7_write : OUT STD_LOGIC;
        valIn_a_41 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln73_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address1 : OUT STD_LOGIC_VECTOR (18 downto 0);
        B_ce1 : OUT STD_LOGIC;
        B_we1 : OUT STD_LOGIC;
        B_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        connect_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        connect_6_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_6_empty_n : IN STD_LOGIC;
        connect_6_read : OUT STD_LOGIC;
        connect_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        connect_7_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        connect_7_full_n : IN STD_LOGIC;
        connect_7_write : OUT STD_LOGIC;
        KER_bound : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component LeNet_wrapper_mul_32ns_11ns_42_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component LeNet_wrapper_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_800u_500u_s_B_RAM_S2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component LeNet_wrapper_FC_1u_800u_500u_s_A_RAM_S2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    B_U : component LeNet_wrapper_FC_1u_800u_500u_s_B_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 400000,
        AddressWidth => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_address0,
        ce0 => B_ce0,
        q0 => B_q0,
        address1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_address1,
        ce1 => B_ce1,
        we1 => B_we1,
        d1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_d1);

    A_U : component LeNet_wrapper_FC_1u_800u_500u_s_A_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_address0,
        ce0 => A_ce0,
        q0 => A_q0,
        address1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_address1,
        ce1 => A_ce1,
        we1 => A_we1,
        d1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_d1);

    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94 : component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start,
        ap_done => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done,
        ap_idle => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_idle,
        ap_ready => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_ready,
        connect_6_dout => connect_6_dout,
        connect_6_num_data_valid => ap_const_lv7_0,
        connect_6_fifo_cap => ap_const_lv7_0,
        connect_6_empty_n => connect_6_empty_n,
        connect_6_read => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_connect_6_read,
        B_ROW_4_load => B_ROW_2_load_load_fu_200_p1,
        A_address1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_address1,
        A_ce1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_ce1,
        A_we1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_we1,
        A_d1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_d1);

    grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103 : component LeNet_wrapper_FC_1u_800u_500u_Pipeline_L2_L3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start,
        ap_done => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done,
        ap_idle => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_idle,
        ap_ready => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_ready,
        connect_7_din => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_din,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_full_n => connect_7_full_n,
        connect_7_write => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_write,
        bound4 => bound4_reg_308,
        A_address0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_address0,
        A_ce0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_ce0,
        A_q0 => A_q0,
        B_address0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_address0,
        B_ce0 => grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_ce0,
        B_q0 => B_q0);

    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114 : component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start,
        ap_done => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_done,
        ap_idle => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_idle,
        ap_ready => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_ready,
        connect_6_dout => connect_6_dout,
        connect_6_num_data_valid => ap_const_lv7_0,
        connect_6_fifo_cap => ap_const_lv7_0,
        connect_6_empty_n => connect_6_empty_n,
        connect_6_read => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_6_read,
        connect_7_din => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_din,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_full_n => connect_7_full_n,
        connect_7_write => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_write,
        valIn_a_41 => valIn_a_26_reg_260,
        mul_ln73_1 => reg_152,
        B_address1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_address1,
        B_ce1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_ce1,
        B_we1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_we1,
        B_d1 => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_d1);

    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126 : component LeNet_wrapper_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start,
        ap_done => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_done,
        ap_idle => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_idle,
        ap_ready => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_ready,
        connect_6_dout => connect_6_dout,
        connect_6_num_data_valid => ap_const_lv7_0,
        connect_6_fifo_cap => ap_const_lv7_0,
        connect_6_empty_n => connect_6_empty_n,
        connect_6_read => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_6_read,
        connect_7_din => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_din,
        connect_7_num_data_valid => ap_const_lv7_0,
        connect_7_fifo_cap => ap_const_lv7_0,
        connect_7_full_n => connect_7_full_n,
        connect_7_write => grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_write,
        KER_bound => KER_bound_reg_331);

    mul_32ns_32ns_64_2_1_U364 : component LeNet_wrapper_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_135_p0,
        din1 => grp_fu_135_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_135_p2);

    mul_32ns_11ns_42_2_1_U365 : component LeNet_wrapper_mul_32ns_11ns_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_139_p0,
        din1 => grp_fu_139_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_139_p2);

    mul_32s_32s_32_2_1_U366 : component LeNet_wrapper_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_144_p0,
        din1 => grp_fu_144_p1,
        ce => grp_fu_144_ce,
        dout => grp_fu_144_p2);

    mul_32s_32s_32_2_1_U367 : component LeNet_wrapper_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => valIn_a_24_reg_246,
        din1 => valIn_a_25_reg_254,
        ce => grp_fu_148_ce,
        dout => grp_fu_148_p2);

    mul_32s_32s_32_1_1_U368 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_26_reg_260,
        din1 => valIn_a_24_reg_246,
        dout => KER_size_0_fu_178_p2);

    mul_32s_32s_32_1_1_U369 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_24_reg_246,
        din1 => KER_size_0_reg_285,
        dout => KER_size_1_fu_229_p2);

    mul_32s_32s_32_1_1_U370 : component LeNet_wrapper_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => valIn_a_25_reg_254,
        din1 => KER_size_1_reg_326,
        dout => KER_bound_fu_233_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_const_boolean_0 = ap_block_state22_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state16) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state21) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_ready = ap_const_logic_1)) then 
                    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten13_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_pred381_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then 
                indvar_flatten13_fu_76 <= ap_const_lv64_0;
            elsif (((icmp_ln92_fu_207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (valIn_a_22_reg_237 = ap_const_lv32_0))) then 
                indvar_flatten13_fu_76 <= add_ln92_fu_212_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_pred366_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                B_COL_2 <= valIn_a_26_reg_260;
                OFMDim_current_2 <= valIn_a_27_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                B_ROW_2 <= grp_fu_144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                B_ROW_2_load_load_fu_200_p1 <= B_ROW_2;
                bound11_reg_313 <= grp_fu_135_p2;
                bound4_reg_308 <= grp_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                KER_bound_reg_331 <= KER_bound_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                KER_size_0_reg_285 <= KER_size_0_fu_178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                KER_size_1_reg_326 <= KER_size_1_fu_229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                    ap_predicate_pred366_state8 <= (valIn_a_22_reg_237 = ap_const_lv32_3);
                    ap_predicate_pred381_state8 <= (valIn_a_22_reg_237 = ap_const_lv32_0);
                    ap_predicate_pred383_state8 <= (not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3)));
                valIn_a_27_reg_267 <= connect_6_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                mul_ln73_reg_321 <= grp_fu_148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                reg_152 <= grp_fu_144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                valIn_a_22_reg_237 <= connect_6_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                valIn_a_23_reg_241 <= connect_6_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                valIn_a_24_reg_246 <= connect_6_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                valIn_a_25_reg_254 <= connect_6_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                valIn_a_26_reg_260 <= connect_6_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_22_reg_237, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done, grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state12, ap_predicate_pred366_state8, ap_predicate_pred381_state8, ap_block_state12_on_subcall_done, icmp_ln92_fu_207_p2, ap_block_state5, ap_block_state22_on_subcall_done, ap_predicate_pred383_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_predicate_pred383_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_predicate_pred366_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_predicate_pred381_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and ((not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3))) or (not((valIn_a_22_reg_237 = ap_const_lv32_3)) and (icmp_ln92_fu_207_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((icmp_ln92_fu_207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (valIn_a_22_reg_237 = ap_const_lv32_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_const_boolean_0 = ap_block_state22_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_ce0_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_ce0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_ce0 <= grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            A_ce1 <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_we1_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_we1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            A_we1 <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_A_we1;
        else 
            A_we1 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce0_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_ce0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            B_ce0 <= grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_B_ce0;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce1_assign_proc : process(valIn_a_22_reg_237, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_ce1, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (valIn_a_22_reg_237 = ap_const_lv32_3))) then 
            B_ce1 <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_ce1;
        else 
            B_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_we1_assign_proc : process(valIn_a_22_reg_237, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_we1, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (valIn_a_22_reg_237 = ap_const_lv32_3))) then 
            B_we1 <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_B_we1;
        else 
            B_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln92_fu_212_p2 <= std_logic_vector(unsigned(indvar_flatten13_fu_76) + unsigned(ap_const_lv64_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state16 <= ap_NS_fsm(15);
    ap_NS_fsm_state21 <= ap_NS_fsm(20);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done)
    begin
        if ((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done)
    begin
        if ((grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(ap_block_state22_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state22_on_subcall_done)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4)
    begin
        if ((ap_const_boolean_1 = ap_block_state4)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5)
    begin
        if ((ap_const_boolean_1 = ap_block_state5)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7)
    begin
        if ((ap_const_boolean_1 = ap_block_state7)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8)
    begin
        if ((ap_const_boolean_1 = ap_block_state8)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state1 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_done, ap_predicate_op82_call_state12)
    begin
                ap_block_state12_on_subcall_done <= ((ap_predicate_op82_call_state12 = ap_const_boolean_1) and (grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state2 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(valIn_a_22_reg_237, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_done)
    begin
                ap_block_state22_on_subcall_done <= ((grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_done = ap_const_logic_0) and (valIn_a_22_reg_237 = ap_const_lv32_3));
    end process;


    ap_block_state3_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state3 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state4 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state5 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state6 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state7 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(connect_6_empty_n, connect_7_full_n)
    begin
                ap_block_state8 <= ((connect_7_full_n = ap_const_logic_0) or (connect_6_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state22, ap_block_state22_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_const_boolean_0 = ap_block_state22_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op82_call_state12_assign_proc : process(valIn_a_22_reg_237)
    begin
                ap_predicate_op82_call_state12 <= (not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3)));
    end process;

    ap_ready <= internal_ap_ready;

    connect_6_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_6_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_6_blk_n <= connect_6_empty_n;
        else 
            connect_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_6_read_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_22_reg_237, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_connect_6_read, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_6_read, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_6_read, ap_CS_fsm_state14, ap_CS_fsm_state22, ap_CS_fsm_state12, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_6_read <= ap_const_logic_1;
        elsif ((not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3)) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_6_read <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_6_read;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (valIn_a_22_reg_237 = ap_const_lv32_3))) then 
            connect_6_read <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_6_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            connect_6_read <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_connect_6_read;
        else 
            connect_6_read <= ap_const_logic_0;
        end if; 
    end process;


    connect_7_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, connect_7_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            connect_7_blk_n <= connect_7_full_n;
        else 
            connect_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    connect_7_din_assign_proc : process(ap_CS_fsm_state1, connect_6_dout, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_22_reg_237, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_din, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_din, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_din, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state12, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_7_din <= connect_6_dout;
        elsif ((not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3)) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_7_din <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_din;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (valIn_a_22_reg_237 = ap_const_lv32_3))) then 
            connect_7_din <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            connect_7_din <= grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_din;
        else 
            connect_7_din <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_din;
        end if; 
    end process;


    connect_7_write_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, valIn_a_22_reg_237, ap_block_state1, ap_block_state2, ap_block_state3, ap_block_state4, ap_block_state6, ap_block_state7, ap_block_state8, grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_write, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_write, grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_write, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state12, ap_block_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2)))) then 
            connect_7_write <= ap_const_logic_1;
        elsif ((not((valIn_a_22_reg_237 = ap_const_lv32_0)) and not((valIn_a_22_reg_237 = ap_const_lv32_3)) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            connect_7_write <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_connect_7_write;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (valIn_a_22_reg_237 = ap_const_lv32_3))) then 
            connect_7_write <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_connect_7_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            connect_7_write <= grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_connect_7_write;
        else 
            connect_7_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start <= grp_FC_1u_800u_500u_Pipeline_L2_L3_fu_103_ap_start_reg;
    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_136_7_fu_126_ap_start_reg;
    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_76_1_VITIS_LOOP_77_2_fu_114_ap_start_reg;
    grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start <= grp_FC_1u_800u_500u_Pipeline_VITIS_LOOP_99_6_fu_94_ap_start_reg;
    grp_fu_135_p0 <= grp_fu_135_p00(32 - 1 downto 0);
    grp_fu_135_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(valIn_a_23_reg_241),64));
    grp_fu_135_p1 <= grp_fu_135_p10(32 - 1 downto 0);
    grp_fu_135_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_152),64));
    grp_fu_139_p0 <= grp_fu_139_p00(32 - 1 downto 0);
    grp_fu_139_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_COL_2),42));
    grp_fu_139_p1 <= ap_const_lv42_320(11 - 1 downto 0);

    grp_fu_144_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state20, ap_block_state8, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            grp_fu_144_ce <= ap_const_logic_1;
        else 
            grp_fu_144_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_144_p0_assign_proc : process(OFMDim_current_2, ap_CS_fsm_state8, mul_ln73_reg_321, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_144_p0 <= mul_ln73_reg_321;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_144_p0 <= OFMDim_current_2;
        else 
            grp_fu_144_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_p1_assign_proc : process(OFMDim_current_2, ap_CS_fsm_state8, valIn_a_24_reg_246, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_144_p1 <= valIn_a_24_reg_246;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_144_p1 <= OFMDim_current_2;
        else 
            grp_fu_144_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_148_ce_assign_proc : process(ap_CS_fsm_state8, ap_block_state8, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8)))) then 
            grp_fu_148_ce <= ap_const_logic_1;
        else 
            grp_fu_148_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln92_fu_207_p2 <= "1" when (indvar_flatten13_fu_76 = bound11_reg_313) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state22, ap_block_state22_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_const_boolean_0 = ap_block_state22_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
