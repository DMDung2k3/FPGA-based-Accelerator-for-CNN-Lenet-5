// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LeNet_wrapper_SCIG_5u_1u_28u_20u_24u_0u_Pipeline_VITIS_LOOP_123_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        connect_0_dout,
        connect_0_num_data_valid,
        connect_0_fifo_cap,
        connect_0_empty_n,
        connect_0_read,
        connect_1_din,
        connect_1_num_data_valid,
        connect_1_fifo_cap,
        connect_1_full_n,
        connect_1_write,
        mul36
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] connect_0_dout;
input  [6:0] connect_0_num_data_valid;
input  [6:0] connect_0_fifo_cap;
input   connect_0_empty_n;
output   connect_0_read;
output  [31:0] connect_1_din;
input  [6:0] connect_1_num_data_valid;
input  [6:0] connect_1_fifo_cap;
input   connect_1_full_n;
output   connect_1_write;
input  [31:0] mul36;

reg ap_idle;
reg connect_0_read;
reg connect_1_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln123_reg_623;
reg   [0:0] icmp_ln126_reg_627;
reg   [0:0] or_ln129_reg_631;
reg    ap_predicate_op107_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln153_reg_639;
reg   [0:0] icmp_ln153_reg_639_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln123_fu_229_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    connect_0_blk_n;
wire    ap_block_pp0_stage0;
reg    connect_1_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] inp_8_reg_618;
wire   [0:0] icmp_ln126_fu_268_p2;
wire   [0:0] or_ln129_fu_286_p2;
wire   [0:0] icmp_ln145_fu_306_p2;
wire   [0:0] icmp_ln153_fu_347_p2;
reg   [0:0] icmp_ln153_reg_639_pp0_iter2_reg;
wire   [13:0] input_ind_fu_394_p2;
reg   [13:0] input_ind_reg_643;
reg   [13:0] input_ind_reg_643_pp0_iter2_reg;
wire   [0:0] icmp_ln163_fu_406_p2;
wire   [0:0] icmp_ln166_fu_426_p2;
wire   [0:0] icmp_ln169_fu_451_p2;
wire   [13:0] inputBuf_address0;
reg    inputBuf_ce0;
reg    inputBuf_we0;
wire   [13:0] inputBuf_address1;
reg    inputBuf_ce1;
wire   [7:0] inputBuf_q1;
reg   [31:0] ap_phi_mux_inp_1_phi_fu_137_p6;
wire   [31:0] inp_9_fu_292_p2;
wire   [31:0] ap_phi_reg_pp0_iter1_inp_1_reg_134;
reg   [31:0] ap_phi_mux_inp_6_phi_fu_148_p10;
wire   [31:0] inp_10_fu_487_p3;
wire   [31:0] ap_phi_reg_pp0_iter1_inp_6_reg_145;
reg   [7:0] ap_phi_mux_storemerge_phi_fu_168_p4;
wire   [7:0] trunc_ln137_fu_529_p1;
reg   [7:0] ap_phi_reg_pp0_iter2_storemerge_reg_164;
wire   [7:0] ap_phi_reg_pp0_iter0_storemerge_reg_164;
reg   [7:0] ap_phi_reg_pp0_iter1_storemerge_reg_164;
wire   [63:0] zext_ln141_fu_534_p1;
wire   [63:0] zext_ln159_fu_538_p1;
reg   [31:0] i_fu_56;
wire   [31:0] i_14_fu_234_p2;
wire    ap_loop_init;
reg   [31:0] oy_fu_60;
wire   [31:0] oy_4_fu_496_p3;
reg   [31:0] ox_fu_64;
wire   [31:0] ox_2_fu_445_p2;
reg   [31:0] ky_fu_68;
wire   [31:0] ky_2_fu_420_p2;
reg   [31:0] inp_i_fu_72;
wire   [31:0] inp_i_8_fu_329_p3;
reg   [31:0] inp_fu_76;
reg   [31:0] kx_fu_80;
wire   [31:0] kx_2_fu_400_p2;
reg   [31:0] inp_j_fu_84;
wire   [31:0] inp_j_5_fu_300_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln129_fu_274_p2;
wire   [0:0] icmp_ln129_2_fu_280_p2;
wire   [31:0] inp_i_7_fu_317_p2;
wire   [0:0] icmp_ln148_fu_323_p2;
wire   [11:0] trunc_ln123_6_fu_264_p1;
wire   [11:0] trunc_ln123_5_fu_260_p1;
wire   [11:0] add_ln156_fu_356_p2;
wire   [8:0] trunc_ln156_fu_362_p1;
wire   [13:0] shl_ln_fu_366_p3;
wire   [13:0] shl_ln156_1_fu_374_p3;
wire   [13:0] trunc_ln123_fu_252_p1;
wire   [13:0] sub_ln156_fu_382_p2;
wire   [13:0] add_ln156_1_fu_388_p2;
wire   [13:0] trunc_ln123_4_fu_256_p1;
wire   [31:0] oy_3_fu_475_p2;
wire   [0:0] icmp_ln172_fu_481_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op113_store_state3;
reg    ap_enable_operation_113;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_116;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_117;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_239;
reg    ap_condition_179;
reg    ap_condition_516;
reg    ap_condition_522;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 i_fu_56 = 32'd0;
#0 oy_fu_60 = 32'd0;
#0 ox_fu_64 = 32'd0;
#0 ky_fu_68 = 32'd0;
#0 inp_i_fu_72 = 32'd0;
#0 inp_fu_76 = 32'd0;
#0 kx_fu_80 = 32'd0;
#0 inp_j_fu_84 = 32'd0;
#0 ap_done_reg = 1'b0;
end

LeNet_wrapper_SCIG_5u_1u_28u_20u_24u_0u_Pipeline_VITIS_LOOP_123_1_inputBuf_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10500 ),
    .AddressWidth( 14 ))
inputBuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_address0),
    .ce0(inputBuf_ce0),
    .we0(inputBuf_we0),
    .d0(ap_phi_mux_storemerge_phi_fu_168_p4),
    .address1(inputBuf_address1),
    .ce1(inputBuf_ce1),
    .q1(inputBuf_q1)
);

LeNet_wrapper_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_179)) begin
        if ((1'b1 == ap_condition_239)) begin
            ap_phi_reg_pp0_iter2_storemerge_reg_164 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_reg_164 <= ap_phi_reg_pp0_iter1_storemerge_reg_164;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_56 <= 32'd0;
        end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_56 <= i_14_fu_234_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inp_fu_76 <= 32'd0;
        end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            inp_fu_76 <= ap_phi_mux_inp_6_phi_fu_148_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inp_i_fu_72 <= 32'd0;
        end else if ((1'b1 == ap_condition_516)) begin
            inp_i_fu_72 <= inp_i_8_fu_329_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln145_fu_306_p2 == 1'd1) & (icmp_ln126_fu_268_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inp_j_fu_84 <= 32'd0;
    end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln145_fu_306_p2 == 1'd0) & (icmp_ln126_fu_268_p2 == 1'd1))) begin
        inp_j_fu_84 <= inp_j_5_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln169_fu_451_p2 == 1'd0) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_fu_426_p2 == 1'd0) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln169_fu_451_p2 == 1'd1) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kx_fu_80 <= 32'd0;
    end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln163_fu_406_p2 == 1'd0) & (icmp_ln153_fu_347_p2 == 1'd1))) begin
        kx_fu_80 <= kx_2_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ky_fu_68 <= 32'd0;
    end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_fu_426_p2 == 1'd0) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1))) begin
        ky_fu_68 <= ky_2_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln169_fu_451_p2 == 1'd1) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ox_fu_64 <= 32'd0;
    end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln169_fu_451_p2 == 1'd0) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1))) begin
        ox_fu_64 <= ox_2_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            oy_fu_60 <= 32'd0;
        end else if ((1'b1 == ap_condition_522)) begin
            oy_fu_60 <= oy_4_fu_496_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln123_reg_623 <= icmp_ln123_fu_229_p2;
        icmp_ln126_reg_627 <= icmp_ln126_fu_268_p2;
        icmp_ln153_reg_639 <= icmp_ln153_fu_347_p2;
        inp_8_reg_618 <= inp_fu_76;
        input_ind_reg_643 <= input_ind_fu_394_p2;
        or_ln129_reg_631 <= or_ln129_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln153_reg_639_pp0_iter2_reg <= icmp_ln153_reg_639;
        icmp_ln153_reg_639_pp0_iter3_reg <= icmp_ln153_reg_639_pp0_iter2_reg;
        input_ind_reg_643_pp0_iter2_reg <= input_ind_reg_643;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_164 <= ap_phi_reg_pp0_iter0_storemerge_reg_164;
    end
end

always @ (*) begin
    if (((icmp_ln123_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln126_fu_268_p2 == 1'd0))) begin
        ap_phi_mux_inp_1_phi_fu_137_p6 = inp_fu_76;
    end else if ((((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln145_fu_306_p2 == 1'd0) & (icmp_ln126_fu_268_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln145_fu_306_p2 == 1'd1) & (icmp_ln126_fu_268_p2 == 1'd1)))) begin
        ap_phi_mux_inp_1_phi_fu_137_p6 = inp_9_fu_292_p2;
    end else begin
        ap_phi_mux_inp_1_phi_fu_137_p6 = ap_phi_reg_pp0_iter1_inp_1_reg_134;
    end
end

always @ (*) begin
    if ((((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln169_fu_451_p2 == 1'd0) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln166_fu_426_p2 == 1'd0) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln163_fu_406_p2 == 1'd0) & (icmp_ln153_fu_347_p2 == 1'd1)) | ((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln153_fu_347_p2 == 1'd0)))) begin
        ap_phi_mux_inp_6_phi_fu_148_p10 = ap_phi_mux_inp_1_phi_fu_137_p6;
    end else if (((icmp_ln123_fu_229_p2 == 1'd0) & (icmp_ln169_fu_451_p2 == 1'd1) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1))) begin
        ap_phi_mux_inp_6_phi_fu_148_p10 = inp_10_fu_487_p3;
    end else begin
        ap_phi_mux_inp_6_phi_fu_148_p10 = ap_phi_reg_pp0_iter1_inp_6_reg_145;
    end
end

always @ (*) begin
    if (((or_ln129_reg_631 == 1'd0) & (icmp_ln126_reg_627 == 1'd1) & (icmp_ln123_reg_623 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_168_p4 = trunc_ln137_fu_529_p1;
    end else begin
        ap_phi_mux_storemerge_phi_fu_168_p4 = ap_phi_reg_pp0_iter2_storemerge_reg_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op107_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        connect_0_blk_n = connect_0_empty_n;
    end else begin
        connect_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op107_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        connect_0_read = 1'b1;
    end else begin
        connect_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln153_reg_639_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        connect_1_blk_n = connect_1_full_n;
    end else begin
        connect_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln153_reg_639_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        connect_1_write = 1'b1;
    end else begin
        connect_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inputBuf_ce0 = 1'b1;
    end else begin
        inputBuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        inputBuf_ce1 = 1'b1;
    end else begin
        inputBuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln126_reg_627 == 1'd1) & (icmp_ln123_reg_623 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inputBuf_we0 = 1'b1;
    end else begin
        inputBuf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln156_1_fu_388_p2 = (trunc_ln123_fu_252_p1 + sub_ln156_fu_382_p2);

assign add_ln156_fu_356_p2 = (trunc_ln123_6_fu_264_p1 + trunc_ln123_5_fu_260_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op107_read_state3 == 1'b1) & (connect_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((icmp_ln153_reg_639_pp0_iter3_reg == 1'd1) & (connect_1_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_179 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_239 = ((icmp_ln123_fu_229_p2 == 1'd0) & (or_ln129_fu_286_p2 == 1'd1) & (icmp_ln126_fu_268_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_516 = ((icmp_ln123_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln145_fu_306_p2 == 1'd1) & (icmp_ln126_fu_268_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_522 = ((icmp_ln123_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln169_fu_451_p2 == 1'd1) & (icmp_ln166_fu_426_p2 == 1'd1) & (icmp_ln163_fu_406_p2 == 1'd1) & (icmp_ln153_fu_347_p2 == 1'd1));
end

always @ (*) begin
    ap_enable_operation_113 = (ap_predicate_op113_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_116 = (icmp_ln153_reg_639_pp0_iter2_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_117 = (icmp_ln153_reg_639_pp0_iter3_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_164 = 'bx;

assign ap_phi_reg_pp0_iter1_inp_1_reg_134 = 'bx;

assign ap_phi_reg_pp0_iter1_inp_6_reg_145 = 'bx;

always @ (*) begin
    ap_predicate_op107_read_state3 = ((or_ln129_reg_631 == 1'd0) & (icmp_ln126_reg_627 == 1'd1) & (icmp_ln123_reg_623 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_store_state3 = ((icmp_ln126_reg_627 == 1'd1) & (icmp_ln123_reg_623 == 1'd0));
end

assign connect_1_din = $signed(inputBuf_q1);

assign i_14_fu_234_p2 = (i_fu_56 + 32'd1);

assign icmp_ln123_fu_229_p2 = ((i_fu_56 == mul36) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_268_p2 = ((inp_fu_76 < 32'd784) ? 1'b1 : 1'b0);

assign icmp_ln129_2_fu_280_p2 = ((inp_j_fu_84 > 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_274_p2 = ((inp_i_fu_72 > 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_306_p2 = ((inp_j_5_fu_300_p2 == 32'd28) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_323_p2 = ((inp_i_7_fu_317_p2 == 32'd28) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_347_p2 = ((ap_phi_mux_inp_1_phi_fu_137_p6 > 32'd168) ? 1'b1 : 1'b0);

assign icmp_ln163_fu_406_p2 = ((kx_2_fu_400_p2 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_426_p2 = ((ky_2_fu_420_p2 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_451_p2 = ((ox_2_fu_445_p2 == 32'd24) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_481_p2 = ((oy_3_fu_475_p2 == 32'd24) ? 1'b1 : 1'b0);

assign inp_10_fu_487_p3 = ((icmp_ln172_fu_481_p2[0:0] == 1'b1) ? 32'd0 : ap_phi_mux_inp_1_phi_fu_137_p6);

assign inp_9_fu_292_p2 = (inp_fu_76 + 32'd1);

assign inp_i_7_fu_317_p2 = (inp_i_fu_72 + 32'd1);

assign inp_i_8_fu_329_p3 = ((icmp_ln148_fu_323_p2[0:0] == 1'b1) ? 32'd0 : inp_i_7_fu_317_p2);

assign inp_j_5_fu_300_p2 = (inp_j_fu_84 + 32'd1);

assign inputBuf_address0 = zext_ln141_fu_534_p1;

assign inputBuf_address1 = zext_ln159_fu_538_p1;

assign input_ind_fu_394_p2 = (add_ln156_1_fu_388_p2 + trunc_ln123_4_fu_256_p1);

assign kx_2_fu_400_p2 = (kx_fu_80 + 32'd1);

assign ky_2_fu_420_p2 = (ky_fu_68 + 32'd1);

assign or_ln129_fu_286_p2 = (icmp_ln129_fu_274_p2 | icmp_ln129_2_fu_280_p2);

assign ox_2_fu_445_p2 = (ox_fu_64 + 32'd1);

assign oy_3_fu_475_p2 = (oy_fu_60 + 32'd1);

assign oy_4_fu_496_p3 = ((icmp_ln172_fu_481_p2[0:0] == 1'b1) ? 32'd0 : oy_3_fu_475_p2);

assign shl_ln156_1_fu_374_p3 = {{add_ln156_fu_356_p2}, {2'd0}};

assign shl_ln_fu_366_p3 = {{trunc_ln156_fu_362_p1}, {5'd0}};

assign sub_ln156_fu_382_p2 = (shl_ln_fu_366_p3 - shl_ln156_1_fu_374_p3);

assign trunc_ln123_4_fu_256_p1 = ox_fu_64[13:0];

assign trunc_ln123_5_fu_260_p1 = ky_fu_68[11:0];

assign trunc_ln123_6_fu_264_p1 = oy_fu_60[11:0];

assign trunc_ln123_fu_252_p1 = kx_fu_80[13:0];

assign trunc_ln137_fu_529_p1 = connect_0_dout[7:0];

assign trunc_ln156_fu_362_p1 = add_ln156_fu_356_p2[8:0];

assign zext_ln141_fu_534_p1 = inp_8_reg_618;

assign zext_ln159_fu_538_p1 = input_ind_reg_643_pp0_iter2_reg;

endmodule //LeNet_wrapper_SCIG_5u_1u_28u_20u_24u_0u_Pipeline_VITIS_LOOP_123_1
